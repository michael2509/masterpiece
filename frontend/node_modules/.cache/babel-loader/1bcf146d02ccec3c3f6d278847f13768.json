{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\src\\\\Room\\\\RoomsContainer.jsx\";\nimport React, { Component } from 'react';\nimport RoomList from './RoomList/RoomList';\nimport AddRoom from './RoomForms/AddRoom';\nimport { createChat, deleteRoom, getRoomListPage, openUpdateRoom, closeUpdateRoom, updateRoom, fetchMoreRooms } from \"./redux/roomActions\";\nimport { connect } from \"react-redux\";\nimport { isLogged } from '../Auth/authService';\nimport UpdateRoom from './RoomForms/UpdateRoom';\nimport Container from '@material-ui/core/Container';\n\nclass RoomsContainer extends Component {\n  componentDidMount() {\n    this.props.getRoomListPage(0);\n  }\n\n  render() {\n    const _this$props = this.props,\n          chatState = _this$props.chatState,\n          createChat = _this$props.createChat,\n          deleteRoom = _this$props.deleteRoom,\n          getRoomListPage = _this$props.getRoomListPage,\n          openUpdateRoom = _this$props.openUpdateRoom,\n          closeUpdateRoom = _this$props.closeUpdateRoom,\n          updateRoom = _this$props.updateRoom,\n          fetchMoreRooms = _this$props.fetchMoreRooms,\n          history = _this$props.history;\n    const roomListPage = chatState.roomListPage,\n          pageNumber = chatState.pageNumber,\n          totalPages = chatState.totalPages,\n          updatechatState = chatState.updatechatState,\n          last = chatState.last;\n    const logged = isLogged();\n\n    if (!logged) {\n      history.push(\"/connexion\");\n    }\n\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"md\",\n      style: {\n        minHeight: `calc(100vh - 150px)`,\n        marginTop: 150\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(RoomList, {\n      totalPages: totalPages,\n      roomListPage: roomListPage,\n      getRoomListPage: getRoomListPage,\n      pageNumber: pageNumber,\n      deleteRoom: deleteRoom,\n      openUpdateRoom: openUpdateRoom,\n      fetchMoreRooms: fetchMoreRooms,\n      last: last,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(AddRoom, {\n      createChat: createChat,\n      getRoomListPage: getRoomListPage,\n      pageNumber: pageNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(UpdateRoom, {\n      state: updatechatState,\n      handleClose: closeUpdateRoom,\n      updateRoom: updateRoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  chatState: state.rooms,\n  navbarState: state.navbar\n});\n\nconst mapDispatchToProps = dispatch => ({\n  createChat: room => dispatch(createChat(room)),\n  updateRoom: room => dispatch(updateRoom(room)),\n  deleteRoom: roomId => dispatch(deleteRoom(roomId)),\n  getRoomListPage: pageNumber => dispatch(getRoomListPage(pageNumber)),\n  fetchMoreRooms: pageNumber => dispatch(fetchMoreRooms(pageNumber)),\n  openUpdateRoom: room => dispatch(openUpdateRoom(room)),\n  closeUpdateRoom: () => dispatch(closeUpdateRoom())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomsContainer);","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Room/RoomsContainer.jsx"],"names":["React","Component","RoomList","AddRoom","createChat","deleteRoom","getRoomListPage","openUpdateRoom","closeUpdateRoom","updateRoom","fetchMoreRooms","connect","isLogged","UpdateRoom","Container","RoomsContainer","componentDidMount","props","render","chatState","history","roomListPage","pageNumber","totalPages","updatechatState","last","logged","push","minHeight","marginTop","mapStateToProps","state","rooms","navbarState","navbar","mapDispatchToProps","dispatch","room","roomId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport RoomList from './RoomList/RoomList';\r\nimport AddRoom from './RoomForms/AddRoom';\r\nimport { createChat, deleteRoom, getRoomListPage, openUpdateRoom, closeUpdateRoom, updateRoom, fetchMoreRooms } from \"./redux/roomActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { isLogged } from '../Auth/authService';\r\nimport UpdateRoom from './RoomForms/UpdateRoom';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nclass RoomsContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getRoomListPage(0);\r\n    }\r\n\r\n    render() {\r\n        const { chatState, createChat, deleteRoom, getRoomListPage, openUpdateRoom, closeUpdateRoom, updateRoom, fetchMoreRooms, history } = this.props;\r\n        const { roomListPage, pageNumber, totalPages, updatechatState, last } = chatState;\r\n\r\n        const logged = isLogged();\r\n\r\n        if (!logged) {\r\n            history.push(\"/connexion\")\r\n        }\r\n\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"md\" style={{ minHeight: `calc(100vh - 150px)`, marginTop: 150}}>\r\n                <RoomList totalPages={totalPages} roomListPage={roomListPage} getRoomListPage={getRoomListPage} pageNumber={pageNumber} deleteRoom={deleteRoom} openUpdateRoom={openUpdateRoom} fetchMoreRooms={fetchMoreRooms} last={last} />\r\n                <AddRoom createChat={createChat} getRoomListPage={getRoomListPage} pageNumber={pageNumber} />\r\n                <UpdateRoom state={updatechatState} handleClose={closeUpdateRoom} updateRoom={updateRoom} />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ chatState: state.rooms, navbarState: state.navbar });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    createChat: (room) => dispatch(createChat(room)),\r\n    updateRoom: (room) => dispatch(updateRoom(room)),\r\n    deleteRoom: (roomId) => dispatch(deleteRoom(roomId)),\r\n    getRoomListPage: (pageNumber) => dispatch(getRoomListPage(pageNumber)),\r\n    fetchMoreRooms: (pageNumber) => dispatch(fetchMoreRooms(pageNumber)),\r\n    openUpdateRoom: (room) => dispatch(openUpdateRoom(room)),\r\n    closeUpdateRoom: () => dispatch(closeUpdateRoom()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomsContainer);"]},"metadata":{},"sourceType":"module"}