{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\src\\\\Message\\\\AddMessage.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { withRouter } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  roomNameInput: {\n    marginBottom: theme.spacing(4)\n  },\n  datePicker: {\n    width: 250,\n    marginBottom: theme.spacing(2)\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(5),\n    right: theme.spacing(5),\n    textTransform: 'none'\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst AddMessageForm = props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit,\n        isSubmitting = props.isSubmitting,\n        setSubmitting = props.setSubmitting;\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleClickOpen = () => {\n    setSubmitting(false);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    onClick: handleClickOpen,\n    className: classes.fab,\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    variant: \"extended\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    className: classes.extendedIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), \"Nouveau message\"), React.createElement(Dialog, {\n    open: isSubmitting ? false : open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    disableBackdropClick: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Envoyer un nouveau message\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"message\",\n    label: \"Votre message\",\n    type: \"text\",\n    fullWidth: true,\n    className: classes.roomNameInput,\n    value: values.message,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.message ? errors.message : \"\",\n    error: touched.message && Boolean(errors.message),\n    variant: \"outlined\",\n    multiline: true,\n    rows: 4,\n    margin: \"dense\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClose,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Annuler\"), React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Cr\\xE9er\")))));\n};\n\nconst AddMessage = withFormik({\n  mapPropsToValues: ({\n    message\n  }) => ({\n    message: message || \"\"\n  }),\n  validationSchema: Yup.object().shape({\n    message: Yup.string().max(255, \"Votre message ne peut pas dépasser 255 caractères\").required(\"Votre message ne peut être vide\")\n  }),\n  handleSubmit: (values, {\n    props,\n    resetForm,\n    setSubmitting\n  }) => {\n    // Get sockjs client, match, username from props\n    const sockJsClient = props.sockJsClient,\n          match = props.match,\n          roomId = props.roomId,\n          senderName = props.senderName,\n          senderType = props.senderType; // Get room's id from url\n    // const roomId = match.params.id\n    // Build message obj to be send to the API\n\n    console.log(\"message : \" + values);\n    console.log(\"roomId : \" + roomId);\n    console.log(\"senderName : \" + senderName);\n    console.log(\"senderType : \" + senderType);\n\n    const message = _objectSpread({}, values, {\n      roomId,\n      senderName,\n      senderType\n    }); // Use sock js client to send message to API\n\n\n    sockJsClient.sendMessage('/app/user-all', JSON.stringify(message)); // Reset form\n\n    resetForm(); // Close form\n\n    setSubmitting(true);\n  }\n})(AddMessageForm);\nexport default withRouter(AddMessage);","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Message/AddMessage.jsx"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Fab","AddIcon","makeStyles","withFormik","Yup","withRouter","useStyles","theme","roomNameInput","marginBottom","spacing","datePicker","width","fab","position","bottom","right","textTransform","extendedIcon","marginRight","AddMessageForm","props","values","touched","errors","handleChange","handleBlur","handleSubmit","isSubmitting","setSubmitting","classes","useState","open","setOpen","handleClickOpen","handleClose","message","Boolean","AddMessage","mapPropsToValues","validationSchema","object","shape","string","max","required","resetForm","sockJsClient","match","roomId","senderName","senderType","console","log","sendMessage","JSON","stringify"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    roomNameInput: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    datePicker: {\r\n        width: 250,\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(5),\r\n        right: theme.spacing(5),\r\n        textTransform: 'none'\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setSubmitting\r\n    } = props;        \r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setSubmitting(false);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n        \r\n    return (\r\n        <div>\r\n        <Fab onClick={handleClickOpen} className={classes.fab} color=\"primary\" aria-label=\"add\" variant=\"extended\">\r\n            <AddIcon className={classes.extendedIcon} />\r\n            Nouveau message\r\n        </Fab>\r\n        <Dialog open={isSubmitting ? false : open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick>\r\n            <form onSubmit={handleSubmit}>\r\n                <DialogTitle id=\"form-dialog-title\">Envoyer un nouveau message</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        id=\"message\"\r\n                        label=\"Votre message\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        className={classes.roomNameInput}\r\n                        value={values.message}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={touched.message ? errors.message : \"\"}\r\n                        error={touched.message && Boolean(errors.message)}\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={4}\r\n                        margin=\"dense\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button color=\"primary\" onClick={handleClose} variant=\"outlined\">\r\n                    Annuler\r\n                </Button>\r\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                    Créer\r\n                </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddMessage = withFormik({\r\n    mapPropsToValues: ({\r\n        message\r\n    }) => ({\r\n        message: message || \"\"\r\n    }),\r\n\r\n    validationSchema: Yup.object().shape({\r\n        message: Yup.string()\r\n            .max(255, \"Votre message ne peut pas dépasser 255 caractères\")\r\n            .required(\"Votre message ne peut être vide\")\r\n    }),\r\n    handleSubmit: (values, { props, resetForm, setSubmitting }) => {\r\n        // Get sockjs client, match, username from props\r\n        const { sockJsClient, match, roomId, senderName, senderType } = props;\r\n        // Get room's id from url\r\n        // const roomId = match.params.id\r\n        // Build message obj to be send to the API\r\n\r\n        console.log(\"message : \" + values);\r\n        console.log(\"roomId : \" + roomId);\r\n        console.log(\"senderName : \" + senderName);\r\n        console.log(\"senderType : \" + senderType);\r\n        const message = { ...values, roomId, senderName, senderType };\r\n\r\n        // Use sock js client to send message to API\r\n        sockJsClient.sendMessage('/app/user-all', JSON.stringify(message));\r\n        // Reset form\r\n        resetForm();\r\n        // Close form\r\n        setSubmitting(true);\r\n    }\r\n})(AddMessageForm)\r\n\r\nexport default withRouter(AddMessage);"]},"metadata":{},"sourceType":"module"}