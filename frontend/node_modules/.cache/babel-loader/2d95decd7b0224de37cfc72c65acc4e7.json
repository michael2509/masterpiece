{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\src\\\\Auth\\\\Login\\\\LoginForm.jsx\";\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { Paper } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport { withFormik } from \"formik\";\nimport label from '../../global/configs/label';\nimport { login } from \"../authService\";\nimport * as Yup from \"yup\";\nimport loginStyles from './loginStyles'; // Login form component\n\nfunction LoginForm(props) {\n  const classes = loginStyles();\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit;\n  return React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Se Connecter\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: classes.form,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"username\",\n    label: label.username,\n    name: \"username\",\n    autoComplete: \"username\",\n    autoFocus: true,\n    value: values.username,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.username ? errors.username : \"\",\n    error: touched.username && Boolean(errors.username),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: label.password,\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    value: values.password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.password ? errors.password : \"\",\n    error: touched.password && Boolean(errors.password),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Connexion\")), React.createElement(RouterLink, {\n    to: \"/inscription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Link, {\n    component: \"span\",\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Pas de compte ? Inscrivez vous\")));\n} // Login form with formik validation\n\n\nconst Login = withFormik({\n  mapPropsToValues: ({\n    username,\n    password\n  }) => {\n    return {\n      username: username || \"\",\n      password: password || \"\"\n    };\n  },\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"Entrez votre identifiant\"),\n    password: Yup.string().matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.:;?|/\\\\{}<>!@#$%^&*()_+-=])(?=.{8,})/, \"Doit contenir au moins 8 caractères, 1 minuscule, 1 majuscule, 1 chiffres, 1 caractère spécial\").required(\"Entrez votre mot de passe\")\n  }),\n  handleSubmit: (values, {\n    props,\n    resetForm\n  }) => {\n    const history = props.history,\n          openNotification = props.openNotification;\n    const username = values.username;\n    const password = values.password;\n    login(username, password).then(logged => {\n      if (logged) {\n        resetForm();\n        openNotification(`Bienvenue ${username}, vous êtes connecté`, \"success\");\n        history.push(\"/chats\");\n      } else {\n        openNotification(\"Informations de connexion invalides\", \"error\");\n      }\n    });\n  }\n})(LoginForm);\nexport default withRouter(Login);","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Auth/Login/LoginForm.jsx"],"names":["React","Avatar","Button","TextField","LockOutlinedIcon","Typography","Paper","Link","RouterLink","withRouter","withFormik","label","login","Yup","loginStyles","LoginForm","props","classes","values","touched","errors","handleChange","handleBlur","handleSubmit","paper","avatar","title","form","username","Boolean","password","submit","Login","mapPropsToValues","validationSchema","object","shape","string","required","matches","resetForm","history","openNotification","then","logged","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport { withFormik } from \"formik\";\r\nimport label from '../../global/configs/label';\r\nimport { login } from \"../authService\";\r\nimport * as Yup from \"yup\";\r\nimport loginStyles from './loginStyles';\r\n\r\n// Login form component\r\nfunction LoginForm(props) {\r\n\r\n    const classes = loginStyles();\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit\r\n    } = props;\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={5}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n                Se Connecter\r\n                </Typography>\r\n            <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    label={label.username}\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    autoFocus\r\n                    value={values.username}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.username ? errors.username : \"\"}\r\n                    error={touched.username && Boolean(errors.username)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label={label.password}\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.password ? errors.password : \"\"}\r\n                    error={touched.password && Boolean(errors.password)}\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    size=\"large\"\r\n                >\r\n                    Connexion\r\n                    </Button>\r\n            </form>\r\n            <RouterLink to={\"/inscription\"}>\r\n                <Link component=\"span\" variant=\"body2\">Pas de compte ? Inscrivez vous</Link>\r\n            </RouterLink>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n// Login form with formik validation\r\nconst Login = withFormik({\r\n    mapPropsToValues: ({\r\n        username,\r\n        password\r\n    }) => {\r\n        return {\r\n            username: username || \"\",\r\n            password: password || \"\",\r\n        };\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n        username: Yup.string()\r\n            .required(\"Entrez votre identifiant\"),\r\n        password: Yup.string()\r\n            .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.:;?|/\\\\{}<>!@#$%^&*()_+-=])(?=.{8,})/, \"Doit contenir au moins 8 caractères, 1 minuscule, 1 majuscule, 1 chiffres, 1 caractère spécial\")\r\n            .required(\"Entrez votre mot de passe\")\r\n    }),\r\n\r\n    handleSubmit: (values, { props, resetForm }) => {\r\n        const { history, openNotification } = props;\r\n\r\n        const username = values.username\r\n        const password = values.password\r\n\r\n        login(username, password).then(logged => {\r\n            if (logged) {\r\n                resetForm();\r\n                openNotification(`Bienvenue ${username}, vous êtes connecté`, \"success\")\r\n                history.push(\"/chats\");\r\n            } else {\r\n                openNotification(\"Informations de connexion invalides\", \"error\")\r\n            }\r\n        })\r\n    }\r\n})(LoginForm);\r\n\r\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}