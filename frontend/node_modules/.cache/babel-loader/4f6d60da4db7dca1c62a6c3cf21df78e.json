{"ast":null,"code":"import { ADD_MESSAGE, GET_MESSAGE_LIST } from \"./messageActionsTypes\";\nimport axios from \"axios\"; // Add message action\n\nexport const addMessage = (senderName, text) => ({\n  type: ADD_MESSAGE,\n  senderName: senderName,\n  text: text\n}); // Fetch messages actions\n\nexport const fetchMessageList = messageList => ({\n  type: GET_MESSAGE_LIST,\n  messageList: messageList\n}); // Format messages to keep only sender name and text\n\nconst formatMessages = messageList => {\n  const formattedMessageList = [];\n\n  for (const message of messageList) {\n    const formattedMessage = {\n      text: message.text,\n      senderName: null\n    };\n\n    if (message.speaker != null) {\n      formattedMessage.senderName = message.speaker.username;\n    }\n\n    if (message.guest != null) {\n      formattedMessage.senderName = message.guest.pseudo;\n    }\n\n    formattedMessageList.push(formattedMessage);\n  }\n\n  return formattedMessageList;\n}; // Get message list\n\n\nexport const getMessageList = chatId => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`http://localhost:8081/api/messages/chat/${chatId}`);\n      const messageList = response.data;\n      console.log(messageList);\n      const formattedMsgList = formatMessages(messageList);\n      console.log(\"get message list\");\n      console.log(formattedMsgList);\n      dispatch(fetchMessageList(formattedMsgList));\n    } catch (e) {\n      console.log(e);\n      return false;\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Message/messageActions.js"],"names":["ADD_MESSAGE","GET_MESSAGE_LIST","axios","addMessage","senderName","text","type","fetchMessageList","messageList","formatMessages","formattedMessageList","message","formattedMessage","speaker","username","guest","pseudo","push","getMessageList","chatId","dispatch","response","get","data","console","log","formattedMsgList","e"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,uBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,UAAD,EAAaC,IAAb,MAAuB;AAC7CC,EAAAA,IAAI,EAAEN,WADuC;AAE7CI,EAAAA,UAAU,EAAEA,UAFiC;AAG7CC,EAAAA,IAAI,EAAEA;AAHuC,CAAvB,CAAnB,C,CAMP;;AACA,OAAO,MAAME,gBAAgB,GAAIC,WAAD,KAAkB;AAC9CF,EAAAA,IAAI,EAAEL,gBADwC;AAE9CO,EAAAA,WAAW,EAAEA;AAFiC,CAAlB,CAAzB,C,CAKP;;AACA,MAAMC,cAAc,GAAID,WAAD,IAAiB;AACpC,QAAME,oBAAoB,GAAG,EAA7B;;AAEA,OAAK,MAAMC,OAAX,IAAsBH,WAAtB,EAAmC;AAC/B,UAAMI,gBAAgB,GAAG;AAAEP,MAAAA,IAAI,EAAEM,OAAO,CAACN,IAAhB;AAAsBD,MAAAA,UAAU,EAAE;AAAlC,KAAzB;;AACA,QAAIO,OAAO,CAACE,OAAR,IAAmB,IAAvB,EAA6B;AACzBD,MAAAA,gBAAgB,CAACR,UAAjB,GAA8BO,OAAO,CAACE,OAAR,CAAgBC,QAA9C;AACH;;AACD,QAAIH,OAAO,CAACI,KAAR,IAAiB,IAArB,EAA2B;AACvBH,MAAAA,gBAAgB,CAACR,UAAjB,GAA8BO,OAAO,CAACI,KAAR,CAAcC,MAA5C;AACH;;AACDN,IAAAA,oBAAoB,CAACO,IAArB,CAA0BL,gBAA1B;AACH;;AAED,SAAOF,oBAAP;AACH,CAfD,C,CAiBA;;;AACA,OAAO,MAAMQ,cAAc,GAAIC,MAAD,IAAY;AACtC,SAAO,MAAOC,QAAP,IAAoB;AACvB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAW,2CAA0CH,MAAO,EAA5D,CAAvB;AACA,YAAMX,WAAW,GAAGa,QAAQ,CAACE,IAA7B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,WAAZ;AACA,YAAMkB,gBAAgB,GAAGjB,cAAc,CAACD,WAAD,CAAvC;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYC,gBAAZ;AACAN,MAAAA,QAAQ,CAACb,gBAAgB,CAACmB,gBAAD,CAAjB,CAAR;AACH,KARD,CAQE,OAAMC,CAAN,EAAS;AACPH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACA,aAAO,KAAP;AACH;AACJ,GAbD;AAcH,CAfM","sourcesContent":["import { ADD_MESSAGE, GET_MESSAGE_LIST } from \"./messageActionsTypes\"\r\nimport axios from \"axios\";\r\n\r\n// Add message action\r\nexport const addMessage = (senderName, text) => ({\r\n    type: ADD_MESSAGE,\r\n    senderName: senderName,\r\n    text: text\r\n})\r\n\r\n// Fetch messages actions\r\nexport const fetchMessageList = (messageList) => ({\r\n    type: GET_MESSAGE_LIST,\r\n    messageList: messageList\r\n})\r\n\r\n// Format messages to keep only sender name and text\r\nconst formatMessages = (messageList) => {\r\n    const formattedMessageList = [];\r\n\r\n    for (const message of messageList) {\r\n        const formattedMessage = { text: message.text, senderName: null }\r\n        if (message.speaker != null) {\r\n            formattedMessage.senderName = message.speaker.username\r\n        }\r\n        if (message.guest != null) {\r\n            formattedMessage.senderName = message.guest.pseudo\r\n        }\r\n        formattedMessageList.push(formattedMessage)\r\n    }\r\n\r\n    return formattedMessageList;\r\n}\r\n\r\n// Get message list\r\nexport const getMessageList = (chatId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8081/api/messages/chat/${chatId}`);\r\n            const messageList = response.data\r\n            console.log(messageList);\r\n            const formattedMsgList = formatMessages(messageList);\r\n            console.log(\"get message list\");\r\n            console.log(formattedMsgList);\r\n            dispatch(fetchMessageList(formattedMsgList));\r\n        } catch(e) {           \r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}