{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\src\\\\Notification\\\\Notification.jsx\";\nimport React, { Fragment } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return React.createElement(MuiAlert, Object.assign({\n    elevation: 6,\n    variant: \"filled\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst Notification = ({\n  open,\n  closeNotification,\n  message,\n  severity\n}) => {\n  const classes = useStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    closeNotification();\n  };\n\n  let msghtml = \"\";\n\n  if (typeof message === \"string\") {\n    msghtml = message;\n  }\n\n  if (Array.isArray(message)) {\n    msghtml = message.map((line, index) => React.createElement(Fragment, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"- \", line), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, message === null && severity === null ? null : React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 20000,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    severity: severity,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, msghtml)));\n};\n\nexport default Notification;","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Notification/Notification.jsx"],"names":["React","Fragment","Snackbar","MuiAlert","makeStyles","Alert","props","useStyles","theme","root","width","marginTop","spacing","Notification","open","closeNotification","message","severity","classes","handleClose","event","reason","msghtml","Array","isArray","map","line","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,SAAO,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC;AAAhC,KAA6CA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD;;AAED,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ,iBAAa;AACXC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADA;AAFT;AAD+B,CAAL,CAAN,CAA5B;;AASA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,iBAAR;AAA2BC,EAAAA,OAA3B;AAAoCC,EAAAA;AAApC,CAAD,KAAoD;AAEvE,QAAMC,OAAO,GAAGX,SAAS,EAAzB;;AAEA,QAAMY,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDN,IAAAA,iBAAiB;AAClB,GALD;;AAOA,MAAIO,OAAO,GAAG,EAAd;;AAEA,MAAI,OAAON,OAAP,KAAmB,QAAvB,EAAiC;AAC7BM,IAAAA,OAAO,GAAGN,OAAV;AACH;;AACD,MAAIO,KAAK,CAACC,OAAN,CAAcR,OAAd,CAAJ,EAA4B;AACxBM,IAAAA,OAAO,GAAGN,OAAO,CAACS,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KACpB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASD,IAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADQ,CAAV;AAMH;;AAED,SACE;AAAK,IAAA,SAAS,EAAER,OAAO,CAACT,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGO,OAAO,KAAK,IAAZ,IAAoBC,QAAQ,KAAK,IAAjC,GAAwC,IAAxC,GACC,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEH,IAAhB;AAAsB,IAAA,gBAAgB,EAAE,KAAxC;AAA+C,IAAA,OAAO,EAAEK,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEF,QAAjB;AAA2B,IAAA,OAAO,EAAEE,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,OADL,CADF,CAFJ,CADF;AAWD,CApCD;;AAsCA,eAAeT,YAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst Notification = ({ open, closeNotification, message, severity }) => {\r\n  \r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    closeNotification();\r\n  };\r\n\r\n  let msghtml = \"\"\r\n\r\n  if (typeof message === \"string\") {\r\n      msghtml = message\r\n  }\r\n  if (Array.isArray(message)) {\r\n      msghtml = message.map((line, index) => (\r\n        <Fragment key={index}>\r\n            <span>- {line}</span>\r\n            <br></br>\r\n        </Fragment>\r\n      ))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {message === null && severity === null ? null : (\r\n        <Snackbar open={open} autoHideDuration={20000} onClose={handleClose}>\r\n          <Alert severity={severity} onClose={handleClose}>\r\n              {msghtml}\r\n          </Alert>\r\n        </Snackbar>\r\n      ) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;"]},"metadata":{},"sourceType":"module"}