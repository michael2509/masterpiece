{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\src\\\\Chat\\\\ChatsContainer.jsx\";\nimport React, { Component } from 'react';\nimport ChatList from './ChatList/ChatList';\nimport AddChat from './AddChat/AddChat';\nimport { createChat, deleteChat, getChatPage, openUpdateChat, closeUpdateChat, updateChat, fetchMoreChats } from \"./redux/chatActions\";\nimport { connect } from \"react-redux\";\nimport { isLogged } from '../Auth/authService';\nimport UpdateChat from './UpdateChat/UpdateChat';\nimport Container from '@material-ui/core/Container';\n\nclass ChatsContainer extends Component {\n  componentDidMount() {\n    this.props.getChatPage(0);\n  }\n\n  render() {\n    const _this$props = this.props,\n          chatState = _this$props.chatState,\n          createChat = _this$props.createChat,\n          deleteChat = _this$props.deleteChat,\n          getChatPage = _this$props.getChatPage,\n          openUpdateChat = _this$props.openUpdateChat,\n          closeUpdateChat = _this$props.closeUpdateChat,\n          updateChat = _this$props.updateChat,\n          fetchMoreChats = _this$props.fetchMoreChats,\n          history = _this$props.history;\n    const chatPage = chatState.chatPage,\n          pageNumber = chatState.pageNumber,\n          totalPages = chatState.totalPages,\n          updateChatState = chatState.updateChatState,\n          last = chatState.last;\n    const logged = isLogged();\n\n    if (!logged) {\n      history.push(\"/connexion\");\n    }\n\n    return React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"md\",\n      style: {\n        minHeight: `calc(100vh - 150px)`,\n        marginTop: 150\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(ChatList, {\n      totalPages: totalPages,\n      chatPage: chatPage,\n      getChatPage: getChatPage,\n      pageNumber: pageNumber,\n      deleteChat: deleteChat,\n      openUpdateChat: openUpdateChat,\n      fetchMoreChats: fetchMoreChats,\n      last: last,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(AddChat, {\n      createChat: createChat,\n      getChatPage: getChatPage,\n      pageNumber: pageNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), React.createElement(UpdateChat, {\n      state: updateChatState,\n      handleClose: closeUpdateChat,\n      updateChat: updateChat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  chatState: state.chats,\n  navbarState: state.navbar\n});\n\nconst mapDispatchToProps = dispatch => ({\n  createChat: chat => dispatch(createChat(chat)),\n  updateChat: chat => dispatch(updateChat(chat)),\n  deleteChat: chatId => dispatch(deleteChat(chatId)),\n  getChatPage: pageNumber => dispatch(getChatPage(pageNumber)),\n  fetchMoreChats: pageNumber => dispatch(fetchMoreChats(pageNumber)),\n  openUpdateChat: chat => dispatch(openUpdateChat(chat)),\n  closeUpdateChat: () => dispatch(closeUpdateChat())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatsContainer);","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Chat/ChatsContainer.jsx"],"names":["React","Component","ChatList","AddChat","createChat","deleteChat","getChatPage","openUpdateChat","closeUpdateChat","updateChat","fetchMoreChats","connect","isLogged","UpdateChat","Container","ChatsContainer","componentDidMount","props","render","chatState","history","chatPage","pageNumber","totalPages","updateChatState","last","logged","push","minHeight","marginTop","mapStateToProps","state","chats","navbarState","navbar","mapDispatchToProps","dispatch","chat","chatId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ChatList from './ChatList/ChatList';\r\nimport AddChat from './AddChat/AddChat';\r\nimport { createChat, deleteChat, getChatPage, openUpdateChat, closeUpdateChat, updateChat, fetchMoreChats } from \"./redux/chatActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { isLogged } from '../Auth/authService';\r\nimport UpdateChat from './UpdateChat/UpdateChat';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nclass ChatsContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getChatPage(0);\r\n    }\r\n\r\n    render() {\r\n        const { chatState, createChat, deleteChat, getChatPage, openUpdateChat, closeUpdateChat, updateChat, fetchMoreChats, history } = this.props;\r\n        const { chatPage, pageNumber, totalPages, updateChatState, last } = chatState;\r\n\r\n        const logged = isLogged();\r\n\r\n        if (!logged) {\r\n            history.push(\"/connexion\")\r\n        }\r\n\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"md\" style={{ minHeight: `calc(100vh - 150px)`, marginTop: 150}}>\r\n                <ChatList totalPages={totalPages} chatPage={chatPage} getChatPage={getChatPage} pageNumber={pageNumber} deleteChat={deleteChat} openUpdateChat={openUpdateChat} fetchMoreChats={fetchMoreChats} last={last} />\r\n                <AddChat createChat={createChat} getChatPage={getChatPage} pageNumber={pageNumber} />\r\n                <UpdateChat state={updateChatState} handleClose={closeUpdateChat} updateChat={updateChat} />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ chatState: state.chats, navbarState: state.navbar });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    createChat: (chat) => dispatch(createChat(chat)),\r\n    updateChat: (chat) => dispatch(updateChat(chat)),\r\n    deleteChat: (chatId) => dispatch(deleteChat(chatId)),\r\n    getChatPage: (pageNumber) => dispatch(getChatPage(pageNumber)),\r\n    fetchMoreChats: (pageNumber) => dispatch(fetchMoreChats(pageNumber)),\r\n    openUpdateChat: (chat) => dispatch(openUpdateChat(chat)),\r\n    closeUpdateChat: () => dispatch(closeUpdateChat()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatsContainer);"]},"metadata":{},"sourceType":"module"}