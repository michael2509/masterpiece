{"ast":null,"code":"'use strict';\n/**\n * Simple module to localize the React interface using the same syntax\n * used in the ReactNativeLocalization module\n * (https://github.com/stefalda/ReactNativeLocalization)\n *\n * Originally developed by Stefano Falda (stefano.falda@gmail.com)\n *\n * It uses a call to the Navigator/Browser object to get the current interface language,\n * then display the correct language strings or the default language (the first\n * one if a match is not found).\n *\n * This library has been refactored to use the newly created localized-strings package so to\n * unify the code and make it easier to mantain\n *\n * How to use:\n * Check the instructions at:\n * https://github.com/stefalda/react-localization\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _localizedStrings = require('localized-strings');\n\nvar _localizedStrings2 = _interopRequireDefault(_localizedStrings);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar placeholderRegex = /(\\{[\\d|\\w]+\\})/;\n/**\n * Format the passed string replacing the numbered or tokenized placeholders\n * eg. 1: I'd like some {0} and {1}, or just {0}\n * eg. 2: I'd like some {bread} and {butter}, or just {bread}\n * Use example:\n * eg. 1: strings.formatString(strings.question, strings.bread, strings.butter)\n * eg. 2: strings.formatString(strings.question, { bread: strings.bread, butter: strings.butter }\n *\n * THIS METHOD OVERRIDE the one of the parent class by adding support for JSX code\n*/\n\n_localizedStrings2.default.prototype.formatString = function (str) {\n  for (var _len = arguments.length, valuesForPlaceholders = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    valuesForPlaceholders[_key - 1] = arguments[_key];\n  }\n\n  var hasObject = false;\n  var res = (str || '').split(placeholderRegex).filter(function (textPart) {\n    return !!textPart;\n  }).map(function (textPart, index) {\n    if (textPart.match(placeholderRegex)) {\n      var matchedKey = textPart.slice(1, -1);\n      var valueForPlaceholder = valuesForPlaceholders[matchedKey]; // If no value found, check if working with an object instead\n\n      if (valueForPlaceholder == undefined) {\n        var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];\n\n        if (valueFromObjectPlaceholder !== undefined) {\n          valueForPlaceholder = valueFromObjectPlaceholder;\n        } else {\n          // If value still isn't found, then it must have been undefined/null\n          return valueForPlaceholder;\n        }\n      }\n\n      if (_react2.default.isValidElement(valueForPlaceholder)) {\n        hasObject = true;\n        return _react2.default.Children.toArray(valueForPlaceholder).map(function (component) {\n          return _extends({}, component, {\n            key: index.toString()\n          });\n        });\n      }\n\n      return valueForPlaceholder;\n    }\n\n    return textPart;\n  }); // If the results contains a object return an array otherwise return a string\n\n  if (hasObject) return res;\n  return res.join('');\n};\n\nexports.default = _localizedStrings2.default;","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/node_modules/react-localization/lib/LocalizedStrings.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_react","require","_react2","_interopRequireDefault","_localizedStrings","_localizedStrings2","obj","__esModule","default","placeholderRegex","formatString","str","_len","valuesForPlaceholders","Array","_key","hasObject","res","split","filter","textPart","map","index","match","matchedKey","slice","valueForPlaceholder","undefined","valueFromObjectPlaceholder","isValidElement","Children","toArray","component","toString","join"],"mappings":"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","sourcesContent":["'use strict';\n/**\n * Simple module to localize the React interface using the same syntax\n * used in the ReactNativeLocalization module\n * (https://github.com/stefalda/ReactNativeLocalization)\n *\n * Originally developed by Stefano Falda (stefano.falda@gmail.com)\n *\n * It uses a call to the Navigator/Browser object to get the current interface language,\n * then display the correct language strings or the default language (the first\n * one if a match is not found).\n *\n * This library has been refactored to use the newly created localized-strings package so to\n * unify the code and make it easier to mantain\n *\n * How to use:\n * Check the instructions at:\n * https://github.com/stefalda/react-localization\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _localizedStrings = require('localized-strings');\n\nvar _localizedStrings2 = _interopRequireDefault(_localizedStrings);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar placeholderRegex = /(\\{[\\d|\\w]+\\})/;\n\n/**\n * Format the passed string replacing the numbered or tokenized placeholders\n * eg. 1: I'd like some {0} and {1}, or just {0}\n * eg. 2: I'd like some {bread} and {butter}, or just {bread}\n * Use example:\n * eg. 1: strings.formatString(strings.question, strings.bread, strings.butter)\n * eg. 2: strings.formatString(strings.question, { bread: strings.bread, butter: strings.butter }\n *\n * THIS METHOD OVERRIDE the one of the parent class by adding support for JSX code\n*/\n_localizedStrings2.default.prototype.formatString = function (str) {\n  for (var _len = arguments.length, valuesForPlaceholders = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    valuesForPlaceholders[_key - 1] = arguments[_key];\n  }\n\n  var hasObject = false;\n  var res = (str || '').split(placeholderRegex).filter(function (textPart) {\n    return !!textPart;\n  }).map(function (textPart, index) {\n    if (textPart.match(placeholderRegex)) {\n      var matchedKey = textPart.slice(1, -1);\n      var valueForPlaceholder = valuesForPlaceholders[matchedKey];\n\n      // If no value found, check if working with an object instead\n      if (valueForPlaceholder == undefined) {\n        var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];\n        if (valueFromObjectPlaceholder !== undefined) {\n          valueForPlaceholder = valueFromObjectPlaceholder;\n        } else {\n          // If value still isn't found, then it must have been undefined/null\n          return valueForPlaceholder;\n        }\n      }\n\n      if (_react2.default.isValidElement(valueForPlaceholder)) {\n        hasObject = true;\n        return _react2.default.Children.toArray(valueForPlaceholder).map(function (component) {\n          return _extends({}, component, { key: index.toString() });\n        });\n      }\n\n      return valueForPlaceholder;\n    }\n    return textPart;\n  });\n  // If the results contains a object return an array otherwise return a string\n  if (hasObject) return res;\n  return res.join('');\n};\n\nexports.default = _localizedStrings2.default;"]},"metadata":{},"sourceType":"script"}