{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\src\\\\Room\\\\RoomForms\\\\AddChat.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nconst useStyles = makeStyles(theme => ({\n  chatNameInput: {\n    marginBottom: theme.spacing(4)\n  },\n  datePicker: {\n    width: 250,\n    marginBottom: theme.spacing(2)\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(5),\n    right: theme.spacing(5),\n    textTransform: 'none'\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst AddChatForm = props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit,\n        isSubmitting = props.isSubmitting,\n        setSubmitting = props.setSubmitting;\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const handleClickOpen = () => {\n    setSubmitting(false);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    onClick: handleClickOpen,\n    className: classes.fab,\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    variant: \"extended\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    className: classes.extendedIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), \"Cr\\xE9er un salon\"), React.createElement(Dialog, {\n    open: isSubmitting ? false : open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    disableBackdropClick: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Cr\\xE9er un nouveau salon\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Cr\\xE9er un salon priv\\xE9, vous permettant de communiquer avec vos invit\\xE9s via un chat, et de leur proposer des sondages et quiz.\"), React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Nom du salon\",\n    type: \"text\",\n    fullWidth: true,\n    className: classes.chatNameInput,\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.name ? errors.name : \"\",\n    error: touched.name && Boolean(errors.name),\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClose,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Annuler\"), React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Cr\\xE9er\")))));\n};\n\nconst AddChat = withFormik({\n  mapPropsToValues: ({\n    name\n  }) => ({\n    name: name || \"\"\n  }),\n  validationSchema: Yup.object().shape({\n    name: Yup.string().max(255, \"Le nom du salon ne peut pas excéder 255 caractères\").required(\"Veuillez entrer un nom pour le salon\")\n  }),\n  handleSubmit: (values, {\n    props,\n    resetForm,\n    setSubmitting\n  }) => {\n    const chat = _objectSpread({}, values);\n\n    const createChat = props.createChat,\n          getChatPage = props.getChatPage;\n    createChat(chat).then(reqSuccess => {\n      if (reqSuccess) {\n        resetForm();\n        setSubmitting(true);\n        getChatPage(0);\n      } else {\n        setSubmitting(false);\n      }\n    });\n  }\n})(AddChatForm);\nexport default AddChat;","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Room/RoomForms/AddChat.jsx"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Fab","AddIcon","makeStyles","withFormik","Yup","useStyles","theme","chatNameInput","marginBottom","spacing","datePicker","width","fab","position","bottom","right","textTransform","extendedIcon","marginRight","AddChatForm","props","values","touched","errors","handleChange","handleBlur","handleSubmit","isSubmitting","setSubmitting","classes","useState","open","setOpen","handleClickOpen","handleClose","name","Boolean","AddChat","mapPropsToValues","validationSchema","object","shape","string","max","required","resetForm","chat","createChat","getChatPage","then","reqSuccess"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACnCC,EAAAA,aAAa,EAAE;AACXC,IAAAA,YAAY,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AADH,GADoB;AAInCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAE,GADC;AAERH,IAAAA,YAAY,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd;AAFN,GAJuB;AAQnCG,EAAAA,GAAG,EAAE;AACDC,IAAAA,QAAQ,EAAE,OADT;AAEDC,IAAAA,MAAM,EAAER,KAAK,CAACG,OAAN,CAAc,CAAd,CAFP;AAGDM,IAAAA,KAAK,EAAET,KAAK,CAACG,OAAN,CAAc,CAAd,CAHN;AAIDO,IAAAA,aAAa,EAAE;AAJd,GAR8B;AAcnCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAEZ,KAAK,CAACG,OAAN,CAAc,CAAd;AADH;AAdqB,CAAL,CAAN,CAA5B;;AAmBA,MAAMU,WAAW,GAAIC,KAAD,IAAW;AAAA,QAGvBC,MAHuB,GAWvBD,KAXuB,CAGvBC,MAHuB;AAAA,QAIvBC,OAJuB,GAWvBF,KAXuB,CAIvBE,OAJuB;AAAA,QAKvBC,MALuB,GAWvBH,KAXuB,CAKvBG,MALuB;AAAA,QAMvBC,YANuB,GAWvBJ,KAXuB,CAMvBI,YANuB;AAAA,QAOvBC,UAPuB,GAWvBL,KAXuB,CAOvBK,UAPuB;AAAA,QAQvBC,YARuB,GAWvBN,KAXuB,CAQvBM,YARuB;AAAA,QASvBC,YATuB,GAWvBP,KAXuB,CASvBO,YATuB;AAAA,QAUvBC,aAVuB,GAWvBR,KAXuB,CAUvBQ,aAVuB;AAa3B,QAAMC,OAAO,GAAGxB,SAAS,EAAzB;;AAb2B,0BAcHb,KAAK,CAACsC,QAAN,CAAe,KAAf,CAdG;AAAA;AAAA,QAcpBC,IAdoB;AAAA,QAcdC,OAdc;;AAgB3B,QAAMC,eAAe,GAAG,MAAM;AAC1BL,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAI,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAHD;;AAKA,QAAME,WAAW,GAAG,MAAM;AACtBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GAFD;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAEC,eAAd;AAA+B,IAAA,SAAS,EAAEJ,OAAO,CAACjB,GAAlD;AAAuD,IAAA,KAAK,EAAC,SAA7D;AAAuE,kBAAW,KAAlF;AAAwF,IAAA,OAAO,EAAC,UAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAEiB,OAAO,CAACZ,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,sBADA,EAKA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEU,YAAY,GAAG,KAAH,GAAWI,IAArC;AAA2C,IAAA,OAAO,EAAEG,WAApD;AAAiE,uBAAgB,mBAAjF;AAAqG,IAAA,oBAAoB,MAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAER,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6IADJ,EAII,oBAAC,SAAD;AACI,IAAA,SAAS,MADb;AAEI,IAAA,MAAM,EAAC,OAFX;AAGI,IAAA,EAAE,EAAC,MAHP;AAII,IAAA,KAAK,EAAC,cAJV;AAKI,IAAA,IAAI,EAAC,MALT;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,SAAS,EAAEG,OAAO,CAACtB,aAPvB;AAQI,IAAA,KAAK,EAAEc,MAAM,CAACc,IARlB;AASI,IAAA,QAAQ,EAAEX,YATd;AAUI,IAAA,MAAM,EAAEC,UAVZ;AAWI,IAAA,UAAU,EAAEH,OAAO,CAACa,IAAR,GAAeZ,MAAM,CAACY,IAAtB,GAA6B,EAX7C;AAYI,IAAA,KAAK,EAAEb,OAAO,CAACa,IAAR,IAAgBC,OAAO,CAACb,MAAM,CAACY,IAAR,CAZlC;AAaI,IAAA,OAAO,EAAC,UAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAFJ,EAsBI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAED,WAAjC;AAA8C,IAAA,OAAO,EAAC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAIA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,SAA5B;AAAsC,IAAA,OAAO,EAAC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA,CAtBJ,CADJ,CALA,CADJ;AAyCH,CAlED;;AAoEA,MAAMG,OAAO,GAAGlC,UAAU,CAAC;AACvBmC,EAAAA,gBAAgB,EAAE,CAAC;AACfH,IAAAA;AADe,GAAD,MAEX;AACHA,IAAAA,IAAI,EAAEA,IAAI,IAAI;AADX,GAFW,CADK;AAOvBI,EAAAA,gBAAgB,EAAEnC,GAAG,CAACoC,MAAJ,GAAaC,KAAb,CAAmB;AACjCN,IAAAA,IAAI,EAAE/B,GAAG,CAACsC,MAAJ,GACGC,GADH,CACO,GADP,EACY,oDADZ,EAEGC,QAFH,CAEY,sCAFZ;AAD2B,GAAnB,CAPK;AAYvBlB,EAAAA,YAAY,EAAE,CAACL,MAAD,EAAS;AAAED,IAAAA,KAAF;AAASyB,IAAAA,SAAT;AAAoBjB,IAAAA;AAApB,GAAT,KAAiD;AAC3D,UAAMkB,IAAI,qBAAOzB,MAAP,CAAV;;AAD2D,UAEnD0B,UAFmD,GAEvB3B,KAFuB,CAEnD2B,UAFmD;AAAA,UAEvCC,WAFuC,GAEvB5B,KAFuB,CAEvC4B,WAFuC;AAI3DD,IAAAA,UAAU,CAACD,IAAD,CAAV,CAAiBG,IAAjB,CAAsBC,UAAU,IAAI;AAChC,UAAIA,UAAJ,EAAgB;AACZL,QAAAA,SAAS;AACTjB,QAAAA,aAAa,CAAC,IAAD,CAAb;AACAoB,QAAAA,WAAW,CAAC,CAAD,CAAX;AACH,OAJD,MAIO;AACHpB,QAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AACJ,KARD;AASH;AAzBsB,CAAD,CAAV,CA0BbT,WA1Ba,CAAhB;AA4BA,eAAekB,OAAf","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    chatNameInput: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    datePicker: {\r\n        width: 250,\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(5),\r\n        right: theme.spacing(5),\r\n        textTransform: 'none'\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nconst AddChatForm = (props) => {\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setSubmitting\r\n    } = props;        \r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setSubmitting(false);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n        \r\n    return (\r\n        <div>\r\n        <Fab onClick={handleClickOpen} className={classes.fab} color=\"primary\" aria-label=\"add\" variant=\"extended\">\r\n            <AddIcon className={classes.extendedIcon} />\r\n            Créer un salon\r\n        </Fab>\r\n        <Dialog open={isSubmitting ? false : open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick>\r\n            <form onSubmit={handleSubmit}>\r\n                <DialogTitle id=\"form-dialog-title\">Créer un nouveau salon</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Créer un salon privé, vous permettant de communiquer avec vos invités via un chat, et de leur proposer des sondages et quiz.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Nom du salon\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        className={classes.chatNameInput}\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={touched.name ? errors.name : \"\"}\r\n                        error={touched.name && Boolean(errors.name)}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button color=\"primary\" onClick={handleClose} variant=\"outlined\">\r\n                    Annuler\r\n                </Button>\r\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                    Créer\r\n                </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AddChat = withFormik({\r\n    mapPropsToValues: ({\r\n        name\r\n    }) => ({\r\n        name: name || \"\"\r\n    }),\r\n\r\n    validationSchema: Yup.object().shape({\r\n        name: Yup.string()\r\n                .max(255, \"Le nom du salon ne peut pas excéder 255 caractères\")\r\n                .required(\"Veuillez entrer un nom pour le salon\"),\r\n    }),\r\n    handleSubmit: (values, { props, resetForm, setSubmitting }) => {\r\n        const chat = {...values};\r\n        const { createChat, getChatPage } = props;\r\n        \r\n        createChat(chat).then(reqSuccess => {\r\n            if (reqSuccess) {\r\n                resetForm();\r\n                setSubmitting(true);\r\n                getChatPage(0);\r\n            } else {\r\n                setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n})(AddChatForm)\r\n\r\nexport default AddChat;"]},"metadata":{},"sourceType":"module"}