{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\src\\\\Auth\\\\SignUp\\\\SignUpForm.jsx\";\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport label from '../../global/configs/label';\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { withTheme } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\n\nconst signUpFormChild = props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit,\n        theme = props.theme;\n  const classes = {\n    avatar: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(1),\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n      backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n      width: '100%' // Fix IE 11 issue.\n\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    card: {\n      width: \"100%\",\n      borderRadius: 10\n    },\n    cardContent: {\n      width: \"90%\",\n      margin: \"0 auto\"\n    },\n    title: {\n      marginBottom: theme.spacing(3)\n    },\n    paper: {\n      width: \"100%\",\n      padding: 60\n    }\n  };\n  return React.createElement(Paper, {\n    style: classes.paper,\n    elevation: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    style: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    style: classes.title,\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Inscription\"), React.createElement(\"form\", {\n    style: classes.form,\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"username\",\n    label: label.username,\n    value: values.username,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.username ? errors.username : \"\",\n    error: touched.username && Boolean(errors.username),\n    variant: \"outlined\",\n    margin: \"normal\",\n    autoFocus: true,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"password\",\n    label: label.password,\n    type: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.password ? errors.password : \"\",\n    error: touched.password && Boolean(errors.password),\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"confirmPassword\",\n    label: label.confirmPassword,\n    type: \"password\",\n    value: values.confirmPassword,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.confirmPassword ? errors.confirmPassword : \"\",\n    error: touched.confirmPassword && Boolean(errors.confirmPassword),\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    style: classes.submit,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"S'inscrire\")), React.createElement(RouterLink, {\n    to: \"/connexion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Link, {\n    component: \"span\",\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Vous avez d\\xE9j\\xE0 un compte? Connectez-vous\")));\n};\n\nconst signUpForm = withTheme(signUpFormChild);\nconst SignUpForm = withFormik({\n  mapPropsToValues: ({\n    username,\n    password,\n    confirmPassword\n  }) => {\n    return {\n      username: username || \"\",\n      password: password || \"\",\n      confirmPassword: confirmPassword || \"\"\n    };\n  },\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"Entrez votre identifiant\"),\n    password: Yup.string().matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.:;?|/\\\\{}<>!@#$%^&*()_+-=])(?=.{8,})/, \"Doit contenir au moins 8 caractères, 1 minuscule, 1 majuscule, 1 chiffres, 1 caractère spécial\").required(\"Entrez votre mot de passe\"),\n    confirmPassword: Yup.string().required(\"Confirmez votre mot de passe\").oneOf([Yup.ref(\"password\")], \"Le mot de passe ne correspond pas\")\n  }),\n  handleSubmit: (values, {\n    props,\n    resetForm\n  }) => {\n    const createSpeaker = props.createSpeaker,\n          history = props.history;\n    const speaker = Object.assign({}, values);\n    delete speaker.confirmPassword;\n    createSpeaker(speaker).then(requestSuccess => {\n      if (requestSuccess) {\n        resetForm();\n        history.push(\"/connexion\");\n      }\n    });\n  }\n})(signUpForm);\nexport default withRouter(SignUpForm);","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Auth/SignUp/SignUpForm.jsx"],"names":["React","Avatar","Button","TextField","Link","LockOutlinedIcon","Typography","label","withFormik","Yup","withTheme","Paper","RouterLink","withRouter","signUpFormChild","props","values","touched","errors","handleChange","handleBlur","handleSubmit","theme","classes","avatar","marginTop","spacing","marginBottom","marginLeft","marginRight","backgroundColor","palette","secondary","main","form","width","submit","margin","card","borderRadius","cardContent","title","paper","padding","username","Boolean","password","confirmPassword","signUpForm","SignUpForm","mapPropsToValues","validationSchema","object","shape","string","required","matches","oneOf","ref","resetForm","createSpeaker","history","speaker","Object","assign","then","requestSuccess","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport label from '../../global/configs/label';\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport { Paper } from '@material-ui/core';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\n\r\nconst signUpFormChild = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        theme\r\n    } = props;\r\n\r\n\r\n    const classes = {\r\n        avatar: {\r\n            marginTop: theme.spacing(3),\r\n            marginBottom: theme.spacing(1),\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            backgroundColor: theme.palette.secondary.main\r\n        },\r\n        form: {\r\n            width: '100%', // Fix IE 11 issue.\r\n        },\r\n        submit: {\r\n            margin: theme.spacing(3, 0, 2),\r\n        },\r\n        card: {\r\n            width: \"100%\",\r\n            borderRadius: 10\r\n        },\r\n        cardContent: {\r\n            width: \"90%\",\r\n            margin: \"0 auto\"\r\n        },\r\n        title: {\r\n            marginBottom: theme.spacing(3)\r\n        },\r\n        paper: {\r\n            width: \"100%\",\r\n            padding: 60\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Paper style={classes.paper} elevation={5}>\r\n            <Avatar style={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography style={classes.title} component=\"h1\" variant=\"h5\">\r\n                Inscription\r\n                    </Typography>\r\n            <form style={classes.form} onSubmit={handleSubmit} noValidate>\r\n                <TextField\r\n                    id=\"username\"\r\n                    label={label.username}\r\n                    value={values.username}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.username ? errors.username : \"\"}\r\n                    error={touched.username && Boolean(errors.username)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    autoFocus\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <TextField\r\n                    id=\"password\"\r\n                    label={label.password}\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.password ? errors.password : \"\"}\r\n                    error={touched.password && Boolean(errors.password)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <TextField\r\n                    id=\"confirmPassword\"\r\n                    label={label.confirmPassword}\r\n                    type=\"password\"\r\n                    value={values.confirmPassword}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.confirmPassword ? errors.confirmPassword : \"\"}\r\n                    error={touched.confirmPassword && Boolean(errors.confirmPassword)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={classes.submit}\r\n                    size=\"large\"\r\n                >\r\n                    S'inscrire\r\n                        </Button>\r\n\r\n            </form>\r\n            <RouterLink to={\"/connexion\"}>\r\n                <Link component=\"span\" variant=\"body2\">Vous avez déjà un compte? Connectez-vous</Link>\r\n            </RouterLink>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst signUpForm = withTheme(signUpFormChild);\r\n\r\nconst SignUpForm = withFormik({\r\n    mapPropsToValues: ({\r\n        username,\r\n        password,\r\n        confirmPassword,\r\n    }) => {\r\n        return {\r\n            username: username || \"\",\r\n            password: password || \"\",\r\n            confirmPassword: confirmPassword || \"\",\r\n        };\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n        username: Yup.string()\r\n            .required(\"Entrez votre identifiant\"),\r\n        password: Yup.string()\r\n            .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.:;?|/\\\\{}<>!@#$%^&*()_+-=])(?=.{8,})/, \"Doit contenir au moins 8 caractères, 1 minuscule, 1 majuscule, 1 chiffres, 1 caractère spécial\")\r\n            .required(\"Entrez votre mot de passe\"),\r\n        confirmPassword: Yup.string()\r\n            .required(\"Confirmez votre mot de passe\")\r\n            .oneOf([Yup.ref(\"password\")], \"Le mot de passe ne correspond pas\")\r\n    }),\r\n\r\n    handleSubmit: (values, { props, resetForm }) => {\r\n\r\n        const { createSpeaker, history } = props\r\n        const speaker = Object.assign({}, values)\r\n        delete speaker.confirmPassword\r\n\r\n        createSpeaker(speaker).then(requestSuccess => {\r\n            if (requestSuccess) {\r\n                resetForm()\r\n                history.push(\"/connexion\")\r\n            }\r\n        })\r\n\r\n    }\r\n})(signUpForm);\r\n\r\nexport default withRouter(SignUpForm);"]},"metadata":{},"sourceType":"module"}