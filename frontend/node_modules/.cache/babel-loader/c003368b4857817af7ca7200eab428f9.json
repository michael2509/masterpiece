{"ast":null,"code":"import React from'react';import Avatar from'@material-ui/core/Avatar';import Button from'@material-ui/core/Button';import TextField from'@material-ui/core/TextField';import LockOutlinedIcon from'@material-ui/icons/LockOutlined';import Typography from'@material-ui/core/Typography';import{Paper}from'@material-ui/core';import Link from'@material-ui/core/Link';import{Link as RouterLink,withRouter}from'react-router-dom';import{withFormik}from\"formik\";import label from'../../global/configs/label';import{login}from\"../authService\";import*as Yup from\"yup\";import loginStyles from'./loginStyles';// Login form component\nfunction LoginForm(props){var classes=loginStyles();var values=props.values,touched=props.touched,errors=props.errors,handleChange=props.handleChange,handleBlur=props.handleBlur,handleSubmit=props.handleSubmit;return React.createElement(Paper,{className:classes.paper,elevation:5},React.createElement(Avatar,{className:classes.avatar},React.createElement(LockOutlinedIcon,null)),React.createElement(Typography,{component:\"h1\",variant:\"h5\",className:classes.title},\"Se Connecter\"),React.createElement(\"form\",{onSubmit:handleSubmit,className:classes.form,noValidate:true},React.createElement(TextField,{variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,id:\"username\",label:label.username,name:\"username\",autoComplete:\"username\",autoFocus:true,value:values.username,onChange:handleChange,onBlur:handleBlur,helperText:touched.username?errors.username:\"\",error:touched.username&&Boolean(errors.username)}),React.createElement(TextField,{variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,name:\"password\",label:label.password,type:\"password\",id:\"password\",autoComplete:\"current-password\",value:values.password,onChange:handleChange,onBlur:handleBlur,helperText:touched.password?errors.password:\"\",error:touched.password&&Boolean(errors.password)}),React.createElement(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"primary\",className:classes.submit,size:\"large\"},\"Connexion\")),React.createElement(RouterLink,{to:\"/inscription\"},React.createElement(Link,{component:\"span\",variant:\"body2\"},\"Pas de compte ? Inscrivez vous\")));}// Login form with formik validation\nvar Login=withFormik({mapPropsToValues:function mapPropsToValues(_ref){var username=_ref.username,password=_ref.password;return{username:username||\"\",password:password||\"\"};},validationSchema:Yup.object().shape({username:Yup.string().required(\"Entrez votre identifiant\"),password:Yup.string().matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.:;?|/\\\\{}<>!@#$%^&*()_+-=])(?=.{8,})/,\"Doit contenir au moins 8 caractères, 1 minuscule, 1 majuscule, 1 chiffres, 1 caractère spécial\").required(\"Entrez votre mot de passe\")}),handleSubmit:function handleSubmit(values,_ref2){var props=_ref2.props,resetForm=_ref2.resetForm;var history=props.history,openNotification=props.openNotification;var username=values.username;var password=values.password;login(username,password).then(function(logged){if(logged){resetForm();openNotification(\"Bienvenue \".concat(username,\", vous \\xEAtes connect\\xE9\"),\"success\");history.push(\"/chats\");}else{openNotification(\"Informations de connexion invalides\",\"error\");}});}})(LoginForm);export default withRouter(Login);","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Auth/Login/Login.jsx"],"names":["React","Avatar","Button","TextField","LockOutlinedIcon","Typography","Paper","Link","RouterLink","withRouter","withFormik","label","login","Yup","loginStyles","LoginForm","props","classes","values","touched","errors","handleChange","handleBlur","handleSubmit","paper","avatar","title","form","username","Boolean","password","submit","Login","mapPropsToValues","validationSchema","object","shape","string","required","matches","resetForm","history","openNotification","then","logged","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport { withFormik } from \"formik\";\r\nimport label from '../../global/configs/label';\r\nimport { login } from \"../authService\";\r\nimport * as Yup from \"yup\";\r\nimport loginStyles from './loginStyles';\r\n\r\n// Login form component\r\nfunction LoginForm(props) {\r\n\r\n    const classes = loginStyles();\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit\r\n    } = props;\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={5}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n                Se Connecter\r\n                </Typography>\r\n            <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    label={label.username}\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    autoFocus\r\n                    value={values.username}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.username ? errors.username : \"\"}\r\n                    error={touched.username && Boolean(errors.username)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label={label.password}\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.password ? errors.password : \"\"}\r\n                    error={touched.password && Boolean(errors.password)}\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    size=\"large\"\r\n                >\r\n                    Connexion\r\n                    </Button>\r\n            </form>\r\n            <RouterLink to={\"/inscription\"}>\r\n                <Link component=\"span\" variant=\"body2\">Pas de compte ? Inscrivez vous</Link>\r\n            </RouterLink>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n// Login form with formik validation\r\nconst Login = withFormik({\r\n    mapPropsToValues: ({\r\n        username,\r\n        password\r\n    }) => {\r\n        return {\r\n            username: username || \"\",\r\n            password: password || \"\",\r\n        };\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n        username: Yup.string()\r\n            .required(\"Entrez votre identifiant\"),\r\n        password: Yup.string()\r\n            .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.:;?|/\\\\{}<>!@#$%^&*()_+-=])(?=.{8,})/, \"Doit contenir au moins 8 caractères, 1 minuscule, 1 majuscule, 1 chiffres, 1 caractère spécial\")\r\n            .required(\"Entrez votre mot de passe\")\r\n    }),\r\n\r\n    handleSubmit: (values, { props, resetForm }) => {\r\n        const { history, openNotification } = props;\r\n\r\n        const username = values.username\r\n        const password = values.password\r\n\r\n        login(username, password).then(logged => {\r\n            if (logged) {\r\n                resetForm();\r\n                openNotification(`Bienvenue ${username}, vous êtes connecté`, \"success\")\r\n                history.push(\"/chats\");\r\n            } else {\r\n                openNotification(\"Informations de connexion invalides\", \"error\")\r\n            }\r\n        })\r\n    }\r\n})(LoginForm);\r\n\r\nexport default withRouter(Login);"]},"metadata":{},"sourceType":"module"}