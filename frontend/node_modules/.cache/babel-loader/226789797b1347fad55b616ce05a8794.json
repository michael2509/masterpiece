{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\src\\\\Chat\\\\UpdateChat\\\\UpdateChat.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport updateChatStyles from './updateChatStyles';\n\nconst UpdateChatForm = props => {\n  const classes = updateChatStyles();\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit,\n        state = props.state,\n        handleClose = props.handleClose;\n  return React.createElement(Dialog, {\n    open: state.open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    disableBackdropClick: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"\\xC9diter un chat\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Nom du chat\",\n    type: \"text\",\n    fullWidth: true,\n    className: classes.chatNameInput,\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.name ? errors.name : \"\",\n    error: touched.name && Boolean(errors.name),\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleClose,\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Annuler\"), React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"\\xC9diter\"))));\n};\n\nconst UpdateChat = withFormik({\n  enableReinitialize: true,\n  mapPropsToValues: props => ({\n    name: props.state.chat.name || \"\"\n  }),\n  validationSchema: Yup.object().shape({\n    name: Yup.string().max(255, \"Le nom du chat ne peut pas excéder 255 caractères\").required(\"Veuillez entrer un nom pour le chat\")\n  }),\n  handleSubmit: (values, {\n    props\n  }) => {\n    const updateChat = props.updateChat,\n          state = props.state;\n\n    const chat = _objectSpread({}, values, {\n      id: state.chat.id\n    });\n\n    updateChat(chat);\n  }\n})(UpdateChatForm);\nexport default UpdateChat;","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Chat/UpdateChat/UpdateChat.jsx"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","withFormik","Yup","updateChatStyles","UpdateChatForm","props","classes","values","touched","errors","handleChange","handleBlur","handleSubmit","state","handleClose","open","chatNameInput","name","Boolean","UpdateChat","enableReinitialize","mapPropsToValues","chat","validationSchema","object","shape","string","max","required","updateChat","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport updateChatStyles from './updateChatStyles';\r\n\r\nconst UpdateChatForm = (props) => {\r\n    \r\n    const classes = updateChatStyles();\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        state,\r\n        handleClose\r\n    } = props;\r\n\r\n    return (\r\n        <Dialog open={state.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick>\r\n            <form onSubmit={handleSubmit}>\r\n                <DialogTitle id=\"form-dialog-title\">Éditer un chat</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Nom du chat\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        className={classes.chatNameInput}\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={touched.name ? errors.name : \"\"}\r\n                        error={touched.name && Boolean(errors.name)}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button color=\"primary\" onClick={handleClose} variant=\"outlined\">\r\n                    Annuler\r\n                </Button>\r\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                    Éditer\r\n                </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nconst UpdateChat = withFormik({\r\n\r\n    enableReinitialize: true,\r\n\r\n    mapPropsToValues: (props) => ({\r\n        name: props.state.chat.name || \"\"\r\n    }),\r\n\r\n    validationSchema: Yup.object().shape({\r\n        name: Yup.string()\r\n                .max(255, \"Le nom du chat ne peut pas excéder 255 caractères\")\r\n                .required(\"Veuillez entrer un nom pour le chat\"),\r\n    }),\r\n    handleSubmit: (values, { props }) => {\r\n        const { updateChat, state } = props;\r\n\r\n        const chat = {\r\n            ...values,\r\n            id: state.chat.id\r\n        }\r\n\r\n        updateChat(chat);\r\n    }\r\n})(UpdateChatForm)\r\n\r\nexport default UpdateChat;"]},"metadata":{},"sourceType":"module"}