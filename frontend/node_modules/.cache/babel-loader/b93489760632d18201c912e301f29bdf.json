{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\src\\\\Auth\\\\SignUp\\\\SignUp.jsx\";\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport label from '../../global/configs/label';\nimport { withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { withTheme } from '@material-ui/core/styles';\nimport { Paper } from '@material-ui/core';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport signUpStyles from './signUpStyles'; // Signup form component\n\nconst signUpForm = props => {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit,\n        theme = props.theme;\n  const classes = signUpStyles();\n  return React.createElement(Paper, {\n    style: classes.paper,\n    elevation: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    style: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    style: classes.title,\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Inscription\"), React.createElement(\"form\", {\n    style: classes.form,\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"username\",\n    label: label.username,\n    value: values.username,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.username ? errors.username : \"\",\n    error: touched.username && Boolean(errors.username),\n    variant: \"outlined\",\n    margin: \"normal\",\n    autoFocus: true,\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"password\",\n    label: label.password,\n    type: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.password ? errors.password : \"\",\n    error: touched.password && Boolean(errors.password),\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"confirmPassword\",\n    label: label.confirmPassword,\n    type: \"password\",\n    value: values.confirmPassword,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.confirmPassword ? errors.confirmPassword : \"\",\n    error: touched.confirmPassword && Boolean(errors.confirmPassword),\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    style: classes.submit,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"S'inscrire\")), React.createElement(RouterLink, {\n    to: \"/connexion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Link, {\n    component: \"span\",\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Vous avez d\\xE9j\\xE0 un compte? Connectez-vous\")));\n};\n\nconst signUpFormWithTheme = withTheme(signUpForm);\nconst SignUp = withFormik({\n  mapPropsToValues: ({\n    username,\n    password,\n    confirmPassword\n  }) => {\n    return {\n      username: username || \"\",\n      password: password || \"\",\n      confirmPassword: confirmPassword || \"\"\n    };\n  },\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"Entrez votre identifiant\"),\n    password: Yup.string().matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.:;?|/\\\\{}<>!@#$%^&*()_+-=])(?=.{8,})/, \"Doit contenir au moins 8 caractères, 1 minuscule, 1 majuscule, 1 chiffres, 1 caractère spécial\").required(\"Entrez votre mot de passe\"),\n    confirmPassword: Yup.string().required(\"Confirmez votre mot de passe\").oneOf([Yup.ref(\"password\")], \"Le mot de passe ne correspond pas\")\n  }),\n  handleSubmit: (values, {\n    props,\n    resetForm\n  }) => {\n    const createSpeaker = props.createSpeaker,\n          history = props.history;\n    const speaker = Object.assign({}, values);\n    delete speaker.confirmPassword;\n    createSpeaker(speaker).then(requestSuccess => {\n      if (requestSuccess) {\n        resetForm();\n        history.push(\"/connexion\");\n      }\n    });\n  }\n})(signUpFormWithTheme);\nexport default withRouter(SignUp);","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Auth/SignUp/SignUp.jsx"],"names":["React","Avatar","Button","TextField","Link","LockOutlinedIcon","Typography","label","withFormik","Yup","withTheme","Paper","RouterLink","withRouter","signUpStyles","signUpForm","props","values","touched","errors","handleChange","handleBlur","handleSubmit","theme","classes","paper","avatar","title","form","username","Boolean","password","confirmPassword","submit","signUpFormWithTheme","SignUp","mapPropsToValues","validationSchema","object","shape","string","required","matches","oneOf","ref","resetForm","createSpeaker","history","speaker","Object","assign","then","requestSuccess","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport label from '../../global/configs/label';\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { withTheme } from '@material-ui/core/styles';\r\nimport { Paper } from '@material-ui/core';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport signUpStyles from './signUpStyles';\r\n\r\n// Signup form component\r\nconst signUpForm = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        theme\r\n    } = props;\r\n\r\n    const classes = signUpStyles()\r\n\r\n    return (\r\n        <Paper style={classes.paper} elevation={5}>\r\n            <Avatar style={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography style={classes.title} component=\"h1\" variant=\"h5\">\r\n                Inscription\r\n                    </Typography>\r\n            <form style={classes.form} onSubmit={handleSubmit} noValidate>\r\n                <TextField\r\n                    id=\"username\"\r\n                    label={label.username}\r\n                    value={values.username}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.username ? errors.username : \"\"}\r\n                    error={touched.username && Boolean(errors.username)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    autoFocus\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <TextField\r\n                    id=\"password\"\r\n                    label={label.password}\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.password ? errors.password : \"\"}\r\n                    error={touched.password && Boolean(errors.password)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <TextField\r\n                    id=\"confirmPassword\"\r\n                    label={label.confirmPassword}\r\n                    type=\"password\"\r\n                    value={values.confirmPassword}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.confirmPassword ? errors.confirmPassword : \"\"}\r\n                    error={touched.confirmPassword && Boolean(errors.confirmPassword)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={classes.submit}\r\n                    size=\"large\"\r\n                >\r\n                    S'inscrire\r\n                        </Button>\r\n\r\n            </form>\r\n            <RouterLink to={\"/connexion\"}>\r\n                <Link component=\"span\" variant=\"body2\">Vous avez déjà un compte? Connectez-vous</Link>\r\n            </RouterLink>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst signUpFormWithTheme = withTheme(signUpForm);\r\n\r\nconst SignUp = withFormik({\r\n    mapPropsToValues: ({\r\n        username,\r\n        password,\r\n        confirmPassword,\r\n    }) => {\r\n        return {\r\n            username: username || \"\",\r\n            password: password || \"\",\r\n            confirmPassword: confirmPassword || \"\",\r\n        };\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n        username: Yup.string()\r\n            .required(\"Entrez votre identifiant\"),\r\n        password: Yup.string()\r\n            .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.:;?|/\\\\{}<>!@#$%^&*()_+-=])(?=.{8,})/, \"Doit contenir au moins 8 caractères, 1 minuscule, 1 majuscule, 1 chiffres, 1 caractère spécial\")\r\n            .required(\"Entrez votre mot de passe\"),\r\n        confirmPassword: Yup.string()\r\n            .required(\"Confirmez votre mot de passe\")\r\n            .oneOf([Yup.ref(\"password\")], \"Le mot de passe ne correspond pas\")\r\n    }),\r\n\r\n    handleSubmit: (values, { props, resetForm }) => {\r\n\r\n        const { createSpeaker, history } = props\r\n        const speaker = Object.assign({}, values)\r\n        delete speaker.confirmPassword\r\n\r\n        createSpeaker(speaker).then(requestSuccess => {\r\n            if (requestSuccess) {\r\n                resetForm()\r\n                history.push(\"/connexion\")\r\n            }\r\n        })\r\n\r\n    }\r\n})(signUpFormWithTheme);\r\n\r\nexport default withRouter(SignUp);"]},"metadata":{},"sourceType":"module"}