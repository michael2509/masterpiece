{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import{GET_CHAT_PAGE_SUCCESS,GET_CHAT_PAGE_ERROR,OPEN_UPDATE_CHAT,CLOSE_UPDATE_CHAT,FETCH_MORE_CHATS_SUCCESS,FETCH_MORE_CHATS_ERROR}from\"./chatActionsTypes\";import axios from\"axios\";import listServerErrors from\"../../global/functions/listServerErrors\";import{getTokenFromLocalStorage}from'../../Auth/authService';import{openNotification}from\"../../Notification/notificationActions\";// Create chat Actions\n// This function create a new chat and show a notification in case of success or error\nexport function createChat(chat){return function _callee(dispatch){var chatJson,accessToken,statusCode,data,errorMessages;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// convert user input to json\nchatJson=JSON.stringify(chat);_context.prev=1;// Get token from local storage\naccessToken=getTokenFromLocalStorage(\"access_token\");// Request API to create the new chat\n_context.next=5;return _regeneratorRuntime.awrap(axios.post(\"http://localhost:8081/api/chats\",chatJson,{headers:{'Content-Type':'application/json',\"Authorization\":\"Bearer \".concat(accessToken)}}));case 5:// Show success notification\ndispatch(openNotification(\"Chat crée avec succès\",\"success\"));// Reload chat list\ndispatch(getChatPage(0));return _context.abrupt(\"return\",true);case 10:_context.prev=10;_context.t0=_context[\"catch\"](1);statusCode=_context.t0.response.status;data=_context.t0.response.data;// Extract errors messages from response        \nerrorMessages=listServerErrors(statusCode,data);// Show errors in notification\ndispatch(openNotification(errorMessages,\"error\"));return _context.abrupt(\"return\",false);case 17:case\"end\":return _context.stop();}}},null,null,[[1,10]]);};}// Delete chat Action\nexport function deleteChat(chatId){console.log(chatId);return function _callee2(dispatch){var accessToken,config;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;accessToken=getTokenFromLocalStorage(\"access_token\");config={headers:{\"Authorization\":\"Bearer \".concat(accessToken)}};_context2.next=5;return _regeneratorRuntime.awrap(axios.delete(\"http://localhost:8081/api/chats/\".concat(chatId),config));case 5:dispatch(openNotification(\"chat supprimé avec succès\",\"success\"));dispatch(getChatPage(0));return _context2.abrupt(\"return\",true);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);dispatch(openNotification(\"La suppression du chat a échoué\",\"error\"));return _context2.abrupt(\"return\",false);case 14:case\"end\":return _context2.stop();}}},null,null,[[0,10]]);};}// Get chat List Page Action\nexport function getChatPageSuccess(pageNumber,chatPage,totalPages){return{type:GET_CHAT_PAGE_SUCCESS,chatPage:chatPage,pageNumber:pageNumber,totalPages:totalPages};}export function getChatPageError(){return{type:GET_CHAT_PAGE_ERROR,errorMsg:\"Une erreur est survenue\"};}export function getChatPage(pageNumber){console.log(\"getChatPage called with page number : \"+pageNumber);return function _callee3(dispatch){var accessToken,config,pageSize,response,chatPage,totalPages,last;return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;accessToken=getTokenFromLocalStorage(\"access_token\");config={headers:{\"Authorization\":\"Bearer \".concat(accessToken)}};pageSize=5;_context3.next=6;return _regeneratorRuntime.awrap(axios.get(\"http://localhost:8081/api/chats?page=\".concat(pageNumber,\"&size=\").concat(pageSize),config));case 6:response=_context3.sent;chatPage=response.data.content;totalPages=response.data.totalPages;last=response.data.last;dispatch(getChatPageSuccess(pageNumber,chatPage,totalPages,last));_context3.next=16;break;case 13:_context3.prev=13;_context3.t0=_context3[\"catch\"](0);dispatch(getChatPageError());case 16:case\"end\":return _context3.stop();}}},null,null,[[0,13]]);};}// Actions for update chat\nexport function openUpdateChat(chat){return{type:OPEN_UPDATE_CHAT,open:true,chat:chat};}export function closeUpdateChat(){return{type:CLOSE_UPDATE_CHAT,open:false,chat:null};}export function updateChat(chat){return function _callee4(dispatch){var chatJson,accessToken,statusCode,data,errorMessages;return _regeneratorRuntime.async(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:chatJson=JSON.stringify(chat);_context4.prev=1;accessToken=getTokenFromLocalStorage(\"access_token\");_context4.next=5;return _regeneratorRuntime.awrap(axios.put(\"http://localhost:8081/api/chats/\".concat(chat.id),chatJson,{headers:{'Content-Type':'application/json',\"Authorization\":\"Bearer \".concat(accessToken)}}));case 5:dispatch(openNotification(\"chat modifié avec succès\",\"success\"));dispatch(closeUpdateChat());dispatch(getChatPage(0));return _context4.abrupt(\"return\",true);case 11:_context4.prev=11;_context4.t0=_context4[\"catch\"](1);statusCode=_context4.t0.response.status;data=_context4.t0.response.data;errorMessages=listServerErrors(statusCode,data);dispatch(openNotification(errorMessages,\"error\"));return _context4.abrupt(\"return\",false);case 18:case\"end\":return _context4.stop();}}},null,null,[[1,11]]);};}// Fetch more chats action\nexport function fetchMoreChatsSuccess(pageNumber,chatPage,totalPages,last){return{type:FETCH_MORE_CHATS_SUCCESS,chatPage:chatPage,pageNumber:pageNumber,totalPages:totalPages,last:last};}export function fetchMoreChatsError(){return{type:FETCH_MORE_CHATS_ERROR,errorMsg:\"Une erreur est survenue\"};}export function fetchMoreChats(pageNumber){return function _callee5(dispatch){var accessToken,config,pageSize,response,chatPage,totalPages,last;return _regeneratorRuntime.async(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;accessToken=getTokenFromLocalStorage(\"access_token\");config={headers:{\"Authorization\":\"Bearer \".concat(accessToken)}};pageSize=5;_context5.next=6;return _regeneratorRuntime.awrap(axios.get(\"http://localhost:8081/api/chats?page=\".concat(pageNumber,\"&size=\").concat(pageSize),config));case 6:response=_context5.sent;chatPage=response.data.content;totalPages=response.data.totalPages;last=response.data.last;dispatch(fetchMoreChatsSuccess(pageNumber,chatPage,totalPages,last));_context5.next=16;break;case 13:_context5.prev=13;_context5.t0=_context5[\"catch\"](0);dispatch(fetchMoreChatsError());case 16:case\"end\":return _context5.stop();}}},null,null,[[0,13]]);};}","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Chat/redux/chatActions.js"],"names":["GET_CHAT_PAGE_SUCCESS","GET_CHAT_PAGE_ERROR","OPEN_UPDATE_CHAT","CLOSE_UPDATE_CHAT","FETCH_MORE_CHATS_SUCCESS","FETCH_MORE_CHATS_ERROR","axios","listServerErrors","getTokenFromLocalStorage","openNotification","createChat","chat","dispatch","chatJson","JSON","stringify","accessToken","post","headers","getChatPage","statusCode","response","status","data","errorMessages","deleteChat","chatId","console","log","config","delete","getChatPageSuccess","pageNumber","chatPage","totalPages","type","getChatPageError","errorMsg","pageSize","get","content","last","openUpdateChat","open","closeUpdateChat","updateChat","put","id","fetchMoreChatsSuccess","fetchMoreChatsError","fetchMoreChats"],"mappings":"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","sourcesContent":["import { GET_CHAT_PAGE_SUCCESS, GET_CHAT_PAGE_ERROR, OPEN_UPDATE_CHAT, CLOSE_UPDATE_CHAT, FETCH_MORE_CHATS_SUCCESS, FETCH_MORE_CHATS_ERROR } from \"./chatActionsTypes\"\r\nimport axios from \"axios\";\r\nimport listServerErrors from \"../../global/functions/listServerErrors\";\r\nimport { getTokenFromLocalStorage } from '../../Auth/authService';\r\nimport { openNotification } from \"../../Notification/notificationActions\";\r\n\r\n// Create chat Actions\r\n// This function create a new chat and show a notification in case of success or error\r\nexport function createChat(chat) {\r\n    \r\n    return async (dispatch) => {\r\n        \r\n        // convert user input to json\r\n        const chatJson = JSON.stringify(chat);\r\n\r\n        try {\r\n            // Get token from local storage\r\n            const accessToken = getTokenFromLocalStorage(\"access_token\");\r\n            // Request API to create the new chat\r\n            await axios.post(\r\n                \"http://localhost:8081/api/chats\",\r\n                chatJson,\r\n                { headers: { 'Content-Type': 'application/json', \"Authorization\": `Bearer ${accessToken}` } }\r\n            )\r\n            // Show success notification\r\n            dispatch(openNotification(\"Chat crée avec succès\", \"success\"));\r\n            // Reload chat list\r\n            dispatch(getChatPage(0));\r\n            return true\r\n        } catch (error) {\r\n            const statusCode = error.response.status\r\n            const data = error.response.data\r\n            // Extract errors messages from response        \r\n            const errorMessages = listServerErrors(statusCode, data);\r\n            // Show errors in notification\r\n            dispatch(openNotification(errorMessages, \"error\"))\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\n// Delete chat Action\r\nexport function deleteChat(chatId) {\r\n    console.log(chatId);\r\n    return async (dispatch) => {\r\n        try {\r\n            const accessToken = getTokenFromLocalStorage(\"access_token\");\r\n            const config = {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${accessToken}`\r\n                }\r\n            }\r\n            await axios.delete(`http://localhost:8081/api/chats/${chatId}`, config);\r\n            dispatch(openNotification(\"chat supprimé avec succès\", \"success\"))\r\n            dispatch(getChatPage(0))\r\n            return true\r\n        } catch (error) {\r\n            dispatch(openNotification(\"La suppression du chat a échoué\", \"error\"))\r\n            return false           \r\n        }\r\n    }\r\n}\r\n\r\n// Get chat List Page Action\r\nexport function getChatPageSuccess(pageNumber, chatPage, totalPages) {\r\n    return {\r\n        type: GET_CHAT_PAGE_SUCCESS,\r\n        chatPage: chatPage,\r\n        pageNumber: pageNumber,\r\n        totalPages: totalPages\r\n    }\r\n}\r\n\r\nexport function getChatPageError() {\r\n    return {\r\n        type: GET_CHAT_PAGE_ERROR,\r\n        errorMsg: \"Une erreur est survenue\"\r\n    }\r\n}\r\n\r\nexport function getChatPage(pageNumber) {\r\n    console.log(\"getChatPage called with page number : \" + pageNumber);\r\n    return async (dispatch) => {\r\n        try {\r\n            const accessToken = getTokenFromLocalStorage(\"access_token\");\r\n            const config = {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${accessToken}`\r\n                }\r\n            }\r\n            const pageSize = 5;\r\n            const response = await axios.get(`http://localhost:8081/api/chats?page=${pageNumber}&size=${pageSize}`, config);\r\n            const chatPage = response.data.content;\r\n            const totalPages = response.data.totalPages;\r\n            const last = response.data.last\r\n            dispatch(getChatPageSuccess(pageNumber, chatPage, totalPages, last))\r\n        } catch {           \r\n            dispatch(getChatPageError());\r\n        }\r\n    }\r\n}\r\n\r\n// Actions for update chat\r\nexport function openUpdateChat(chat) {\r\n    return {\r\n        type: OPEN_UPDATE_CHAT,\r\n        open: true,\r\n        chat: chat\r\n    }\r\n}\r\n\r\nexport function closeUpdateChat() {\r\n    return {\r\n        type: CLOSE_UPDATE_CHAT,\r\n        open: false,\r\n        chat: null\r\n    }\r\n}\r\n\r\nexport function updateChat(chat) {\r\n    return async (dispatch) => {\r\n\r\n        const chatJson = JSON.stringify(chat);\r\n\r\n        try {\r\n            const accessToken = getTokenFromLocalStorage(\"access_token\");\r\n            await axios.put(\r\n                `http://localhost:8081/api/chats/${chat.id}`,\r\n                chatJson,\r\n                { headers: { 'Content-Type': 'application/json', \"Authorization\": `Bearer ${accessToken}` } }\r\n            )\r\n\r\n            dispatch(openNotification(\"chat modifié avec succès\", \"success\"))\r\n            dispatch(closeUpdateChat());\r\n            dispatch(getChatPage(0));\r\n            return true\r\n        } catch (error) {\r\n            const statusCode = error.response.status\r\n            const data = error.response.data            \r\n            const errorMessages = listServerErrors(statusCode, data);\r\n            dispatch(openNotification(errorMessages, \"error\"))\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\n// Fetch more chats action\r\nexport function fetchMoreChatsSuccess(pageNumber, chatPage, totalPages, last) {\r\n    return {\r\n        type: FETCH_MORE_CHATS_SUCCESS,\r\n        chatPage: chatPage,\r\n        pageNumber: pageNumber,\r\n        totalPages: totalPages,\r\n        last: last\r\n    }\r\n}\r\n\r\nexport function fetchMoreChatsError() {\r\n    return {\r\n        type: FETCH_MORE_CHATS_ERROR,\r\n        errorMsg: \"Une erreur est survenue\"\r\n    }\r\n}\r\n\r\nexport function fetchMoreChats(pageNumber) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const accessToken = getTokenFromLocalStorage(\"access_token\");\r\n            const config = {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${accessToken}`\r\n                }\r\n            }\r\n            const pageSize = 5;\r\n            const response = await axios.get(`http://localhost:8081/api/chats?page=${pageNumber}&size=${pageSize}`, config);\r\n            const chatPage = response.data.content;\r\n            const totalPages = response.data.totalPages;\r\n            const last = response.data.last\r\n            dispatch(fetchMoreChatsSuccess(pageNumber, chatPage, totalPages, last))\r\n        } catch {           \r\n            dispatch(fetchMoreChatsError());\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}