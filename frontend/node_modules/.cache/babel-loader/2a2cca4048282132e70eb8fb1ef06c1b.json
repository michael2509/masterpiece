{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import{CLOSE_CREATE_GUEST,OPEN_CREATE_GUEST,SET_SENDER_NAME,SET_SENDER_TYPE,SINGLE_CHAT_FOUND}from\"./singleChatActionsTypes\";import axios from\"axios\";import{openNotification}from\"../../Notification/notificationActions\";export var SingleChatFound=function SingleChatFound(chat){return{type:SINGLE_CHAT_FOUND,chat:chat};};export var getSingleChat=function getSingleChat(chatId){return function _callee(dispatch){var response,chat;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _regeneratorRuntime.awrap(axios.get(\"http://localhost:8081/api/chats/\".concat(chatId)));case 3:response=_context.sent;chat=response.data;console.log(chat);if(!chat){_context.next=11;break;}dispatch(SingleChatFound(chat));return _context.abrupt(\"return\",true);case 11:dispatch(openNotification(\"Aucun chat trouv\\xE9 avec l'id [\".concat(chatId,\"]\"),\"error\"));return _context.abrupt(\"return\",false);case 13:_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);console.log(_context.t0);return _context.abrupt(\"return\",false);case 19:case\"end\":return _context.stop();}}},null,null,[[0,15]]);};};export var getSingleChatByAccessCode=function getSingleChatByAccessCode(chatCode){return function _callee2(dispatch){var response,chat;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return _regeneratorRuntime.awrap(axios.get(\"http://localhost:8081/api/chats/getByAccessCode/\".concat(chatCode)));case 3:response=_context2.sent;chat=response.data;console.log(chat);if(!chat){_context2.next=11;break;}dispatch(SingleChatFound(chat));return _context2.abrupt(\"return\",chat);case 11:dispatch(openNotification(\"Aucun chat trouv\\xE9 avec le code d'acc\\xE8s [\".concat(chatCode,\"]\"),\"error\"));return _context2.abrupt(\"return\",false);case 13:_context2.next=19;break;case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);return _context2.abrupt(\"return\",false);case 19:case\"end\":return _context2.stop();}}},null,null,[[0,15]]);};};export var setSenderName=function setSenderName(senderName){return{type:SET_SENDER_NAME,senderName:senderName};};export var setSenderType=function setSenderType(senderType){return{type:SET_SENDER_TYPE,senderType:senderType};};export var openCreateGuest=function openCreateGuest(){return{type:OPEN_CREATE_GUEST,showCreateGuest:true};};export var closeCreateGuest=function closeCreateGuest(){return{type:CLOSE_CREATE_GUEST,showCreateGuest:false};};","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Chat/SingleChat/singleChatActions.js"],"names":["CLOSE_CREATE_GUEST","OPEN_CREATE_GUEST","SET_SENDER_NAME","SET_SENDER_TYPE","SINGLE_CHAT_FOUND","axios","openNotification","SingleChatFound","chat","type","getSingleChat","chatId","dispatch","get","response","data","console","log","getSingleChatByAccessCode","chatCode","setSenderName","senderName","setSenderType","senderType","openCreateGuest","showCreateGuest","closeCreateGuest"],"mappings":"6HAAA,OAASA,kBAAT,CAA6BC,iBAA7B,CAAgDC,eAAhD,CAAiEC,eAAjE,CAAkFC,iBAAlF,KAA2G,0BAA3G,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,KAAiC,wCAAjC,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,QAAW,CACtCC,IAAI,CAAEL,iBADgC,CAEtCI,IAAI,CAAEA,IAFgC,CAAX,EAAxB,CAKP,MAAO,IAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,MAAD,CAAY,CAErC,MAAO,kBAAOC,QAAP,sMAEwBP,KAAK,CAACQ,GAAN,2CAA6CF,MAA7C,EAFxB,SAEOG,QAFP,eAGON,IAHP,CAGcM,QAAQ,CAACC,IAHvB,CAKCC,OAAO,CAACC,GAAR,CAAYT,IAAZ,EALD,IAOKA,IAPL,0BAQKI,QAAQ,CAACL,eAAe,CAACC,IAAD,CAAhB,CAAR,CARL,gCASY,IATZ,UAWKI,QAAQ,CAACN,gBAAgB,2CAAiCK,MAAjC,MAA4C,OAA5C,CAAjB,CAAR,CAXL,gCAYY,KAZZ,2FAgBCK,OAAO,CAACC,GAAR,cAhBD,gCAiBQ,KAjBR,oEAAP,CAoBH,CAtBM,CAwBP,MAAO,IAAMC,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACC,QAAD,CAAc,CAEnD,MAAO,mBAAOP,QAAP,4MAEwBP,KAAK,CAACQ,GAAN,2DAA6DM,QAA7D,EAFxB,SAEOL,QAFP,gBAGON,IAHP,CAGcM,QAAQ,CAACC,IAHvB,CAKCC,OAAO,CAACC,GAAR,CAAYT,IAAZ,EALD,IAOKA,IAPL,2BAQKI,QAAQ,CAACL,eAAe,CAACC,IAAD,CAAhB,CAAR,CARL,iCASYA,IATZ,UAWKI,QAAQ,CAACN,gBAAgB,yDAA4Ca,QAA5C,MAAyD,OAAzD,CAAjB,CAAR,CAXL,iCAYY,KAZZ,+FAgBCH,OAAO,CAACC,GAAR,eAhBD,iCAiBQ,KAjBR,qEAAP,CAoBH,CAtBM,CAwBP,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,UAAD,QAAiB,CAC1CZ,IAAI,CAAEP,eADoC,CAE1CmB,UAAU,CAAEA,UAF8B,CAAjB,EAAtB,CAKP,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,UAAD,QAAiB,CAC1Cd,IAAI,CAAEN,eADoC,CAE1CoB,UAAU,CAAEA,UAF8B,CAAjB,EAAtB,CAKP,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAO,CAClCf,IAAI,CAAER,iBAD4B,CAElCwB,eAAe,CAAE,IAFiB,CAAP,EAAxB,CAKP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,SAAO,CACnCjB,IAAI,CAAET,kBAD6B,CAEnCyB,eAAe,CAAE,KAFkB,CAAP,EAAzB","sourcesContent":["import { CLOSE_CREATE_GUEST, OPEN_CREATE_GUEST, SET_SENDER_NAME, SET_SENDER_TYPE, SINGLE_CHAT_FOUND } from \"./singleChatActionsTypes\";\r\nimport axios from \"axios\";\r\nimport { openNotification } from \"../../Notification/notificationActions\";\r\n\r\nexport const SingleChatFound = (chat) => ({\r\n    type: SINGLE_CHAT_FOUND,\r\n    chat: chat\r\n})\r\n\r\nexport const getSingleChat = (chatId) => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8081/api/chats/${chatId}`);\r\n            const chat = response.data\r\n\r\n            console.log(chat);\r\n            \r\n            if (chat) {\r\n                dispatch(SingleChatFound(chat));\r\n                return true;\r\n            } else {\r\n                dispatch(openNotification(`Aucun chat trouvé avec l'id [${chatId}]`, \"error\"))\r\n                return false;\r\n            }\r\n\r\n        } catch(e) {           \r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport const getSingleChatByAccessCode = (chatCode) => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8081/api/chats/getByAccessCode/${chatCode}`);\r\n            const chat = response.data\r\n\r\n            console.log(chat);\r\n            \r\n            if (chat) {\r\n                dispatch(SingleChatFound(chat));\r\n                return chat;\r\n            } else {\r\n                dispatch(openNotification(`Aucun chat trouvé avec le code d'accès [${chatCode}]`, \"error\"))\r\n                return false;\r\n            }\r\n\r\n        } catch(e) {           \r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setSenderName = (senderName) => ({\r\n    type: SET_SENDER_NAME,\r\n    senderName: senderName\r\n})\r\n\r\nexport const setSenderType = (senderType) => ({\r\n    type: SET_SENDER_TYPE,\r\n    senderType: senderType\r\n})\r\n\r\nexport const openCreateGuest = () => ({\r\n    type: OPEN_CREATE_GUEST,\r\n    showCreateGuest: true\r\n})\r\n\r\nexport const closeCreateGuest = () => ({\r\n    type: CLOSE_CREATE_GUEST,\r\n    showCreateGuest: false\r\n})"]},"metadata":{},"sourceType":"module"}