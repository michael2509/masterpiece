{"ast":null,"code":"import axios from 'axios';\nimport listServerErrors from \"../../global/functions/listServerErrors\";\nimport { openNotification } from \"../../Notification/notificationActions\";\nexport function createSpeaker(speaker) {\n  return async dispatch => {\n    const speakerJson = JSON.stringify(speaker);\n\n    try {\n      await axios.post('http://localhost:8081/api/speakers', speakerJson, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      dispatch(openNotification(\"Compte crée avec succès\", \"success\"));\n      return true;\n    } catch (error) {\n      const statusCode = error.response.status;\n      const data = error.response.data;\n      const errorMessages = listServerErrors(statusCode, data);\n      dispatch(openNotification(errorMessages, \"error\"));\n      return false;\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Auth/SignUp/signUpActions.js"],"names":["axios","listServerErrors","openNotification","createSpeaker","speaker","dispatch","speakerJson","JSON","stringify","post","headers","error","statusCode","response","status","data","errorMessages"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,SAASC,gBAAT,QAAiC,wCAAjC;AAEA,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;AAEnC,SAAO,MAAOC,QAAP,IAAoB;AAEvB,UAAMC,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAApB;;AAEA,QAAI;AACA,YAAMJ,KAAK,CAACS,IAAN,CAAW,oCAAX,EAAiDH,WAAjD,EAA8D;AAAEI,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB;AAAX,OAA9D,CAAN;AACAL,MAAAA,QAAQ,CAACH,gBAAgB,CAAC,yBAAD,EAA4B,SAA5B,CAAjB,CAAR;AACA,aAAO,IAAP;AACH,KAJD,CAKA,OAAOS,KAAP,EAAc;AACV,YAAMC,UAAU,GAAGD,KAAK,CAACE,QAAN,CAAeC,MAAlC;AACA,YAAMC,IAAI,GAAGJ,KAAK,CAACE,QAAN,CAAeE,IAA5B;AACA,YAAMC,aAAa,GAAGf,gBAAgB,CAACW,UAAD,EAAaG,IAAb,CAAtC;AACAV,MAAAA,QAAQ,CAACH,gBAAgB,CAACc,aAAD,EAAgB,OAAhB,CAAjB,CAAR;AACA,aAAO,KAAP;AACH;AACJ,GAhBD;AAiBH","sourcesContent":["import axios from 'axios';\r\nimport listServerErrors from \"../../global/functions/listServerErrors\";\r\nimport { openNotification } from \"../../Notification/notificationActions\";\r\n\r\nexport function createSpeaker(speaker) {\r\n    \r\n    return async (dispatch) => {\r\n        \r\n        const speakerJson = JSON.stringify(speaker);\r\n        \r\n        try {\r\n            await axios.post('http://localhost:8081/api/speakers', speakerJson, { headers: { 'Content-Type': 'application/json' } })\r\n            dispatch(openNotification(\"Compte crée avec succès\", \"success\"))\r\n            return true\r\n        }\r\n        catch (error) {\r\n            const statusCode = error.response.status\r\n            const data = error.response.data\r\n            const errorMessages = listServerErrors(statusCode, data);\r\n            dispatch(openNotification(errorMessages, \"error\"))\r\n            return false\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}