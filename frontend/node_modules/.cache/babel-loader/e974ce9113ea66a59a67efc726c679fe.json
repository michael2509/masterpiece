{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\src\\\\Notification\\\\Notification.jsx\";\nimport React, { Fragment } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return;\n} // Notification component\n\n\nconst Notification = ({\n  open,\n  closeNotification,\n  message,\n  severity\n}) => {\n  const classes = notificationStyles();\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    closeNotification();\n  };\n\n  let msghtml = \"\";\n\n  if (typeof message === \"string\") {\n    msghtml = message;\n  }\n\n  if (Array.isArray(message)) {\n    msghtml = message.map((line, index) => React.createElement(Fragment, {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"- \", line), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, message === null && severity === null ? null : React.createElement(Snackbar, {\n    open: open,\n    autoHideDuration: 20000,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    severity: severity,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, msghtml)));\n};\n\nexport default Notification;","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Notification/Notification.jsx"],"names":["React","Fragment","Snackbar","MuiAlert","Alert","props","Notification","open","closeNotification","message","severity","classes","notificationStyles","handleClose","event","reason","msghtml","Array","isArray","map","line","index","root"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB;AACD,C,CAED;;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,iBAAR;AAA2BC,EAAAA,OAA3B;AAAoCC,EAAAA;AAApC,CAAD,KAAoD;AAEvE,QAAMC,OAAO,GAAGC,kBAAkB,EAAlC;;AAEA,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDP,IAAAA,iBAAiB;AAClB,GALD;;AAOA,MAAIQ,OAAO,GAAG,EAAd;;AAEA,MAAI,OAAOP,OAAP,KAAmB,QAAvB,EAAiC;AAC7BO,IAAAA,OAAO,GAAGP,OAAV;AACH;;AACD,MAAIQ,KAAK,CAACC,OAAN,CAAcT,OAAd,CAAJ,EAA4B;AACxBO,IAAAA,OAAO,GAAGP,OAAO,CAACU,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,KACpB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASD,IAAT,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADQ,CAAV;AAMH;;AAED,SACE;AAAK,IAAA,SAAS,EAAET,OAAO,CAACW,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,OAAO,KAAK,IAAZ,IAAoBC,QAAQ,KAAK,IAAjC,GAAwC,IAAxC,GACC,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEH,IAAhB;AAAsB,IAAA,gBAAgB,EAAE,KAAxC;AAA+C,IAAA,OAAO,EAAEM,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC,QAAhC;AAAyC,IAAA,QAAQ,EAAEH,QAAnD;AAA6D,IAAA,OAAO,EAAEG,WAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,OADL,CADF,CAFJ,CADF;AAWD,CApCD;;AAsCA,eAAeV,YAAf","sourcesContent":["import React, { Fragment } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n  return ;\r\n}\r\n\r\n// Notification component\r\nconst Notification = ({ open, closeNotification, message, severity }) => {\r\n  \r\n  const classes = notificationStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    closeNotification();\r\n  };\r\n\r\n  let msghtml = \"\"\r\n\r\n  if (typeof message === \"string\") {\r\n      msghtml = message\r\n  }\r\n  if (Array.isArray(message)) {\r\n      msghtml = message.map((line, index) => (\r\n        <Fragment key={index}>\r\n            <span>- {line}</span>\r\n            <br></br>\r\n        </Fragment>\r\n      ))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {message === null && severity === null ? null : (\r\n        <Snackbar open={open} autoHideDuration={20000} onClose={handleClose}>\r\n          <MuiAlert elevation={6} variant=\"filled\" severity={severity} onClose={handleClose}>\r\n              {msghtml}\r\n          </MuiAlert>\r\n        </Snackbar>\r\n      ) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;"]},"metadata":{},"sourceType":"module"}