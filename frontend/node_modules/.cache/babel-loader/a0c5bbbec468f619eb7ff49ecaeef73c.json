{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import axios from'axios';// Check access token in local storage to verify if the user is logged\nexport function isLogged(){var logged=null;var access_token=getTokenFromLocalStorage(\"access_token\");access_token?logged=true:logged=false;return logged;}// Login function\nexport function login(username,password){var clientId,grantType,response,accessToken,expiresIn;return _regeneratorRuntime.async(function login$(_context){while(1){switch(_context.prev=_context.next){case 0:clientId=process.env.REACT_APP_CLIENT_ID;grantType=process.env.REACT_APP_GRANT_TYPE;_context.prev=2;_context.next=5;return _regeneratorRuntime.awrap(axios.post(\"http://localhost:8081/oauth/token?grant_type=\".concat(grantType,\"&username=\").concat(username,\"&password=\").concat(password,\"&client_id=\").concat(clientId)));case 5:response=_context.sent;accessToken=response.data.access_token;expiresIn=response.data.expires_in;setTokenInLocalStorage(\"access_token\",accessToken,expiresIn);return _context.abrupt(\"return\",true);case 12:_context.prev=12;_context.t0=_context[\"catch\"](2);return _context.abrupt(\"return\",false);case 15:case\"end\":return _context.stop();}}},null,null,[[2,12]]);}// Logout function\nexport function logout(){localStorage.removeItem(\"access_token\");}function setTokenInLocalStorage(tokenKey,tokenValue,expiresIn){var now=new Date();var expiresInMls=expiresIn*1000;var token={value:tokenValue,expiry:now.getTime()+expiresInMls};localStorage.setItem(tokenKey,JSON.stringify(token));}// Retrieve token in local storage\nexport function getTokenFromLocalStorage(tokenKey){var tokenStr=localStorage.getItem(tokenKey);// if the item doesn't exist, return null\nif(!tokenStr){return null;}var token=JSON.parse(tokenStr);var now=new Date();// compare the expiry time of the token with the current time\nif(now.getTime()>token.expiry){// If the token is expired, delete the token from storage\n// and return null\nlocalStorage.removeItem(tokenKey);return null;}return token.value;}// Get speaker username\nexport function getUsername(){var accessToken,response,username;return _regeneratorRuntime.async(function getUsername$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;accessToken=getTokenFromLocalStorage(\"access_token\");_context2.next=4;return _regeneratorRuntime.awrap(axios.get(\"http://localhost:8081/api/speakers/getusername\",{headers:{'Content-Type':'application/json',\"Authorization\":\"Bearer \".concat(accessToken)}}));case 4:response=_context2.sent;username=response.data;console.log(username);return _context2.abrupt(\"return\",username);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);return _context2.abrupt(\"return\",_context2.t0.response);case 14:case\"end\":return _context2.stop();}}},null,null,[[0,10]]);}","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Auth/authService.js"],"names":["axios","isLogged","logged","access_token","getTokenFromLocalStorage","login","username","password","clientId","process","env","REACT_APP_CLIENT_ID","grantType","REACT_APP_GRANT_TYPE","post","response","accessToken","data","expiresIn","expires_in","setTokenInLocalStorage","logout","localStorage","removeItem","tokenKey","tokenValue","now","Date","expiresInMls","token","value","expiry","getTime","setItem","JSON","stringify","tokenStr","getItem","parse","getUsername","get","headers","console","log"],"mappings":"6HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA,MAAO,SAASC,CAAAA,QAAT,EAAoB,CACvB,GAAIC,CAAAA,MAAM,CAAG,IAAb,CACA,GAAMC,CAAAA,YAAY,CAAGC,wBAAwB,CAAC,cAAD,CAA7C,CAEAD,YAAY,CAAGD,MAAM,CAAG,IAAZ,CAAmBA,MAAM,CAAG,KAAxC,CAEA,MAAOA,CAAAA,MAAP,CACH,CAED;AACA,MAAO,SAAeG,CAAAA,KAAf,CAAqBC,QAArB,CAA+BC,QAA/B,uKACOC,QADP,CACkBC,OAAO,CAACC,GAAR,CAAYC,mBAD9B,CAEOC,SAFP,CAEmBH,OAAO,CAACC,GAAR,CAAYG,oBAF/B,kEAK4Bb,KAAK,CAACc,IAAN,wDAA2DF,SAA3D,sBAAiFN,QAAjF,sBAAsGC,QAAtG,uBAA4HC,QAA5H,EAL5B,SAKWO,QALX,eAMWC,WANX,CAMyBD,QAAQ,CAACE,IAAT,CAAcd,YANvC,CAOWe,SAPX,CAOuBH,QAAQ,CAACE,IAAT,CAAcE,UAPrC,CAQKC,sBAAsB,CAAC,cAAD,CAAiBJ,WAAjB,CAA8BE,SAA9B,CAAtB,CARL,gCASY,IATZ,4FAWY,KAXZ,oEAeP;AACA,MAAO,SAASG,CAAAA,MAAT,EAAkB,CACrBC,YAAY,CAACC,UAAb,CAAwB,cAAxB,EACH,CAED,QAASH,CAAAA,sBAAT,CAAgCI,QAAhC,CAA0CC,UAA1C,CAAsDP,SAAtD,CAAiE,CAC7D,GAAMQ,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,EAAZ,CACA,GAAMC,CAAAA,YAAY,CAAGV,SAAS,CAAG,IAAjC,CAEA,GAAMW,CAAAA,KAAK,CAAG,CACVC,KAAK,CAAEL,UADG,CAEVM,MAAM,CAAEL,GAAG,CAACM,OAAJ,GAAgBJ,YAFd,CAAd,CAKAN,YAAY,CAACW,OAAb,CAAqBT,QAArB,CAA+BU,IAAI,CAACC,SAAL,CAAeN,KAAf,CAA/B,EACH,CAED;AACA,MAAO,SAASzB,CAAAA,wBAAT,CAAkCoB,QAAlC,CAA4C,CAClD,GAAMY,CAAAA,QAAQ,CAAGd,YAAY,CAACe,OAAb,CAAqBb,QAArB,CAAjB,CACA;AACA,GAAI,CAACY,QAAL,CAAe,CACd,MAAO,KAAP,CACA,CACD,GAAMP,CAAAA,KAAK,CAAGK,IAAI,CAACI,KAAL,CAAWF,QAAX,CAAd,CACA,GAAMV,CAAAA,GAAG,CAAG,GAAIC,CAAAA,IAAJ,EAAZ,CACA;AACA,GAAID,GAAG,CAACM,OAAJ,GAAgBH,KAAK,CAACE,MAA1B,CAAkC,CACjC;AACA;AACAT,YAAY,CAACC,UAAb,CAAwBC,QAAxB,EACA,MAAO,KAAP,CACG,CAEJ,MAAOK,CAAAA,KAAK,CAACC,KAAb,CACA,CAED;AACA,MAAO,SAAeS,CAAAA,WAAf,8KAEOvB,WAFP,CAEqBZ,wBAAwB,CAAC,cAAD,CAF7C,mDAGwBJ,KAAK,CAACwC,GAAN,CACnB,gDADmB,CAEnB,CAAEC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAAsC,iCAA2BzB,WAA3B,CAAtC,CAAX,CAFmB,CAHxB,SAGOD,QAHP,gBAOOT,QAPP,CAOkBS,QAAQ,CAACE,IAP3B,CAQCyB,OAAO,CAACC,GAAR,CAAYrC,QAAZ,EARD,iCASQA,QATR,+DAWCoC,OAAO,CAACC,GAAR,eAXD,iCAYQ,aAAM5B,QAZd","sourcesContent":["import axios from 'axios';\r\n\r\n// Check access token in local storage to verify if the user is logged\r\nexport function isLogged() {\r\n    let logged = null;\r\n    const access_token = getTokenFromLocalStorage(\"access_token\");\r\n\r\n    access_token ? logged = true : logged = false;\r\n\r\n    return logged;\r\n}\r\n\r\n// Login function\r\nexport async function login(username, password) {\r\n        const clientId = process.env.REACT_APP_CLIENT_ID\r\n        const grantType = process.env.REACT_APP_GRANT_TYPE\r\n      \r\n        try {\r\n            const response = await axios.post(`http://localhost:8081/oauth/token?grant_type=${grantType}&username=${username}&password=${password}&client_id=${clientId}`)\r\n            const accessToken = response.data.access_token\r\n            const expiresIn = response.data.expires_in\r\n            setTokenInLocalStorage(\"access_token\", accessToken, expiresIn)\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n}\r\n\r\n// Logout function\r\nexport function logout() {\r\n    localStorage.removeItem(\"access_token\");\r\n}\r\n\r\nfunction setTokenInLocalStorage(tokenKey, tokenValue, expiresIn) {\r\n    const now = new Date();\r\n    const expiresInMls = expiresIn * 1000;\r\n\r\n    const token = {\r\n        value: tokenValue,\r\n        expiry: now.getTime() + expiresInMls\r\n    }\r\n\r\n    localStorage.setItem(tokenKey, JSON.stringify(token))\r\n}\r\n\r\n// Retrieve token in local storage\r\nexport function getTokenFromLocalStorage(tokenKey) {\r\n\tconst tokenStr = localStorage.getItem(tokenKey)\r\n\t// if the item doesn't exist, return null\r\n\tif (!tokenStr) {\r\n\t\treturn null\r\n\t}\r\n\tconst token = JSON.parse(tokenStr)\r\n\tconst now = new Date()\r\n\t// compare the expiry time of the token with the current time\r\n\tif (now.getTime() > token.expiry) {\r\n\t\t// If the token is expired, delete the token from storage\r\n\t\t// and return null\r\n\t\tlocalStorage.removeItem(tokenKey)\r\n\t\treturn null\r\n    }\r\n\r\n\treturn token.value\r\n}\r\n\r\n// Get speaker username\r\nexport async function getUsername() {        \r\n    try {\r\n        const accessToken = getTokenFromLocalStorage(\"access_token\")\r\n        const response = await axios.get(\r\n            \"http://localhost:8081/api/speakers/getusername\",\r\n            { headers: { 'Content-Type': 'application/json', \"Authorization\": `Bearer ${accessToken}` } }\r\n        )\r\n        const username = response.data;\r\n        console.log(username);\r\n        return username;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error.response;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}