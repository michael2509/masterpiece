{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\src\\\\Room\\\\SingleRoom\\\\CreateGuest.jsx\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { withFormik } from 'formik';\nimport listServerErrors from '../../global/functions/listServerErrors';\n\nfunction CreateGuestForm(props) {\n  const values = props.values,\n        touched = props.touched,\n        errors = props.errors,\n        handleChange = props.handleChange,\n        handleBlur = props.handleBlur,\n        handleSubmit = props.handleSubmit,\n        open = props.open;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Dialog, {\n    open: open,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Choix du pseudo\"), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Veuillez choisir le pseudo que vous utiliserez dans ce salon.\"), React.createElement(TextField, {\n    id: \"username\",\n    label: \"Pseudo\",\n    type: \"text\",\n    value: values.username,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    helperText: touched.username ? errors.username : \"\",\n    error: touched.username && Boolean(errors.username),\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    autoFocus: true,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleSubmit,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Valider\"))));\n}\n\nconst CreateGuest = withFormik({\n  mapPropsToValues: ({\n    username\n  }) => {\n    return {\n      username: username || \"\"\n    };\n  },\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"Entrez un pseudo\")\n  }),\n  handleSubmit: async (values, {\n    props,\n    resetForm\n  }) => {\n    const roomCode = props.roomCode,\n          openNotif = props.openNotif,\n          closeForm = props.closeForm,\n          setGuestPseudo = props.setGuestPseudo;\n\n    const guest = _objectSpread({}, values, {\n      roomCode: roomCode\n    });\n\n    const guestjson = JSON.stringify(guest);\n\n    try {\n      // create guest user\n      await axios.post(\"http://localhost:8081/api/guests\", guestjson, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }); // Clean form\n\n      resetForm(); // Show welcome notif\n\n      openNotif(`Bienvenue ${guest.username}, vous pouvez maintenant envoyer vos messages dans ce salon`, \"success\"); // close choose username form\n\n      closeForm(); // Set current user id\n\n      setGuestPseudo(guest.username);\n    } catch (e) {\n      // Show errors in notif\n      const errorList = listServerErrors(e.response.status, e.response.data);\n      openNotif(errorList, \"error\");\n    }\n  }\n})(CreateGuestForm);\nexport default CreateGuest;","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Room/SingleRoom/CreateGuest.jsx"],"names":["React","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Yup","axios","withFormik","listServerErrors","CreateGuestForm","props","values","touched","errors","handleChange","handleBlur","handleSubmit","open","username","Boolean","CreateGuest","mapPropsToValues","validationSchema","object","shape","string","required","resetForm","roomCode","openNotif","closeForm","setGuestPseudo","guest","guestjson","JSON","stringify","post","headers","e","errorList","response","status","data"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { withFormik } from 'formik';\r\nimport listServerErrors from '../../global/functions/listServerErrors';\r\n\r\nfunction CreateGuestForm(props) {\r\n\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    open\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Choix du pseudo</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Veuillez choisir le pseudo que vous utiliserez dans ce salon.\r\n          </DialogContentText>\r\n          <TextField\r\n                    id=\"username\"\r\n                    label=\"Pseudo\"\r\n                    type=\"text\"\r\n                    value={values.username}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.username ? errors.username : \"\"}\r\n                    error={touched.username && Boolean(errors.username)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    autoFocus\r\n                    required\r\n                />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Valider\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CreateGuest = withFormik({\r\n  mapPropsToValues: ({\r\n      username\r\n  }) => {\r\n      return {\r\n          username: username || \"\"\r\n      };\r\n  },\r\n\r\n  validationSchema: Yup.object().shape({\r\n      username: Yup.string()\r\n          .required(\"Entrez un pseudo\")\r\n  }),\r\n\r\n  handleSubmit: async (values, { props, resetForm }) => {\r\n\r\n      const { roomCode, openNotif, closeForm, setGuestPseudo } = props;\r\n      const guest = {...values, roomCode: roomCode}\r\n      const guestjson = JSON.stringify(guest);\r\n\r\n      try {\r\n        // create guest user\r\n        await axios.post(\r\n          \"http://localhost:8081/api/guests\",\r\n          guestjson,\r\n          { headers: { 'Content-Type': 'application/json' } }\r\n        )\r\n\r\n        // Clean form\r\n        resetForm();\r\n        // Show welcome notif\r\n        openNotif(`Bienvenue ${guest.username}, vous pouvez maintenant envoyer vos messages dans ce salon`, \"success\")\r\n        // close choose username form\r\n        closeForm();\r\n        // Set current user id\r\n        setGuestPseudo(guest.username);\r\n      } catch(e) {           \r\n        // Show errors in notif\r\n        const errorList = listServerErrors(e.response.status, e.response.data)\r\n        openNotif(errorList, \"error\")\r\n      }\r\n    }\r\n})(CreateGuestForm);\r\n\r\nexport default CreateGuest;"]},"metadata":{},"sourceType":"module"}