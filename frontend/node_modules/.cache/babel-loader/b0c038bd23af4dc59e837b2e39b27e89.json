{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import AppBar from'@material-ui/core/AppBar';import CssBaseline from'@material-ui/core/CssBaseline';import Divider from'@material-ui/core/Divider';import Drawer from'@material-ui/core/Drawer';import Hidden from'@material-ui/core/Hidden';import IconButton from'@material-ui/core/IconButton';import MeetingRoomIcon from'@material-ui/icons/MeetingRoom';import PersonAddIcon from'@material-ui/icons/PersonAdd';import AccountCircleIcon from'@material-ui/icons/AccountCircle';import ExitToAppIcon from'@material-ui/icons/ExitToApp';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemText from'@material-ui/core/ListItemText';import MenuIcon from'@material-ui/icons/Menu';import Toolbar from'@material-ui/core/Toolbar';import{useTheme}from'@material-ui/core/styles';import{Link,withRouter}from'react-router-dom';import{isLogged,logout}from'../../Auth/authService';import{Typography}from'@material-ui/core';import navbarStyles from'./navbarStyles';// Navbar component\nfunction Navbar(props){var container=props.container,history=props.history,openNotification=props.openNotification;var classes=navbarStyles();var theme=useTheme();var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),mobileOpen=_React$useState2[0],setMobileOpen=_React$useState2[1];var handleDrawerToggle=function handleDrawerToggle(){setMobileOpen(!mobileOpen);};var logoutAndRedirect=function logoutAndRedirect(){logout();openNotification(\"Vous êtes déconnecté\",\"info\");history.push(\"/connexion\");};// Check if user is logged\nvar logged=isLogged();var navLinks;// Display different buttons in navbar if user is logged or not\nif(logged){navLinks=[{title:'chats',path:'/chats',icon:React.createElement(MeetingRoomIcon,null)},{title:'Déconnexion',icon:React.createElement(ExitToAppIcon,null)}];}else{navLinks=[{title:'Inscription',path:'/inscription',icon:React.createElement(PersonAddIcon,null)},{title:'Connexion',path:'/connexion',icon:React.createElement(AccountCircleIcon,null)}];}// Drawer for mobile menu\nvar drawer=React.createElement(\"div\",null,React.createElement(\"div\",{className:\"\".concat(classes.toolbar,\" \").concat(classes.drawerLogo,\" \").concat(classes.logoWrapper)},React.createElement(Link,{to:\"/\",className:classes.drawerLink},React.createElement(Typography,null,\"WeChat\"))),React.createElement(Divider,null),React.createElement(List,null,navLinks.map(function(_ref,index){var title=_ref.title,path=_ref.path,icon=_ref.icon;if(title===\"Déconnexion\"){return React.createElement(ListItem,{onClick:logoutAndRedirect,key:index,button:true},React.createElement(ListItemIcon,null,icon),React.createElement(ListItemText,{primary:title}));}else{return React.createElement(Link,{to:path,className:classes.drawerLink,key:index},React.createElement(ListItem,{button:true},React.createElement(ListItemIcon,null,icon),React.createElement(ListItemText,{primary:title})));}})));return React.createElement(\"div\",{className:classes.root},React.createElement(CssBaseline,null),React.createElement(AppBar,{className:classes.appBar},React.createElement(Toolbar,{style:{height:props.navbarHeight}},React.createElement(IconButton,{color:\"inherit\",\"aria-label\":\"open drawer\",edge:\"start\",onClick:handleDrawerToggle,className:classes.menuButton},React.createElement(MenuIcon,null)),React.createElement(Link,{to:\"/\",className:classes.navbarLink},React.createElement(Typography,null,\"WeChat\")),React.createElement(Hidden,{smDown:true},React.createElement(\"div\",{style:{flexGrow:1}}),React.createElement(List,{style:{display:\"flex\"}},navLinks.map(function(_ref2,index){var title=_ref2.title,path=_ref2.path;if(title===\"Déconnexion\"){return React.createElement(ListItem,{key:index,onClick:logoutAndRedirect,button:true},React.createElement(ListItemText,{primary:title}));}else{return React.createElement(Link,{to:path,className:classes.navbarLink,key:index},React.createElement(ListItem,{button:true},React.createElement(ListItemText,{primary:title})));}}))))),React.createElement(\"nav\",{className:classes.drawer,\"aria-label\":\"mailbox folders\"},React.createElement(Hidden,{smUp:true,implementation:\"css\"},React.createElement(Drawer,{container:container,variant:\"temporary\",anchor:theme.direction==='rtl'?'right':'left',open:mobileOpen,onClose:handleDrawerToggle,classes:{paper:classes.drawerPaper},ModalProps:{keepMounted:true// Better open performance on mobile.\n}},drawer))));}export default withRouter(Navbar);","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/App/Navbar/Navbar.jsx"],"names":["React","AppBar","CssBaseline","Divider","Drawer","Hidden","IconButton","MeetingRoomIcon","PersonAddIcon","AccountCircleIcon","ExitToAppIcon","List","ListItem","ListItemIcon","ListItemText","MenuIcon","Toolbar","useTheme","Link","withRouter","isLogged","logout","Typography","navbarStyles","Navbar","props","container","history","openNotification","classes","theme","useState","mobileOpen","setMobileOpen","handleDrawerToggle","logoutAndRedirect","push","logged","navLinks","title","path","icon","drawer","toolbar","drawerLogo","logoWrapper","drawerLink","map","index","root","appBar","height","navbarHeight","menuButton","navbarLink","flexGrow","display","direction","paper","drawerPaper","keepMounted"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { isLogged, logout } from '../../Auth/authService';\r\nimport { Typography } from '@material-ui/core';\r\nimport navbarStyles from './navbarStyles';\r\n\r\n// Navbar component\r\nfunction Navbar(props) {\r\n    const { container, history, openNotification } = props;\r\n    const classes = navbarStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const logoutAndRedirect = () => {\r\n        logout();\r\n        openNotification(\"Vous êtes déconnecté\", \"info\");\r\n        history.push(\"/connexion\");\r\n    }\r\n\r\n    // Check if user is logged\r\n    const logged = isLogged();\r\n    let navLinks;\r\n\r\n    // Display different buttons in navbar if user is logged or not\r\n    if (logged) {\r\n        navLinks = [\r\n            { title: 'chats', path: '/chats', icon: <MeetingRoomIcon /> },\r\n            { title: 'Déconnexion', icon: <ExitToAppIcon /> },\r\n        ]\r\n    } else {\r\n        navLinks = [\r\n            { title: 'Inscription', path: '/inscription', icon: <PersonAddIcon /> },\r\n            { title: 'Connexion', path: '/connexion', icon: <AccountCircleIcon /> },\r\n        ]\r\n    }\r\n\r\n    // Drawer for mobile menu\r\n    const drawer = (\r\n        <div>\r\n            <div className={`${classes.toolbar} ${classes.drawerLogo} ${classes.logoWrapper}`}>\r\n                <Link to=\"/\" className={classes.drawerLink}>\r\n                    <Typography>WeChat</Typography>\r\n                </Link>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                {navLinks.map(({ title, path, icon }, index) => {\r\n                    if (title === \"Déconnexion\") {\r\n                        return (\r\n                            <ListItem onClick={logoutAndRedirect} key={index} button>\r\n                                <ListItemIcon>{icon}</ListItemIcon>\r\n                                <ListItemText primary={title} />\r\n                            </ListItem>\r\n                        )\r\n                    } else {\r\n                        return(\r\n                            <Link to={path} className={classes.drawerLink} key={index}>\r\n                                <ListItem button>\r\n                                        <ListItemIcon>{icon}</ListItemIcon>\r\n                                        <ListItemText primary={title} />\r\n                                </ListItem>\r\n                            </Link>\r\n                        )\r\n                    }\r\n                })}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar style={{ height: props.navbarHeight }}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Link to=\"/\" className={classes.navbarLink}>\r\n                        <Typography>WeChat</Typography>\r\n                    </Link>\r\n                    <Hidden smDown>\r\n                        <div style={{ flexGrow: 1 }} />\r\n                        <List style={{ display: \"flex\" }}>\r\n                            {navLinks.map(({ title, path }, index) => {\r\n                                if (title === \"Déconnexion\") {\r\n                                    return (\r\n                                        <ListItem key={index} onClick={logoutAndRedirect} button>\r\n                                            <ListItemText primary={title} />\r\n                                        </ListItem>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        <Link to={path} className={classes.navbarLink} key={index}>\r\n                                            <ListItem button>\r\n                                                <ListItemText primary={title} />\r\n                                            </ListItem>\r\n                                        </Link>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </List>\r\n                    </Hidden>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Navbar);"]},"metadata":{},"sourceType":"module"}