{"ast":null,"code":"import React from'react';import Avatar from'@material-ui/core/Avatar';import Button from'@material-ui/core/Button';import TextField from'@material-ui/core/TextField';import Link from'@material-ui/core/Link';import LockOutlinedIcon from'@material-ui/icons/LockOutlined';import Typography from'@material-ui/core/Typography';import label from'../../global/configs/label';import{withFormik}from\"formik\";import*as Yup from\"yup\";import{Paper}from'@material-ui/core';import{Link as RouterLink,withRouter}from'react-router-dom';import signUpStyles from'./signUpStyles';// Signup form component\nvar signUpForm=function signUpForm(props){var values=props.values,touched=props.touched,errors=props.errors,handleChange=props.handleChange,handleBlur=props.handleBlur,handleSubmit=props.handleSubmit;var classes=signUpStyles();return React.createElement(Paper,{className:classes.paper,elevation:5},React.createElement(Avatar,{className:classes.avatar},React.createElement(LockOutlinedIcon,null)),React.createElement(Typography,{className:classes.title,component:\"h1\",variant:\"h5\"},\"Inscription\"),React.createElement(\"form\",{className:classes.form,onSubmit:handleSubmit,noValidate:true},React.createElement(TextField,{id:\"username\",label:label.username,value:values.username,onChange:handleChange,onBlur:handleBlur,helperText:touched.username?errors.username:\"\",error:touched.username&&Boolean(errors.username),variant:\"outlined\",margin:\"normal\",autoFocus:true,fullWidth:true,required:true}),React.createElement(TextField,{id:\"password\",label:label.password,type:\"password\",value:values.password,onChange:handleChange,onBlur:handleBlur,helperText:touched.password?errors.password:\"\",error:touched.password&&Boolean(errors.password),variant:\"outlined\",margin:\"normal\",fullWidth:true,required:true}),React.createElement(TextField,{id:\"confirmPassword\",label:label.confirmPassword,type:\"password\",value:values.confirmPassword,onChange:handleChange,onBlur:handleBlur,helperText:touched.confirmPassword?errors.confirmPassword:\"\",error:touched.confirmPassword&&Boolean(errors.confirmPassword),variant:\"outlined\",margin:\"normal\",fullWidth:true,required:true}),React.createElement(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"primary\",className:classes.submit,size:\"large\"},\"S'inscrire\")),React.createElement(RouterLink,{to:\"/connexion\"},React.createElement(Link,{component:\"span\",variant:\"body2\"},\"Vous avez d\\xE9j\\xE0 un compte? Connectez-vous\")));};// Signup form component with formik validation\nvar SignUp=withFormik({mapPropsToValues:function mapPropsToValues(_ref){var username=_ref.username,password=_ref.password,confirmPassword=_ref.confirmPassword;return{username:username||\"\",password:password||\"\",confirmPassword:confirmPassword||\"\"};},validationSchema:Yup.object().shape({username:Yup.string().required(\"Entrez votre identifiant\"),password:Yup.string().matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.:;?|/\\\\{}<>!@#$%^&*()_+-=])(?=.{8,})/,\"Doit contenir au moins 8 caractères, 1 minuscule, 1 majuscule, 1 chiffres, 1 caractère spécial\").required(\"Entrez votre mot de passe\"),confirmPassword:Yup.string().required(\"Confirmez votre mot de passe\").oneOf([Yup.ref(\"password\")],\"Le mot de passe ne correspond pas\")}),handleSubmit:function handleSubmit(values,_ref2){var props=_ref2.props,resetForm=_ref2.resetForm;var createSpeaker=props.createSpeaker,history=props.history;var speaker=Object.assign({},values);delete speaker.confirmPassword;createSpeaker(speaker).then(function(requestSuccess){if(requestSuccess){resetForm();history.push(\"/connexion\");}});}})(signUpForm);export default withRouter(SignUp);","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Auth/SignUp/SignUp.jsx"],"names":["React","Avatar","Button","TextField","Link","LockOutlinedIcon","Typography","label","withFormik","Yup","Paper","RouterLink","withRouter","signUpStyles","signUpForm","props","values","touched","errors","handleChange","handleBlur","handleSubmit","classes","paper","avatar","title","form","username","Boolean","password","confirmPassword","submit","SignUp","mapPropsToValues","validationSchema","object","shape","string","required","matches","oneOf","ref","resetForm","createSpeaker","history","speaker","Object","assign","then","requestSuccess","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport label from '../../global/configs/label';\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Paper } from '@material-ui/core';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport signUpStyles from './signUpStyles';\r\n\r\n// Signup form component\r\nconst signUpForm = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit\r\n    } = props;\r\n\r\n    const classes = signUpStyles()\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={5}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography className={classes.title} component=\"h1\" variant=\"h5\">\r\n                Inscription\r\n                    </Typography>\r\n            <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n                <TextField\r\n                    id=\"username\"\r\n                    label={label.username}\r\n                    value={values.username}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.username ? errors.username : \"\"}\r\n                    error={touched.username && Boolean(errors.username)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    autoFocus\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <TextField\r\n                    id=\"password\"\r\n                    label={label.password}\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.password ? errors.password : \"\"}\r\n                    error={touched.password && Boolean(errors.password)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <TextField\r\n                    id=\"confirmPassword\"\r\n                    label={label.confirmPassword}\r\n                    type=\"password\"\r\n                    value={values.confirmPassword}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.confirmPassword ? errors.confirmPassword : \"\"}\r\n                    error={touched.confirmPassword && Boolean(errors.confirmPassword)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    size=\"large\"\r\n                >\r\n                    S'inscrire\r\n                        </Button>\r\n\r\n            </form>\r\n            <RouterLink to={\"/connexion\"}>\r\n                <Link component=\"span\" variant=\"body2\">Vous avez déjà un compte? Connectez-vous</Link>\r\n            </RouterLink>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n// Signup form component with formik validation\r\nconst SignUp = withFormik({\r\n    mapPropsToValues: ({\r\n        username,\r\n        password,\r\n        confirmPassword,\r\n    }) => {\r\n        return {\r\n            username: username || \"\",\r\n            password: password || \"\",\r\n            confirmPassword: confirmPassword || \"\",\r\n        };\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n        username: Yup.string()\r\n            .required(\"Entrez votre identifiant\"),\r\n        password: Yup.string()\r\n            .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.:;?|/\\\\{}<>!@#$%^&*()_+-=])(?=.{8,})/, \"Doit contenir au moins 8 caractères, 1 minuscule, 1 majuscule, 1 chiffres, 1 caractère spécial\")\r\n            .required(\"Entrez votre mot de passe\"),\r\n        confirmPassword: Yup.string()\r\n            .required(\"Confirmez votre mot de passe\")\r\n            .oneOf([Yup.ref(\"password\")], \"Le mot de passe ne correspond pas\")\r\n    }),\r\n\r\n    handleSubmit: (values, { props, resetForm }) => {\r\n\r\n        const { createSpeaker, history } = props\r\n        const speaker = Object.assign({}, values)\r\n        delete speaker.confirmPassword\r\n\r\n        createSpeaker(speaker).then(requestSuccess => {\r\n            if (requestSuccess) {\r\n                resetForm()\r\n                history.push(\"/connexion\")\r\n            }\r\n        })\r\n\r\n    }\r\n})(signUpForm);\r\n\r\nexport default withRouter(SignUp);"]},"metadata":{},"sourceType":"module"}