{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\micha\\\\Projets\\\\masterpiece\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from'react';import ChatList from'./ChatList/ChatList';import AddChat from'./AddChat/AddChat';import{createChat as _createChat,deleteChat as _deleteChat,getChatPage as _getChatPage,openUpdateChat as _openUpdateChat,closeUpdateChat as _closeUpdateChat,updateChat as _updateChat,fetchMoreChats as _fetchMoreChats}from\"./redux/chatActions\";import{connect}from\"react-redux\";import{isLogged}from'../Auth/authService';import UpdateChat from'./UpdateChat/UpdateChat';import Container from'@material-ui/core/Container';// Chat container to connect to app state using redux\nvar ChatsContainer=/*#__PURE__*/function(_Component){_inherits(ChatsContainer,_Component);function ChatsContainer(){_classCallCheck(this,ChatsContainer);return _possibleConstructorReturn(this,_getPrototypeOf(ChatsContainer).apply(this,arguments));}_createClass(ChatsContainer,[{key:\"componentDidMount\",value:function componentDidMount(){this.props.getChatPage(0);}},{key:\"render\",value:function render(){var _this$props=this.props,chatState=_this$props.chatState,createChat=_this$props.createChat,deleteChat=_this$props.deleteChat,getChatPage=_this$props.getChatPage,openUpdateChat=_this$props.openUpdateChat,closeUpdateChat=_this$props.closeUpdateChat,updateChat=_this$props.updateChat,fetchMoreChats=_this$props.fetchMoreChats,history=_this$props.history;var chatPage=chatState.chatPage,pageNumber=chatState.pageNumber,totalPages=chatState.totalPages,updateChatState=chatState.updateChatState,last=chatState.last;var logged=isLogged();if(!logged){history.push(\"/connexion\");}return React.createElement(Container,{component:\"main\",maxWidth:\"md\",style:{minHeight:\"calc(100vh - 150px)\",marginTop:150}},React.createElement(ChatList,{totalPages:totalPages,chatPage:chatPage,getChatPage:getChatPage,pageNumber:pageNumber,deleteChat:deleteChat,openUpdateChat:openUpdateChat,fetchMoreChats:fetchMoreChats,last:last}),React.createElement(AddChat,{createChat:createChat,getChatPage:getChatPage,pageNumber:pageNumber}),React.createElement(UpdateChat,{state:updateChatState,handleClose:closeUpdateChat,updateChat:updateChat}));}}]);return ChatsContainer;}(Component);// Part of the app state to retrieve\nvar mapStateToProps=function mapStateToProps(state){return{chatState:state.chats,navbarState:state.navbar};};// Actions to retrieve\nvar mapDispatchToProps=function mapDispatchToProps(dispatch){return{createChat:function createChat(chat){return dispatch(_createChat(chat));},updateChat:function updateChat(chat){return dispatch(_updateChat(chat));},deleteChat:function deleteChat(chatId){return dispatch(_deleteChat(chatId));},getChatPage:function getChatPage(pageNumber){return dispatch(_getChatPage(pageNumber));},fetchMoreChats:function fetchMoreChats(pageNumber){return dispatch(_fetchMoreChats(pageNumber));},openUpdateChat:function openUpdateChat(chat){return dispatch(_openUpdateChat(chat));},closeUpdateChat:function closeUpdateChat(){return dispatch(_closeUpdateChat());}};};export default connect(mapStateToProps,mapDispatchToProps)(ChatsContainer);","map":{"version":3,"sources":["C:/Users/micha/Projets/masterpiece/frontend/src/Chat/ChatsContainer.jsx"],"names":["React","Component","ChatList","AddChat","createChat","deleteChat","getChatPage","openUpdateChat","closeUpdateChat","updateChat","fetchMoreChats","connect","isLogged","UpdateChat","Container","ChatsContainer","props","chatState","history","chatPage","pageNumber","totalPages","updateChatState","last","logged","push","minHeight","marginTop","mapStateToProps","state","chats","navbarState","navbar","mapDispatchToProps","dispatch","chat","chatId"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ChatList from './ChatList/ChatList';\r\nimport AddChat from './AddChat/AddChat';\r\nimport { createChat, deleteChat, getChatPage, openUpdateChat, closeUpdateChat, updateChat, fetchMoreChats } from \"./redux/chatActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { isLogged } from '../Auth/authService';\r\nimport UpdateChat from './UpdateChat/UpdateChat';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n// Chat container to connect to app state using redux\r\nclass ChatsContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getChatPage(0);\r\n    }\r\n\r\n    render() {\r\n        const { chatState, createChat, deleteChat, getChatPage, openUpdateChat, closeUpdateChat, updateChat, fetchMoreChats, history } = this.props;\r\n        const { chatPage, pageNumber, totalPages, updateChatState, last } = chatState;\r\n\r\n        const logged = isLogged();\r\n\r\n        if (!logged) {\r\n            history.push(\"/connexion\")\r\n        }\r\n\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"md\" style={{ minHeight: `calc(100vh - 150px)`, marginTop: 150}}>\r\n                <ChatList totalPages={totalPages} chatPage={chatPage} getChatPage={getChatPage} pageNumber={pageNumber} deleteChat={deleteChat} openUpdateChat={openUpdateChat} fetchMoreChats={fetchMoreChats} last={last} />\r\n                <AddChat createChat={createChat} getChatPage={getChatPage} pageNumber={pageNumber} />\r\n                <UpdateChat state={updateChatState} handleClose={closeUpdateChat} updateChat={updateChat} />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n// Part of the app state to retrieve\r\nconst mapStateToProps = (state) => ({ chatState: state.chats, navbarState: state.navbar });\r\n\r\n// Actions to retrieve\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    createChat: (chat) => dispatch(createChat(chat)),\r\n    updateChat: (chat) => dispatch(updateChat(chat)),\r\n    deleteChat: (chatId) => dispatch(deleteChat(chatId)),\r\n    getChatPage: (pageNumber) => dispatch(getChatPage(pageNumber)),\r\n    fetchMoreChats: (pageNumber) => dispatch(fetchMoreChats(pageNumber)),\r\n    openUpdateChat: (chat) => dispatch(openUpdateChat(chat)),\r\n    closeUpdateChat: () => dispatch(closeUpdateChat()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatsContainer);"]},"metadata":{},"sourceType":"module"}