{"version":3,"sources":["global/assets/img/audience.png","serviceWorker.js","App/Footer/footerStyles.jsx","App/Footer/Footer.jsx","Notification/notificationReducer.js","Notification/notificationActionsTypes.js","Chat/redux/chatsReducer.js","Chat/redux/chatActionsTypes.js","Message/messageActionsTypes.js","Message/messagesReducer.js","Chat/SingleChat/singleChatActionsTypes.js","Chat/SingleChat/singleChatReducer.js","App/rootReducer.js","Notification/notificationStyles.jsx","Notification/Notification.jsx","Notification/notificationActions.js","Notification/NotificationContainer.jsx","Auth/authService.js","App/Navbar/navbarStyles.jsx","App/Navbar/Navbar.jsx","App/Navbar/NavbarContainer.jsx","Home/homeStyles.js","Chat/SingleChat/singleChatActions.js","Home/Home.jsx","App/privateRoute.jsx","App/PageNotFound/PageNotFound.jsx","global/configs/label.js","Auth/Login/loginStyles.jsx","Auth/Login/Login.jsx","Auth/authContainerStyles.jsx","Auth/AuthContainer.jsx","Auth/Login/LoginContainer.jsx","Chat/ChatList/ChatItem.jsx","Chat/ChatList/chatListStyles.jsx","Chat/ChatList/ChatList.jsx","Chat/AddChat/addChatStyles.jsx","Chat/AddChat/AddChat.jsx","global/configs/errorsCodesMsg.js","global/functions/buildErrorMsg.js","global/functions/listServerErrors.js","Chat/redux/chatActions.js","Chat/UpdateChat/updateChatStyles.jsx","Chat/UpdateChat/UpdateChat.jsx","Chat/ChatsContainer.jsx","Chat/SingleChat/SingleChat.jsx","Message/Message.jsx","Message/MessageList/messageListStyles.jsx","Message/MessageList/MessageList.jsx","Message/AddMessage/addMessageStyles.jsx","Message/AddMessage/AddMessage.jsx","Message/messageActions.js","Message/MessageContainer.jsx","Chat/SingleChat/CreateGuest.jsx","Chat/SingleChat/SingleChatContainer.jsx","Auth/SignUp/signUpStyles.jsx","Auth/SignUp/SignUp.jsx","Auth/SignUp/SignUpContainer.jsx","App/configure-store.js","Auth/SignUp/signUpActions.js","App/Routes.jsx","App/App.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","footerStyles","makeStyles","theme","footer","textAlign","padding","spacing","backgroundColor","palette","type","grey","Copyright","Typography","variant","color","Link","href","Date","getFullYear","StickyFooter","classes","className","Container","maxWidth","notificationInitialState","open","message","severity","notificationReducer","state","action","initialState","pageNumber","totalPages","last","updateChatState","chat","id","name","chatsReducer","chatPage","errorMsg","messagesReducer","senderName","text","messageList","accessCode","speakerUsername","senderType","showCreateGuest","singleChatReducer","speaker","username","rootReducer","navbar","height","notification","chats","SingleChat","messages","notificationStyles","root","width","marginTop","Notification","closeNotification","handleClose","event","reason","msghtml","Array","isArray","map","line","index","key","Snackbar","autoHideDuration","onClose","elevation","openNotification","NotificationContainer","this","props","Component","connect","dispatch","isLogged","getTokenFromLocalStorage","setTokenInLocalStorage","tokenKey","tokenValue","expiresIn","expiresInMls","token","value","expiry","getTime","localStorage","setItem","JSON","stringify","tokenStr","getItem","parse","removeItem","navbarStyles","display","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","drawerPaper","content","flexGrow","logoWrapper","justifyContent","alignItems","logo","drawerLink","textDecoration","drawerLogo","drawerLogoTitle","margin","navbarLink","iconsColor","fill","withRouter","navLinks","container","history","useTheme","React","useState","mobileOpen","setMobileOpen","handleDrawerToggle","logoutAndRedirect","push","title","path","icon","to","Divider","List","ListItem","onClick","button","ListItemIcon","ListItemText","primary","CssBaseline","AppBar","Toolbar","style","navbarHeight","IconButton","aria-label","edge","Hidden","smDown","smUp","implementation","Drawer","anchor","direction","paper","ModalProps","keepMounted","NavbarContainer","homeStyles","grid","alignSelf","down","image","backgroundImage","BackgroundImg","backgroundRepeat","backgroundSize","backgroundPosition","paddingTop","paddingBottom","flexDirection","avatar","main","form","submit","meetingRoom","gridItem","leftContainer","textShadow","leftSecondTitle","marginBottom","or","leftButton","SingleChatFound","Home","withFormik","mapPropsToValues","code","validationSchema","Yup","shape","max","required","handleSubmit","values","getSingleChatByAccessCode","then","pathname","chatId","touched","errors","handleChange","handleBlur","Grid","component","minHeight","item","xs","sm","md","Button","size","startIcon","Paper","square","Avatar","gutterBottom","onSubmit","noValidate","TextField","fullWidth","label","autoComplete","autoFocus","onChange","onBlur","error","helperText","endIcon","chatCode","a","async","axios","get","response","data","console","log","PrivateRoute","rest","render","from","PageNotFound","labels","LocalizedStrings","en","password","confirmPassword","startDateTime","endDateTime","fr","loginStyles","secondary","card","borderRadius","cardContent","Login","matches","resetForm","process","post","accessToken","access_token","expires_in","login","logged","authContainerStyles","authContainer","children","ChatItem","openUpdateChat","deleteChat","menuEl","setMenuEl","ListItemAvatar","ListItemSecondaryAction","currentTarget","MoreVert","anchorEl","MenuItem","updateChatClick","noWrap","chatListStyles","ChatList","background","noChat","paginationContainer","pagination","getChatPage","fetchMoreChats","align","length","xsDown","i","Pagination","page","count","dataLength","next","hasMore","addChatStyles","chatNameInput","datePicker","fab","position","bottom","right","textTransform","extendedIcon","AddChat","setSubmitting","createChat","reqSuccess","isSubmitting","setOpen","Fab","Dialog","aria-labelledby","disableBackdropClick","DialogTitle","DialogContent","DialogContentText","DialogActions","errorsCodesMsg","NotBlank","NotNull","UniqueUsername","Future","FutureOrPresent","Size","AfterDate","AccountPassword","buildErrorMsg","attribute","listServerErrors","status","forEach","serverError","msg","getChatPageSuccess","config","headers","fetchMoreChatsSuccess","updateChatStyles","UpdateChat","enableReinitialize","updateChat","ChatsContainer","chatState","closeUpdateChat","navbarState","chatJson","statusCode","errorMessages","put","delete","SingleChatStyles","section1","Message","disableGutters","toUpperCase","messageListStyles","messageSection","messagesTitle","noMessageText","MessageList","addMessageStyles","AddMessage","messageForm","sockJsClient","sendMessage","multiline","rows","fetchMessageList","formatMessages","formattedMessageList","formattedMessage","guest","pseudo","MessageContainer","createRef","getMessageList","prevProps","topic","body","statusCodeValue","addMessage","errorsMsg","current","url","topics","onConnect","onDisconnect","onMessage","handleMessage","ref","formattedMsgList","CreateGuest","openNotif","closeForm","setSenderName","setSenderType","guestjson","errorList","SingleChatContainer","getSingleChat","getUsername","openCreateGuest","params","closeCreateGuest","signUpStyles","SignUp","oneOf","createSpeaker","Object","assign","requestSuccess","preloadedState","speakerJson","Routes","exact","SignupContainer","LoginContainer","store","createStore","applyMiddleware","thunkMiddleware","App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,sC,sKCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uCCPSC,EATMC,aAAW,SAAAC,GAAK,MAAK,CACtCC,OAAQ,CACJC,UAAW,SACXC,QAASH,EAAMI,QAAQ,EAAG,GAC1BC,gBAC2B,SAAvBL,EAAMM,QAAQC,KAAkBP,EAAMM,QAAQE,KAAK,KAAOR,EAAMM,QAAQE,KAAK,UCAzF,SAASC,IACL,OACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAC7B,kBACD,kBAACC,EAAA,EAAD,CAAMD,MAAM,UAAUE,KAAK,4BAA3B,UAEE,KACD,IAAIC,MAAOC,cACX,KAOE,SAASC,IACpB,IAAMC,EAAUpB,IAEhB,OACI,4BAAQqB,UAAWD,EAAQjB,QACvB,kBAACmB,EAAA,EAAD,CAAWC,SAAS,MAChB,kBAACX,EAAA,EAAD,CAAYC,QAAQ,SAApB,mDACA,kBAACF,EAAD,Q,qCC1BVa,EAA2B,CAC7BC,MAAM,EACNC,QAAS,KACTC,SAAU,MAIC,SAASC,IAA+D,IAA3CC,EAA0C,uDAAlCL,EAA0BM,EAAQ,uCAElF,OAAQA,EAAOrB,MACX,ICXyB,oBDYzB,ICX0B,qBDYtB,OAAO,eACAoB,EADP,CAEIJ,KAAMK,EAAOL,KACbC,QAASI,EAAOJ,QAChBC,SAAUG,EAAOH,WAEzB,QACI,OAAOE,G,YEnBbE,EAAe,CACjBC,WAAY,EACZC,WAAY,EACZC,KAAM,KACNC,gBAAiB,CACbC,KAAM,CACFC,GAAI,KACJC,KAAM,IAEVb,MAAM,IAKC,SAASc,IAA4C,IAA/BV,EAA8B,uDAAtBE,EAAcD,EAAQ,uCAC/D,OAAQA,EAAOrB,MACX,ICjB6B,wBDkBzB,OAAO,eACAoB,EADP,CAEIG,WAAYF,EAAOE,WACnBQ,SAAUV,EAAOU,SACjBP,WAAYH,EAAOG,WACnBC,KAAMJ,EAAOI,OAErB,ICxB2B,sBDyBvB,OAAO,eACAL,EADP,CAEIY,SAAUX,EAAOW,WAEzB,IC3BwB,mBD4BpB,OAAO,eACAZ,EADP,CAEIM,gBAAiB,CAAEV,KAAMK,EAAOL,KAAMW,KAAMN,EAAOM,QAE3D,IC/ByB,oBDgCrB,OAAO,eACAP,EADP,CAEIM,gBAAgB,eAAMN,EAAMM,gBAAb,CAA8BV,KAAMK,EAAOL,SAElE,IClCgC,2BDmC5B,OAAO,eACAI,EADP,CAEIG,WAAYF,EAAOE,WACnBQ,SAAS,GAAD,mBAAMX,EAAMW,UAAZ,YAAyBV,EAAOU,WACxCP,WAAYH,EAAOG,WACnBC,KAAMJ,EAAOI,OAErB,ICzC8B,yBD0C1B,OAAO,eACAL,EADP,CAEIY,SAAUX,EAAOW,WAEzB,QACI,OAAOZ,GEtDZ,ICADE,EAAe,GAGN,SAASW,IAA+C,IAA/Bb,EAA8B,uDAAtBE,EAAcD,EAAQ,uCAClE,OAAOA,EAAOrB,MACV,IDLmB,cCMf,MAAM,CACF,CAAEkC,WAAYb,EAAOa,WAAYC,KAAMd,EAAOc,OADlD,mBAEOf,IAEX,IDTwB,mBCUpB,OAAO,YAAIC,EAAOe,aACtB,QACI,OAAOhB,GCfZ,ICEDE,EAAe,CACjBM,GAAI,KACJC,KAAM,KACNQ,WAAY,KACZC,gBAAiB,KACjBJ,WAAY,KACZK,WAAY,KACZC,iBAAiB,GAGN,SAASC,IAAiD,IAA/BrB,EAA8B,uDAAtBE,EAAcD,EAAQ,uCACpE,OAAOA,EAAOrB,MACV,IDdyB,oBCerB,OAAO,eACAoB,EADP,CAEIQ,GAAIP,EAAOM,KAAKC,GAChBC,KAAMR,EAAOM,KAAKE,KAClBQ,WAAYhB,EAAOM,KAAKU,WACxBC,gBAAiBjB,EAAOM,KAAKe,QAAQC,WAE7C,IDrBuB,kBCsBnB,OAAO,eAAIvB,EAAX,CAAkBc,WAAYb,EAAOa,aACzC,IDtBuB,kBCuBnB,OAAO,eAAId,EAAX,CAAkBmB,WAAYlB,EAAOkB,aACzC,IDvByB,oBCwBzB,IDvB0B,qBCwBtB,OAAO,eAAInB,EAAX,CAAkBoB,gBAAiBnB,EAAOmB,kBAC9C,QACI,OAAOpB,GCxBZ,SAASwB,IAAiC,IAArBxB,EAAoB,uDAAZ,GAAIC,EAAQ,uCAC5C,MAAO,CACHwB,OAAQ,CAAEC,OAAQ,IAClBC,aAAc5B,EAAoBC,EAAM2B,aAAc1B,GACtD2B,MAAOlB,EAAaV,EAAM4B,MAAO3B,GACjC4B,WAAYR,EAAkBrB,EAAM6B,WAAY5B,GAChD6B,SAAUjB,EAAgBb,EAAM8B,SAAU7B,I,8DCAnC8B,EATY3D,aAAW,SAAAC,GAAK,MAAK,CAC5C2D,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAW7D,EAAMI,QAAQ,SCqClB0D,EAtCM,SAAC,GAAoD,IAAlDvC,EAAiD,EAAjDA,KAAMwC,EAA2C,EAA3CA,kBAAmBvC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAElDP,EAAUwC,IAEVM,EAAc,SAACC,EAAOC,GACX,cAAXA,GAGJH,KAGEI,EAAU,GAcd,MAZuB,kBAAZ3C,IACP2C,EAAU3C,GAEV4C,MAAMC,QAAQ7C,KACd2C,EAAU3C,EAAQ8C,KAAI,SAACC,EAAMC,GAAP,OACpB,kBAAC,WAAD,CAAUC,IAAKD,GACX,mCAASD,GACT,kCAMR,yBAAKpD,UAAWD,EAAQyC,MACT,OAAZnC,GAAiC,OAAbC,EAAoB,KACvC,kBAACiD,EAAA,EAAD,CAAUnD,KAAMA,EAAMoD,iBAAkB,IAAOC,QAASZ,GACtD,kBAAC,IAAD,CAAUa,UAAW,EAAGlE,QAAQ,SAASc,SAAUA,EAAUmD,QAASZ,GACjEG,MCjCFW,EAAmB,SAACtD,GAAD,IAAUC,EAAV,uDAAqB,UAArB,MAAoC,CAChElB,KVF6B,oBUG7BgB,MAAM,EACNC,QAASA,EACTC,SAAUA,ICDRsD,E,iLAEQ,IAAD,EACkDC,KAAKC,MAApD1D,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,SAAUsC,EAD5B,EAC4BA,kBACjC,OAAO,kBAAC,EAAD,CAAcxC,KAAMA,EAAMwC,kBAAmBA,EAAmBvC,QAASA,EAASC,SAAUA,Q,GAJvEyD,aAoBrBC,eAXS,SAACxD,GAAD,MAAY,CAChCJ,KAAMI,EAAM2B,aAAa/B,KACzBC,QAASG,EAAM2B,aAAa9B,QAC5BC,SAAUE,EAAM2B,aAAa7B,aAIN,SAAC2D,GAAD,MAAe,CACtCrB,kBAAmB,kBAAMqB,EDZW,CACpC7E,KVT8B,qBUU9BgB,MAAM,EACNC,QAAS,KACTC,SAAU,WCWC0D,CAA6CJ,G,kRCvBrD,SAASM,KAMZ,QAJqBC,GAAyB,gBA4BlD,SAASC,GAAuBC,EAAUC,EAAYC,GAClD,IACMC,EAA2B,IAAZD,EAEfE,EAAQ,CACVC,MAAOJ,EACPK,QALQ,IAAI/E,MAKAgF,UAAYJ,GAG5BK,aAAaC,QAAQT,EAAUU,KAAKC,UAAUP,IAI3C,SAASN,GAAyBE,GACxC,IAAMY,EAAWJ,aAAaK,QAAQb,GAEtC,IAAKY,EACJ,OAAO,KAER,IAAMR,EAAQM,KAAKI,MAAMF,GAGzB,OAFY,IAAIrF,MAERgF,UAAYH,EAAME,QAGzBE,aAAaO,WAAWf,GACjB,MAGDI,EAAMC,M,YCACW,GAzDMzG,aAAW,SAAAC,GAAK,MAAK,CACtC2D,KAAM,CACF8C,QAAS,QAEbC,OAAO,gBACF1G,EAAM2G,YAAYC,GAAG,MAAQ,CAC1BhD,MATQ,IAURiD,WAAY,IAGpBC,OAAO,gBACF9G,EAAM2G,YAAYC,GAAG,MAAQ,CAC1BhD,MAAM,OACNmD,WAhBQ,MAmBhBC,WAAW,cACPC,YAAajH,EAAMI,QAAQ,IAC1BJ,EAAM2G,YAAYC,GAAG,MAAQ,CAC1BH,QAAS,SAGjBS,QAASlH,EAAMmH,OAAOD,QACtBE,YAAa,CACTxD,MA3BY,KA6BhByD,QAAS,CACLC,SAAU,EACVnH,QAASH,EAAMI,QAAQ,IAE3BmH,YAAa,CACTd,QAAS,OACTe,eAAgB,SAChBC,WAAY,UAEhBC,KAAM,CACFrE,OAAQ,IAEZsE,WAAY,CACRC,eAAgB,OAChBhH,MAAO,SAEXiH,WAAY,CACRpB,QAAS,QAEbqB,gBAAiB,CACbC,OAAQ,mBAEZC,WAAY,CACRJ,eAAgB,OAChBhH,MAAO,SAEXqH,WAAY,CACRC,KAAM,aCiGCC,oBAnIf,SAAgBlD,GAAQ,IAkBhBmD,EAjBIC,EAAyCpD,EAAzCoD,UAAWC,EAA8BrD,EAA9BqD,QAASxD,EAAqBG,EAArBH,iBACtB5D,EAAUsF,KACVxG,EAAQuI,eAHK,EAIiBC,IAAMC,UAAS,GAJhC,mBAIZC,EAJY,KAIAC,EAJA,KAMbC,EAAqB,WACvBD,GAAeD,IAGbG,EAAoB,WFJ1B7C,aAAaO,WAAW,gBEMpBzB,EAAiB,gCAAwB,QACzCwD,EAAQQ,KAAK,eASbV,EALW/C,KAKA,CACP,CAAE0D,MAAO,QAASC,KAAM,SAAUC,KAAM,kBAAC,IAAD,OACxC,CAAEF,MAAO,iBAAeE,KAAM,kBAAC,KAAD,QAGvB,CACP,CAAEF,MAAO,cAAeC,KAAM,eAAgBC,KAAM,kBAAC,IAAD,OACpD,CAAEF,MAAO,YAAaC,KAAM,aAAcC,KAAM,kBAAC,KAAD,QAKxD,IAAMvC,EACF,6BACI,yBAAKvF,UAAS,UAAKD,EAAQgG,QAAb,YAAwBhG,EAAQ2G,WAAhC,YAA8C3G,EAAQqG,cAChE,kBAAC,IAAD,CAAM2B,GAAG,IAAI/H,UAAWD,EAAQyG,YAC5B,kBAACjH,EAAA,EAAD,iBAGR,kBAACyI,EAAA,EAAD,MACA,kBAACC,GAAA,EAAD,KACKhB,EAAS9D,KAAI,WAAwBE,GAAW,IAAhCuE,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,KAC1B,MAAc,mBAAVF,EAEI,kBAACM,GAAA,EAAD,CAAUC,QAAST,EAAmBpE,IAAKD,EAAO+E,QAAM,GACpD,kBAACC,GAAA,EAAD,KAAeP,GACf,kBAACQ,GAAA,EAAD,CAAcC,QAASX,KAK3B,kBAAC,IAAD,CAAMG,GAAIF,EAAM7H,UAAWD,EAAQyG,WAAYlD,IAAKD,GAChD,kBAAC6E,GAAA,EAAD,CAAUE,QAAM,GACR,kBAACC,GAAA,EAAD,KAAeP,GACf,kBAACQ,GAAA,EAAD,CAAcC,QAASX,WAU3D,OACI,yBAAK5H,UAAWD,EAAQyC,MACpB,kBAACgG,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQzI,UAAWD,EAAQ4F,QACvB,kBAAC+C,GAAA,EAAD,CAASC,MAAO,CAAEzG,OAAQ4B,EAAM8E,eAC5B,kBAACC,EAAA,EAAD,CACIpJ,MAAM,UACNqJ,aAAW,cACXC,KAAK,QACLZ,QAASV,EACTzH,UAAWD,EAAQ8F,YAEnB,kBAAC,KAAD,OAEJ,kBAAC,IAAD,CAAMkC,GAAG,IAAI/H,UAAWD,EAAQ8G,YAC5B,kBAACtH,EAAA,EAAD,gBAEJ,kBAACyJ,EAAA,EAAD,CAAQC,QAAM,GACV,yBAAKN,MAAO,CAAExC,SAAU,KACxB,kBAAC8B,GAAA,EAAD,CAAMU,MAAO,CAAErD,QAAS,SACnB2B,EAAS9D,KAAI,WAAkBE,GAAW,IAA1BuE,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KACpB,MAAc,mBAAVD,EAEI,kBAACM,GAAA,EAAD,CAAU5E,IAAKD,EAAO8E,QAAST,EAAmBU,QAAM,GACpD,kBAACE,GAAA,EAAD,CAAcC,QAASX,KAK3B,kBAAC,IAAD,CAAMG,GAAIF,EAAM7H,UAAWD,EAAQ8G,WAAYvD,IAAKD,GAChD,kBAAC6E,GAAA,EAAD,CAAUE,QAAM,GACZ,kBAACE,GAAA,EAAD,CAAcC,QAASX,aAU3D,yBAAK5H,UAAWD,EAAQwF,OAAQuD,aAAW,mBAEvC,kBAACE,EAAA,EAAD,CAAQE,MAAI,EAACC,eAAe,OACxB,kBAACC,EAAA,EAAD,CACIlC,UAAWA,EACX1H,QAAQ,YACR6J,OAA4B,QAApBxK,EAAMyK,UAAsB,QAAU,OAC9ClJ,KAAMmH,EACN9D,QAASgE,EACT1H,QAAS,CACLwJ,MAAOxJ,EAAQkG,aAEnBuD,WAAY,CACRC,aAAa,IAGhBlE,SC7InBmE,G,iLAGE,OAAO,kBAAC,GAAD,CAAQ/F,iBAAkBE,KAAKC,MAAMH,iBAAkBiF,aAAc/E,KAAKC,MAAM8E,mB,GAHjE7E,aAefC,gBAPS,SAACxD,GAAD,MAAY,CAAEoI,aAAcpI,EAAMyB,OAAOC,WAGtC,SAAC+B,GAAD,MAAe,CACtCN,iBAAkB,SAACtD,EAASC,GAAV,OAAuB2D,EAASN,EAAiBtD,EAASC,QAGjE0D,CAA6C0F,I,wHC+C7CC,GAhEI/K,aAAW,SAACC,GAAD,MAAY,CACzC+K,KAAK,cACJtE,QAAS,OACTuE,UAAW,UAFR,UAGChL,EAAM2G,YAAYsE,KAAK,OAAU,CACpC5H,OAAQ,SAGV6H,MAAM,cACLC,gBAAgB,0DAAD,OAA4DC,KAA5D,MACfC,iBAAkB,YAClBhL,gBACwB,UAAvBL,EAAMM,QAAQC,KAAmBP,EAAMM,QAAQE,KAAK,IAAMR,EAAMM,QAAQE,KAAK,KAC9E8K,eAAgB,QAChBC,mBAAoB,UANhB,UAOAvL,EAAM2G,YAAYsE,KAAK,OAAU,CACpCO,WAAY,GACZC,cAAe,KAGjBf,MAAO,CACN3C,OAAQ/H,EAAMI,QAAQ,EAAG,GACzBqG,QAAS,OACTiF,cAAe,SACfjE,WAAY,UAEbkE,OAAQ,CACP5D,OAAQ/H,EAAMI,QAAQ,EAAG,GACzBC,gBAAiBL,EAAMM,QAAQoJ,QAAQkC,KACvCvI,OAAQ,GACRO,MAAO,IAERiI,KAAM,CACLjI,MAAO,OACPC,UAAW7D,EAAMI,QAAQ,IAE1B0L,OAAQ,CACP/D,OAAQ/H,EAAMI,QAAQ,EAAG,EAAG,IAE7B2L,YAAa,CACZ1I,OAAQ,GACRO,MAAO,IAERoI,SAAU,CACTvF,QAAS,OAAQgB,WAAY,SAAUD,eAAgB,UAExDyE,cAAe,CACdrI,MAAO,MACPhD,MAAO,QACPsL,WAAY,oBAEbC,gBAAiB,CAChBtI,UAAW,GACXuI,aAAc,IAEfC,GAAI,CACHtE,OAAQ,SACRmE,WAAY,oBAEbI,WAAY,CACXvE,OAAQ,cC5DGwE,GAAkB,SAACrK,GAAD,MAAW,CACtC3B,KZL6B,oBYM7B2B,KAAMA,ICmFV,IAAMsK,GAAOC,aAAW,CACvBC,iBAAkB,YAGjB,MAAO,CACNC,KAFI,EADLA,MAGe,KAIhBC,iBAAkBC,YAAaC,MAAM,CACpCH,KAAME,YACJE,IAAI,GAAI,mDACRC,SAAS,4BAGZC,aAAc,SAACC,EAAD,GAAwB,IAAbjI,EAAY,EAAZA,MAClB0H,EAAOO,EAAOP,KACZQ,EAAuClI,EAAvCkI,0BAA2B7E,EAAYrD,EAAZqD,QAEnC6E,EAA0BR,GACxBS,MAAK,SAAClL,GAAD,OAAUA,EAAOoG,EAAQQ,KAAK,CACnCuE,SAAS,UAAD,OAAYnL,EAAKC,IACzBR,MAAO,CACL2L,OAAQpL,EAAKC,MACV,UAxBIsK,EAtEb,SAAqBxH,GACpB,IAAM/D,EAAU4J,KAGfoC,EAOGjI,EAPHiI,OACAK,EAMGtI,EANHsI,QACAC,EAKGvI,EALHuI,OACAC,EAIGxI,EAJHwI,aACAC,EAGGzI,EAHHyI,WACAT,EAEGhI,EAFHgI,aACA7J,EACG6B,EADH7B,OAGD,OACC,kBAACuK,GAAA,EAAD,CAAMtF,WAAS,EAAClH,UAAWD,EAAQ6J,KAAM6C,UAAU,OAAO9D,MAAO,CAAE+D,UAAU,gBAAD,OAAkBzK,EAAOC,OAAzB,OAAsCQ,UAAWT,EAAOC,SACnI,kBAACsK,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAG9M,UAAS,UAAKD,EAAQgK,MAAb,YAAsBhK,EAAQ8K,WACxE,yBAAK7K,UAAWD,EAAQ+K,eACvB,kBAACvL,EAAA,EAAD,CAAYkN,UAAU,KAAKjN,QAAQ,MAAnC,+CACA,kBAACD,EAAA,EAAD,CAAYkN,UAAU,KAAKjN,QAAQ,KAAKQ,UAAWD,EAAQiL,iBAA3D,0GACA,kBAAC,IAAD,CAAMjD,GAAG,gBACR,kBAACgF,GAAA,EAAD,CAAQC,KAAK,QAAQhN,UAAWD,EAAQoL,WAAY3L,QAAQ,YAAYC,MAAM,UAAUwN,UAAW,kBAAC,IAAD,OAAnG,uBAED,0BAAMjN,UAAWD,EAAQmL,IAAzB,MACA,kBAAC,IAAD,CAAMnD,GAAG,cACR,kBAACgF,GAAA,EAAD,CAAQC,KAAK,QAAQhN,UAAWD,EAAQoL,WAAY3L,QAAQ,YAAYC,MAAM,UAAUwN,UAAW,kBAAC,KAAD,OAAnG,mBAIH,kBAACT,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGL,UAAWS,KAAOxJ,UAAW,EAAG1D,UAAWD,EAAQ8K,SAAUsC,QAAM,GACpG,yBAAKnN,UAAWD,EAAQwJ,OACvB,kBAAC6D,GAAA,EAAD,CAAQpN,UAAWD,EAAQyK,QAC1B,kBAAC,KAAD,CAAaxK,UAAWD,EAAQ6K,eAEjC,kBAACrL,EAAA,EAAD,CAAYkN,UAAU,KAAKjN,QAAQ,KAAK6N,cAAY,GAApD,qBACA,kBAAC9N,EAAA,EAAD,CAAYkN,UAAU,KAAKjN,QAAQ,MAAnC,0BACA,0BAAMQ,UAAWD,EAAQ2K,KAAM4C,SAAUxB,EAAcyB,YAAU,GAChE,kBAACC,GAAA,EAAD,CACChO,QAAQ,WACRoH,OAAO,SACPiF,UAAQ,EACR4B,WAAS,EACTzM,GAAG,OACH0M,MAAM,eACNzM,KAAK,OACL0M,aAAa,OACbC,WAAS,EACTlJ,MAAOqH,EAAOP,KACdqC,SAAUvB,EACVwB,OAAQvB,EACRwB,MAAO3B,EAAQZ,MAAQlN,QAAQ+N,EAAOb,MACtCwC,WAAY5B,EAAQZ,KAAOa,EAAOb,KAAO,KAE1C,kBAACuB,GAAA,EAAD,CACC3N,KAAK,SACLqO,WAAS,EACTjO,QAAQ,YACRC,MAAM,UACNO,UAAWD,EAAQ4K,OACnBsD,QAAS,kBAAC,KAAD,OANV,oBAoDSjK,gBANS,SAACxD,GAAD,MAAY,CAAEyB,OAAQzB,EAAMyB,WAEzB,SAACgC,GAAD,MAAe,CACzC+H,0BAA2B,SAACR,GAAD,OAAUvH,GDvFIiK,ECuF+B1C,EDrF9D,SAAOvH,GAAP,kBAAAkK,EAAAC,OAAA,4EAAAD,EAAA,MAEwBE,KAAMC,IAAN,0DAA6DJ,KAFrF,UAEOK,EAFP,OAGOxN,EAAOwN,EAASC,KAEtBC,QAAQC,IAAI3N,IAERA,EAPL,wBAQKkD,EAASmH,GAAgBrK,IAR9B,kBASYA,GATZ,eAWKkD,EAASN,EAAiB,iDAAD,OAA4CuK,EAA5C,KAAyD,UAXvF,mBAYY,GAZZ,iEAgBCO,QAAQC,IAAR,MAhBD,mBAiBQ,GAjBR,4DAF8B,IAACR,MC0F3BlK,CAA6CqH,I,QChH7CsD,GANa,SAAC,GAAD,IAAc5K,EAAd,EAAG0I,UAAyBmC,EAA5B,qCACxB,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAAA/K,GAAK,OAC1BI,KAAa,kBAACH,EAAcD,GAAY,kBAAC,IAAD,CAAUiE,GAAI,CAAEmE,SAAU,aAAc1L,MAAO,CAAEsO,KAAMhL,EAAMtF,kBCU9FuQ,I,OAZM,kBACjB,yBAAK/N,GAAG,YACV,yBAAKhB,UAAU,YACd,yBAAKA,UAAU,iBACf,mCACA,yEACS,6JACT,kBAAC,IAAD,CAAM+H,GAAG,KAAT,qC,+BCaYiH,GArBF,I,QAAIC,GAAiB,CAC9BC,GAAI,CACAnN,SAAU,WACVoN,SAAU,WACVC,gBAAiB,mBACjBnO,KAAM,OACNoO,cAAe,gBACfC,YAAa,cACbjP,QAAS,WAEbkP,GAAI,CACAxN,SAAU,cACVoN,SAAU,eACVC,gBAAiB,+BACjBnO,KAAM,MACNoO,cAAe,mBACfC,YAAa,cACbjP,QAAS,aCaFmP,GA/BK5Q,aAAW,SAAAC,GAAK,MAAK,CACrC2L,OAAQ,CACJ9H,UAAW7D,EAAMI,QAAQ,GACzBgM,aAAcpM,EAAMI,QAAQ,GAC5B2G,WAAY,OACZE,YAAa,OACb5G,gBAAiBL,EAAMM,QAAQsQ,UAAUhF,MAE7CC,KAAM,CACFjI,MAAO,QAEXkI,OAAQ,CACJ/D,OAAQ/H,EAAMI,QAAQ,EAAG,EAAG,IAEhCyQ,KAAM,CACFjN,MAAO,OACPkN,aAAc,IAElBC,YAAa,CACTnN,MAAO,MACPmE,OAAQ,UAEZgB,MAAO,CACHqD,aAAcpM,EAAMI,QAAQ,IAEhCsK,MAAO,CACH9G,MAAO,OACPzD,QAAS,YC2DjB,IAAM6Q,GAAQvE,aAAW,CACrBC,iBAAkB,YAId,MAAO,CACHxJ,SAFF,EAFFA,UAI0B,GACtBoN,SAHF,EADFA,UAI0B,KAI9B1D,iBAAkBC,YAAaC,MAAM,CACjC5J,SAAU2J,YACLG,SAAS,4BACdsD,SAAUzD,YACLoE,QAAQ,gFAAiF,2GACzFjE,SAAS,+BAGlBC,aAAc,SAACC,EAAD,GAAmC,IAAxBjI,EAAuB,EAAvBA,MAAOiM,EAAgB,EAAhBA,UACpB5I,EAA8BrD,EAA9BqD,QAASxD,EAAqBG,EAArBH,iBAEX5B,EAAWgK,EAAOhK,SAClBoN,EAAWpD,EAAOoD,UXnGzB,SAAqBpN,EAAUoN,GAA/B,oBAAAhB,EAAAC,OAAA,sDACkB4B,qBACCA,WAFnB,qBAAA7B,EAAA,MAK4BE,KAAM4B,KAAN,uDAHTD,WAGS,qBAAiFjO,EAAjF,qBAAsGoN,EAAtG,sBAJVa,wBADlB,cAKWzB,EALX,OAMW2B,EAAc3B,EAASC,KAAK2B,aAC5B5L,EAAYgK,EAASC,KAAK4B,WAChChM,GAAuB,eAAgB8L,EAAa3L,GARzD,mBASY,GATZ,4DAWY,GAXZ,0DWqGC8L,CAAMtO,EAAUoN,GAAUlD,MAAK,SAAAqE,GACvBA,GACAP,IACApM,EAAiB,aAAD,OAAc5B,EAAd,8BAA8C,WAC9DoF,EAAQQ,KAAK,WAEbhE,EAAiB,sCAAuC,cA/B1D2H,EAzEd,SAAmBxH,GAEf,IAAM/D,EAAUyP,KAGZzD,EAMAjI,EANAiI,OACAK,EAKAtI,EALAsI,QACAC,EAIAvI,EAJAuI,OACAC,EAGAxI,EAHAwI,aACAC,EAEAzI,EAFAyI,WACAT,EACAhI,EADAgI,aAGJ,OACI,kBAACoB,GAAA,EAAD,CAAOlN,UAAWD,EAAQwJ,MAAO7F,UAAW,GACxC,kBAAC0J,GAAA,EAAD,CAAQpN,UAAWD,EAAQyK,QACvB,kBAAC,KAAD,OAEJ,kBAACjL,EAAA,EAAD,CAAYkN,UAAU,KAAKjN,QAAQ,KAAKQ,UAAWD,EAAQ6H,OAA3D,gBAGA,0BAAM0F,SAAUxB,EAAc9L,UAAWD,EAAQ2K,KAAM6C,YAAU,GAC7D,kBAACC,GAAA,EAAD,CACIhO,QAAQ,WACRoH,OAAO,SACPiF,UAAQ,EACR4B,WAAS,EACTzM,GAAG,WACH0M,MAAOA,GAAM3L,SACbd,KAAK,WACL0M,aAAa,WACbC,WAAS,EACTlJ,MAAOqH,EAAOhK,SACd8L,SAAUvB,EACVwB,OAAQvB,EACRyB,WAAY5B,EAAQrK,SAAWsK,EAAOtK,SAAW,GACjDgM,MAAO3B,EAAQrK,UAAYzD,QAAQ+N,EAAOtK,YAE9C,kBAACyL,GAAA,EAAD,CACIhO,QAAQ,WACRoH,OAAO,SACPiF,UAAQ,EACR4B,WAAS,EACTxM,KAAK,WACLyM,MAAOA,GAAMyB,SACb/P,KAAK,WACL4B,GAAG,WACH2M,aAAa,mBACbjJ,MAAOqH,EAAOoD,SACdtB,SAAUvB,EACVwB,OAAQvB,EACRyB,WAAY5B,EAAQ+C,SAAW9C,EAAO8C,SAAW,GACjDpB,MAAO3B,EAAQ+C,UAAY7Q,QAAQ+N,EAAO8C,YAE9C,kBAACpC,GAAA,EAAD,CACI3N,KAAK,SACLqO,WAAS,EACTjO,QAAQ,YACRC,MAAM,UACNO,UAAWD,EAAQ4K,OACnBqC,KAAK,SANT,cAWJ,kBAAC,IAAD,CAAYjF,GAAI,gBACZ,kBAACrI,EAAA,EAAD,CAAM+M,UAAU,OAAOjN,QAAQ,SAA/B,uCA4CDwH,eAAW6I,IC1GXU,GAjBa3R,aAAW,SAAAC,GAAK,YAAK,CAC7C2R,eAAa,GACTlL,QAAS,OACTiF,cAAe,SACfjE,WAAY,SACZvH,UAAW,SACX0D,MAAO,OACP4D,eAAgB,UANP,yBAOLxH,EAAM2G,YAAYsE,KAAK,OAAU,CACjC4C,UAAW,qBARN,yBAUL7N,EAAM2G,YAAYsE,KAAK,MAVlB,iCAUyD,CAC9D5H,OAAQ,oBAXH,OCiBF8B,gBAFS,SAACxD,GAAD,MAAY,CAAEoI,aAAcpI,EAAMyB,OAAOC,UAElD8B,EAfO,SAAC,GAA0C,IAAxCyM,EAAuC,EAAvCA,SAAUvQ,EAA6B,EAA7BA,SAAU0I,EAAmB,EAAnBA,aACnC7I,EAAUwQ,KAEhB,OACI,kBAAC,WAAD,KACI,yBAAK5H,MAAO,CAAEzG,OAAQ0G,KACtB,kBAAC3I,EAAA,EAAD,CAAWwM,UAAU,OAAOvM,SAAUA,EAAUF,UAAWD,EAAQyQ,cAAe7H,MAAO,CAAEzG,OAAO,gBAAD,OAAkB0G,EAAlB,SAC5F6H,OCQFzM,eAAQ,MAJI,SAACC,GAAD,MAAe,CACtCN,iBAAkB,SAACtD,EAASC,GAAV,OAAuB2D,EAASN,EAAiBtD,EAASC,QAGjE0D,EAdQ,SAAC,GAA0B,IAAxBL,EAAuB,EAAvBA,iBAEtB,OACI,kBAAC,GAAD,CAAezD,SAAS,MACpB,kBAAC,GAAD,CAAOyD,iBAAkBA,Q,gHC2EtB+M,GAxEE,SAAC,GAA0C,IAAxC3P,EAAuC,EAAvCA,KAAM4P,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WAAiB,EAC3BvJ,IAAMC,SAAS,MADY,mBAChDuJ,EADgD,KACxCC,EADwC,KAOjDjO,EAAc,WAChBiO,EAAU,OAuBd,OACI,kBAAC,WAAD,KACI,kBAAC5I,GAAA,EAAD,CAAUE,QAAM,GACZ,kBAAC,IAAD,CAAML,GAAI,CACNmE,SAAS,UAAD,OAAYnL,EAAKC,IACzBR,MAAO,CACL2L,OAAQpL,EAAKC,KAEnB2H,MAjBF,CACFrD,QAAS,UACTgB,WAAY,UACZ7G,MAAO,UACPgH,eAAgB,UAChBhE,MAAO,YAcC,kBAACsO,GAAA,EAAD,KACI,kBAAC3D,GAAA,EAAD,KACI,kBAAC,IAAD,QAGR,kBAAC9E,GAAA,EAAD,CAAcC,QAASxH,EAAKE,KAAMwO,UAAS,iBAAY1O,EAAKU,eAEhE,kBAACuP,GAAA,EAAD,KACI,kBAACnI,EAAA,EAAD,CAAYV,QA9CR,SAACrF,GACjBgO,EAAUhO,EAAMmO,iBA8CA,kBAACC,GAAA,EAAD,SAIZ,kBAAC,KAAD,CAAM9Q,KAAM9B,QAAQuS,GAASpN,QAASZ,EAAasO,SAAUN,EAAQpH,aAAW,GAC5E,kBAAC2H,GAAA,EAAD,CAAUjJ,QAAS,kBA5CP,SAACpH,GACrB4P,EAAe5P,GACf8B,IA0CiCwO,CAAgBtQ,KACrC,kBAACsH,GAAA,EAAD,CAAcS,aAAW,QACrB,kBAAC,KAAD,OAEJ,kBAACvJ,EAAA,EAAD,CAAYC,QAAQ,UAAU8R,QAAM,GAApC,cAEJ,kBAACF,GAAA,EAAD,CAAUjJ,QAAS,kBA7CNgE,EA6C4BpL,EAAKC,GA5CtD4P,EAAWzE,QACXtJ,IAFoB,IAACsJ,IA8CT,kBAAC9D,GAAA,EAAD,CAAcS,aAAW,UACrB,kBAAC,KAAD,OAEJ,kBAACvJ,EAAA,EAAD,CAAYC,QAAQ,UAAU8R,QAAM,GAApC,iBC9CLC,GA/BQ3S,aAAW,SAACC,GAAD,YAAY,CAC7C2S,UAAQ,GACP/O,MAAO,OACPvD,gBAAiBL,EAAMM,QAAQsS,WAAWlI,MAC1C3C,OAAQ,UAHD,yBAIH/H,EAAM2G,YAAYsE,KAAK,OAAU,CAC3B9K,QAAS,SALZ,yBAOHH,EAAM2G,YAAYC,GAAG,OAAU,CACzBzG,QAAS,KARZ,GAWR4I,MAAO,CACNlF,UAAW,GACXuI,aAAc,IAEfyG,OAAQ,CACP3S,UAAW,UAEZ4S,oBAAqB,CACpBrM,QAAS,OACTgB,WAAY,SACVD,eAAgB,UAEnBuL,WAAY,CACXtM,QAAS,cACTtG,QAAS,EACTiM,aAAc,QCwBDuG,GA5CE,SAAC1N,GACjB,IAAM/D,EAAUwR,KACRpQ,EAAoG2C,EAApG3C,SAAUyP,EAA0F9M,EAA1F8M,WAAYiB,EAA8E/N,EAA9E+N,YAAalB,EAAiE7M,EAAjE6M,eAAgBmB,EAAiDhO,EAAjDgO,eAAgBnR,EAAiCmD,EAAjCnD,WAAYC,EAAqBkD,EAArBlD,WAAYC,EAASiD,EAATjD,KAEnG,OACC,kBAAC,WAAD,KACC,kBAACtB,EAAA,EAAD,CAAYS,UAAWD,EAAQ6H,MAAOpI,QAAQ,KAAKiN,UAAU,KAAKsF,MAAM,UAAxE,aACE5Q,GAAgC,IAApBA,EAAS6Q,OACtB,kBAAC,WAAD,KACC,kBAAChJ,EAAA,EAAD,CAAQiJ,QAAM,GACb,kBAAC/E,GAAA,EAAD,CAAOxJ,UAAW,GACjB,kBAACuE,GAAA,EAAD,CAAMjI,UAAWD,EAAQyR,UACvBrQ,EAASgC,KAAI,SAACpC,EAAMmR,GAAP,OACb,kBAAC,GAAD,CAAU5O,IAAK4O,EAAGvB,eAAgBA,EAAgBC,WAAYA,EAAY7P,KAAMA,EAAM8Q,YAAaA,SAIpGjR,EAAa,EACb,yBAAKZ,UAAWD,EAAQ4R,qBACvB,kBAACQ,GAAA,EAAD,CAAYC,KAAMzR,EAAW,EAAG0R,MAAOzR,EAAYZ,UAAWD,EAAQ6R,WAAY/D,SAAU,SAAC9M,EAAM2D,GAAP,OAAiBmN,EAAYnN,EAAM,OAE7H,MAEN,kBAACsE,EAAA,EAAD,CAAQE,MAAI,GACX,kBAAC,KAAD,CACCoJ,WAAYnR,EAAS6Q,OACrBO,KAAO1R,EAA8C4N,QAAQC,IAAI,wBAAnD,kBAAMoD,EAAenR,EAAa,IAChD6R,SAAS,GAET,kBAACtF,GAAA,EAAD,CAAOxJ,UAAW,GAClB,kBAACuE,GAAA,EAAD,CAAMjI,UAAWD,EAAQyR,UACvBrQ,EAASgC,KAAI,SAACpC,EAAMmR,GAAP,OACb,kBAAC,GAAD,CAAU5O,IAAK4O,EAAGvB,eAAgBA,EAAgBC,WAAYA,EAAY7P,KAAMA,EAAM8Q,YAAaA,YAzBnE,yBAAK7R,UAAWD,EAAQ2R,QAAQ,8DAAsC,2F,iFCMhGe,GAnBO7T,aAAW,SAAAC,GAAK,MAAK,CACvC6T,cAAe,CACXzH,aAAcpM,EAAMI,QAAQ,IAEhC0T,WAAY,CACRlQ,MAAO,IACPwI,aAAcpM,EAAMI,QAAQ,IAEhC2T,IAAK,CACDC,SAAU,QACVC,OAAQjU,EAAMI,QAAQ,GACtB8T,MAAOlU,EAAMI,QAAQ,GACrB+T,cAAe,QAEnBC,aAAc,CACVnN,YAAajH,EAAMI,QAAQ,QC8FpBiU,GA5BC5H,aAAW,CACvBC,iBAAkB,kBAEX,CACHtK,KAHc,EACdA,MAEc,KAGlBwK,iBAAkBC,YAAaC,MAAM,CACjC1K,KAAMyK,YACGE,IAAI,IAAK,2DACTC,SAAS,yCAEtBC,aAAc,SAACC,EAAD,GAAkD,IAAvCjI,EAAsC,EAAtCA,MAAOiM,EAA+B,EAA/BA,UAAWoD,EAAoB,EAApBA,cACjCpS,EAAI,eAAOgL,GACTqH,EAA4BtP,EAA5BsP,WAAYvB,EAAgB/N,EAAhB+N,YAEpBuB,EAAWrS,GAAMkL,MAAK,SAAAoH,GACdA,GACAtD,IACAoD,GAAc,GACdtB,EAAY,IAEZsB,GAAc,QAtBd7H,EArEI,SAACxH,GAAW,IAGxBiI,EAQAjI,EARAiI,OACAK,EAOAtI,EAPAsI,QACAC,EAMAvI,EANAuI,OACAC,EAKAxI,EALAwI,aACAC,EAIAzI,EAJAyI,WACAT,EAGAhI,EAHAgI,aACAwH,EAEAxP,EAFAwP,aACAH,EACArP,EADAqP,cAGEpT,EAAU0S,KAbW,EAcHpL,IAAMC,UAAS,GAdZ,mBAcpBlH,EAdoB,KAcdmT,EAdc,KAqBrB1Q,EAAc,WAChB0Q,GAAQ,IAGZ,OACI,6BACA,kBAACC,GAAA,EAAD,CAAKrL,QAXe,WACpBgL,GAAc,GACdI,GAAQ,IASuBvT,UAAWD,EAAQ6S,IAAKnT,MAAM,UAAUqJ,aAAW,MAAMtJ,QAAQ,YAC5F,kBAAC,KAAD,CAASQ,UAAWD,EAAQkT,eADhC,oBAIA,kBAACQ,GAAA,EAAD,CAAQrT,MAAMkT,GAAuBlT,EAAMqD,QAASZ,EAAa6Q,kBAAgB,oBAAoBC,sBAAoB,GACrH,0BAAMrG,SAAUxB,GACZ,kBAAC8H,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,4BACA,kBAAC6S,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,8EAGA,kBAACtG,GAAA,EAAD,CACII,WAAS,EACThH,OAAO,QACP5F,GAAG,OACH0M,MAAM,cACNtO,KAAK,OACLqO,WAAS,EACTzN,UAAWD,EAAQ2S,cACnBhO,MAAOqH,EAAO9K,KACd4M,SAAUvB,EACVwB,OAAQvB,EACRyB,WAAY5B,EAAQnL,KAAOoL,EAAOpL,KAAO,GACzC8M,MAAO3B,EAAQnL,MAAQ3C,QAAQ+N,EAAOpL,MACtCzB,QAAQ,cAGhB,kBAACuU,GAAA,EAAD,KACA,kBAAChH,GAAA,EAAD,CAAQtN,MAAM,UAAU0I,QAAStF,EAAarD,QAAQ,YAAtD,WAGA,kBAACuN,GAAA,EAAD,CAAQ3N,KAAK,SAASK,MAAM,UAAUD,QAAQ,aAA9C,mBC5DDwU,GAXQ,CACnBC,SAAS,2BACTC,QAAQ,sBACRC,eAAe,oDACfC,OAAO,6BACPC,gBAAgB,uCAChBC,KAAK,iCACLC,UAAU,8DACVC,gBAAiB,6HCMNC,GAZO,SAACjJ,EAAMkJ,GAUzB,OANkB,OAAdA,EACQ,UAAMV,GAAexI,IAErB,iBAAawD,GAAO0F,GAApB,eAAqCV,GAAexI,KCarDmJ,GArBU,SAACC,EAAQpG,GAC9B,IAAMlM,EAAW,GAiBjB,OAfe,MAAXsS,EACApG,EAAKqG,SAAQ,SAAAC,GACT,IAAMC,EAAMN,GAAcK,EAAYtJ,KAAMsJ,EAAYJ,WACxDpS,EAASqF,KAAKoN,MAEA,MAAXH,EACPtS,EAASqF,KAAK,gFACI,MAAXiN,EACPtS,EAASqF,KAAK,yDACI,MAAXiN,EACPtS,EAASqF,KAAK,6BAEdrF,EAASqF,KAAK,2BAGXrF,GC2CJ,SAAS0S,GAAmBrU,EAAYQ,EAAUP,GACrD,MAAO,CACHxB,KjChE6B,wBiCiE7B+B,SAAUA,EACVR,WAAYA,EACZC,WAAYA,GAWb,SAASiR,GAAYlR,GAExB,OADA8N,QAAQC,IAAI,yCAA2C/N,GAChD,SAAOsD,GAAP,wBAAAkK,EAAAC,OAAA,gEAEO8B,EAAc/L,GAAyB,gBACvC8Q,EAAS,CACXC,QAAS,CACL,cAAgB,UAAhB,OAA2BhF,KAGlB,EARlB,YAAA/B,EAAA,MASwBE,KAAMC,IAAN,+CAAkD3N,EAAlD,iBADN,GACuFsU,IATzG,OASO1G,EATP,OAUOpN,EAAWoN,EAASC,KAAKtI,QACzBtF,EAAa2N,EAASC,KAAK5N,WACpB2N,EAASC,KAAK3N,KAC3BoD,EAAS+Q,GAAmBrU,EAAYQ,EAAUP,IAbnD,kDAeCqD,EAvBD,CACH7E,KjCxE2B,sBiCyE3BgC,SAAU,4BAMP,0DAiEJ,SAAS+T,GAAsBxU,EAAYQ,EAAUP,EAAYC,GACpE,MAAO,CACHzB,KjC7IgC,2BiC8IhC+B,SAAUA,EACVR,WAAYA,EACZC,WAAYA,EACZC,KAAMA,GCtJd,IAmBeuU,GAnBUxW,aAAW,SAAAC,GAAK,MAAK,CAC1C6T,cAAe,CACXzH,aAAcpM,EAAMI,QAAQ,IAEhC0T,WAAY,CACRlQ,MAAO,IACPwI,aAAcpM,EAAMI,QAAQ,IAEhC2T,IAAK,CACDC,SAAU,QACVC,OAAQjU,EAAMI,QAAQ,GACtB8T,MAAOlU,EAAMI,QAAQ,GACrB+T,cAAe,QAEnBC,aAAc,CACVnN,YAAajH,EAAMI,QAAQ,QCqEpBoW,GAzBI/J,aAAW,CAE1BgK,oBAAoB,EAEpB/J,iBAAkB,SAACzH,GAAD,MAAY,CAC1B7C,KAAM6C,EAAMtD,MAAMO,KAAKE,MAAQ,KAGnCwK,iBAAkBC,YAAaC,MAAM,CACjC1K,KAAMyK,YACGE,IAAI,IAAK,2DACTC,SAAS,yCAEtBC,aAAc,SAACC,EAAD,GAAwB,IAAbjI,EAAY,EAAZA,MACbyR,EAAsBzR,EAAtByR,WAAY/U,EAAUsD,EAAVtD,MAOpB+U,EALU,eACHxJ,EADG,CAEN/K,GAAIR,EAAMO,KAAKC,QAlBRsK,EAlDI,SAACxH,GAEpB,IAAM/D,EAAUqV,KAGZrJ,EAQAjI,EARAiI,OACAK,EAOAtI,EAPAsI,QACAC,EAMAvI,EANAuI,OACAC,EAKAxI,EALAwI,aACAC,EAIAzI,EAJAyI,WACAT,EAGAhI,EAHAgI,aACAtL,EAEAsD,EAFAtD,MACAqC,EACAiB,EADAjB,YAGJ,OACI,kBAAC4Q,GAAA,EAAD,CAAQrT,KAAMI,EAAMJ,KAAMqD,QAASZ,EAAa6Q,kBAAgB,oBAAoBC,sBAAoB,GACpG,0BAAMrG,SAAUxB,GACZ,kBAAC8H,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,qBACA,kBAAC6S,GAAA,EAAD,KACI,kBAACrG,GAAA,EAAD,CACII,WAAS,EACThH,OAAO,QACP5F,GAAG,OACH0M,MAAM,cACNtO,KAAK,OACLqO,WAAS,EACTzN,UAAWD,EAAQ2S,cACnBhO,MAAOqH,EAAO9K,KACd4M,SAAUvB,EACVwB,OAAQvB,EACRyB,WAAY5B,EAAQnL,KAAOoL,EAAOpL,KAAO,GACzC8M,MAAO3B,EAAQnL,MAAQ3C,QAAQ+N,EAAOpL,MACtCzB,QAAQ,cAGhB,kBAACuU,GAAA,EAAD,KACA,kBAAChH,GAAA,EAAD,CAAQtN,MAAM,UAAU0I,QAAStF,EAAarD,QAAQ,YAAtD,WAGA,kBAACuN,GAAA,EAAD,CAAQ3N,KAAK,SAASK,MAAM,UAAUD,QAAQ,aAA9C,mBC1CVgW,G,4LAGE3R,KAAKC,MAAM+N,YAAY,K,+BAGjB,IAAD,EAC4HhO,KAAKC,MAA9H2R,EADH,EACGA,UAAWrC,EADd,EACcA,WAAYxC,EAD1B,EAC0BA,WAAYiB,EADtC,EACsCA,YAAalB,EADnD,EACmDA,eAAgB+E,EADnE,EACmEA,gBAAiBH,EADpF,EACoFA,WAAYzD,EADhG,EACgGA,eAAgB3K,EADhH,EACgHA,QAC7GhG,EAA4DsU,EAA5DtU,SAAUR,EAAkD8U,EAAlD9U,WAAYC,EAAsC6U,EAAtC7U,WAAYE,EAA0B2U,EAA1B3U,gBAAiBD,EAAS4U,EAAT5U,KAQ3D,OANeqD,MAGXiD,EAAQQ,KAAK,cAIb,kBAAC1H,EAAA,EAAD,CAAWwM,UAAU,OAAOvM,SAAS,KAAKyI,MAAO,CAAE+D,UAAU,sBAAwBhK,UAAW,MAC5F,kBAAC,GAAD,CAAU9B,WAAYA,EAAYO,SAAUA,EAAU0Q,YAAaA,EAAalR,WAAYA,EAAYiQ,WAAYA,EAAYD,eAAgBA,EAAgBmB,eAAgBA,EAAgBjR,KAAMA,IACtM,kBAAC,GAAD,CAASuS,WAAYA,EAAYvB,YAAaA,EAAalR,WAAYA,IACvE,kBAAC,GAAD,CAAYH,MAAOM,EAAiB+B,YAAa6S,EAAiBH,WAAYA,S,GApBjExR,aAwCdC,gBAbS,SAACxD,GAAD,MAAY,CAAEiV,UAAWjV,EAAM4B,MAAOuT,YAAanV,EAAMyB,WAGtD,SAACgC,GAAD,MAAe,CACtCmP,WAAY,SAACrS,GAAD,OAAUkD,EHjCnB,SAAoBlD,GAEvB,OAAO,SAAOkD,GAAP,wBAAAkK,EAAAC,OAAA,uDAGGwH,EAAW7Q,KAAKC,UAAUjE,GAH7B,SAOOmP,EAAc/L,GAAyB,gBAP9C,YAAAgK,EAAA,MASOE,KAAM4B,KACR,kCACA2F,EACA,CAAEV,QAAS,CAAE,eAAgB,mBAAoB,cAAgB,UAAhB,OAA2BhF,OAZjF,cAeCjM,EAASN,EAAiB,8BAAyB,YAEnDM,EAAS4N,GAAY,IAjBtB,mBAkBQ,GAlBR,yCAoBOgE,EAAa,KAAMtH,SAASqG,OAC5BpG,EAAO,KAAMD,SAASC,KAEtBsH,EAAgBnB,GAAiBkB,EAAYrH,GAEnDvK,EAASN,EAAiBmS,EAAe,UAzB1C,mBA0BQ,GA1BR,0DG+BwB1C,CAAWrS,KAC1CwU,WAAY,SAACxU,GAAD,OAAUkD,EH6EnB,SAAoBlD,GACvB,OAAO,SAAOkD,GAAP,wBAAAkK,EAAAC,OAAA,uDAEGwH,EAAW7Q,KAAKC,UAAUjE,GAF7B,SAKOmP,EAAc/L,GAAyB,gBAL9C,YAAAgK,EAAA,MAMOE,KAAM0H,IAAN,0CACiChV,EAAKC,IACxC4U,EACA,CAAEV,QAAS,CAAE,eAAgB,mBAAoB,cAAgB,UAAhB,OAA2BhF,OATjF,cAYCjM,EAASN,EAAiB,iCAA4B,YACtDM,EArBD,CACH7E,KjC3GyB,oBiC4GzBgB,MAAM,EACNW,KAAM,OAmBFkD,EAAS4N,GAAY,IAdtB,mBAeQ,GAfR,yCAiBOgE,EAAa,KAAMtH,SAASqG,OAC5BpG,EAAO,KAAMD,SAASC,KACtBsH,EAAgBnB,GAAiBkB,EAAYrH,GACnDvK,EAASN,EAAiBmS,EAAe,UApB1C,mBAqBQ,GArBR,0DG9EwBP,CAAWxU,KAC1C6P,WAAY,SAACzE,GAAD,OAAYlI,EHDrB,SAAoBkI,GAEvB,OADAsC,QAAQC,IAAIvC,GACL,SAAOlI,GAAP,kBAAAkK,EAAAC,OAAA,gEAEO8B,EAAc/L,GAAyB,gBACvC8Q,EAAS,CACXC,QAAS,CACL,cAAgB,UAAhB,OAA2BhF,KALpC,YAAA/B,EAAA,MAQOE,KAAM2H,OAAN,0CAAgD7J,GAAU8I,IARjE,cASChR,EAASN,EAAiB,kCAA6B,YACvDM,EAAS4N,GAAY,IAVtB,mBAWQ,GAXR,yCAaC5N,EAASN,EAAiB,wCAAmC,UAb9D,mBAcQ,GAdR,0DGD0BiN,CAAWzE,KAC5C0F,YAAa,SAAClR,GAAD,OAAgBsD,EAAS4N,GAAYlR,KAClDmR,eAAgB,SAACnR,GAAD,OAAgBsD,EHuH7B,SAAwBtD,GAC3B,OAAO,SAAOsD,GAAP,0BAAAkK,EAAAC,OAAA,gEAEO8B,EAAc/L,GAAyB,gBACvC8Q,EAAS,CACXC,QAAS,CACL,cAAgB,UAAhB,OAA2BhF,KAGlB,EARlB,YAAA/B,EAAA,MASwBE,KAAMC,IAAN,+CAAkD3N,EAAlD,iBADN,GACuFsU,IATzG,OASO1G,EATP,OAUOpN,EAAWoN,EAASC,KAAKtI,QACzBtF,EAAa2N,EAASC,KAAK5N,WAC3BC,EAAO0N,EAASC,KAAK3N,KAC3BoD,EAASkR,GAAsBxU,EAAYQ,EAAUP,EAAYC,IAblE,kDAeCoD,EAtBD,CACH7E,KjCtJ8B,yBiCuJ9BgC,SAAU,4BAKP,0DGxHkC0Q,CAAenR,KACxDgQ,eAAgB,SAAC5P,GAAD,OAAUkD,EHyDvB,SAAwBlD,GAC3B,MAAO,CACH3B,KjCpGwB,mBiCqGxBgB,MAAM,EACNW,KAAMA,GG7DyB4P,CAAe5P,KAClD2U,gBAAiB,kBAAMzR,EHiEhB,CACH7E,KjC3GyB,oBiC4GzBgB,MAAM,EACNW,KAAM,WGjECiD,CAA6CwR,IC/CtDS,GAAmBrX,aAAW,SAACC,GAAD,MAAY,CAC/CqX,SAAU,CACTtP,OAAQ/H,EAAMI,QAAQ,EAAG,IAE1BsK,MAAO,CACNvK,QAAS,QAkBIqD,GAdI,YAAqB,IAAlBA,EAAiB,EAAjBA,WACftC,EAAUkW,KAEhB,OACC,kBAAC/I,GAAA,EAAD,CAAOxJ,UAAW,GAAI1D,UAAWD,EAAQwJ,OACxC,yBAAKvJ,UAAWD,EAAQmW,UACvB,kBAAC3W,EAAA,EAAD,CAAYkN,UAAU,KAAKjN,QAAQ,MAAM6C,EAAWpB,KAAOoB,EAAWpB,KAAO,iBAC7E,kBAAC1B,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAAlC,kBAA+D4C,EAAWX,gBAAkBW,EAAWX,gBAAkB,iBACzH,kBAACnC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,iBAAlC,UAA0D4C,EAAWZ,WAAaY,EAAWZ,WAAa,oBCb/F,SAAS0U,GAAT,GAAwC,IAArB7U,EAAoB,EAApBA,WAAYC,EAAQ,EAARA,KAC7C,OACC,kBAAC2G,GAAA,EAAD,CAAUkO,gBAAc,GACvB,kBAACrF,GAAA,EAAD,KACC,kBAAC3D,GAAA,EAAD,KACE9L,EAAW+U,cAAc,KAG5B,kBAAC/N,GAAA,EAAD,CAAcC,QAASjH,EAAYmO,UAAWlO,KCbjD,IAYe+U,GAZW1X,aAAW,SAACC,GAAD,MAAY,CAChD0X,eAAgB,CACf3P,OAAQ/H,EAAMI,QAAQ,IAEvBuX,cAAe,CACd9T,UAAW7D,EAAMI,QAAQ,IAE1BwX,cAAe,CACd/T,UAAW7D,EAAMI,QAAQ,QCcZyX,GAnBK,SAAC,GAAkB,IAAhBpU,EAAe,EAAfA,SACbvC,EAAUuW,KAEhB,OACI,yBAAKtW,UAAWD,EAAQwW,gBAC7B,kBAAChX,EAAA,EAAD,CAAYC,QAAQ,KAAKQ,UAAWD,EAAQyW,eAA5C,YAC8B,IAApBlU,EAAS0P,OAAgB,kBAACzS,EAAA,EAAD,CAAYC,QAAQ,QAAQQ,UAAWD,EAAQ0W,eAA/C,iCACtB,kBAAC,WAAD,KACI,kBAACxO,GAAA,EAAD,KACK3F,EAASa,KAAI,SAAC9C,EAAS6R,GAAV,OACV,kBAACiE,GAAD,CAAS7S,IAAK4O,EAAG5Q,WAAYjB,EAAQiB,WAAYC,KAAMlB,EAAQkB,cCM5EoV,GAnBU/X,aAAW,SAAAC,GAAK,MAAK,CAC1C6T,cAAe,CACXzH,aAAcpM,EAAMI,QAAQ,IAEhC0T,WAAY,CACRlQ,MAAO,IACPwI,aAAcpM,EAAMI,QAAQ,IAEhC2T,IAAK,CACDC,SAAU,QACVC,OAAQjU,EAAMI,QAAQ,GACtB8T,MAAOlU,EAAMI,QAAQ,GACrB+T,cAAe,QAEnBC,aAAc,CACVnN,YAAajH,EAAMI,QAAQ,QCiE7B2X,GAAatL,aAAW,CAC1BC,iBAAkB,kBAEX,CACHhK,KAHc,EACdA,MAEc,KAGlBkK,iBAAkBC,YAAaC,MAAM,CACjCpK,KAAMmK,YACDE,IAAI,IAAK,uEACTC,SAAS,oDAElBC,aAAc,SAAC+K,EAAD,GAAuD,IAAvC/S,EAAsC,EAAtCA,MAAOiM,EAA+B,EAA/BA,UAAWoD,EAAoB,EAApBA,cAEpC2D,EAAiDhT,EAAjDgT,aAAc3K,EAAmCrI,EAAnCqI,OAAQ7K,EAA2BwC,EAA3BxC,WAAYK,EAAemC,EAAfnC,WAEpCtB,EAAU,CAAEkB,KAAMsV,EAAYtV,KAAM4K,OAAQA,EAAQ7K,WAAYA,EAAYK,WAAYA,GAE9FmV,EAAaC,YAAY,gBAAiBhS,KAAKC,UAAU3E,IAEzD0P,IAEAoD,GAAc,KAtBH7H,EAnEI,SAACxH,GAAW,IAG3BiI,EAQAjI,EARAiI,OACAK,EAOAtI,EAPAsI,QACAC,EAMAvI,EANAuI,OACAC,EAKAxI,EALAwI,aACAC,EAIAzI,EAJAyI,WACAT,EAGAhI,EAHAgI,aACAwH,EAEAxP,EAFAwP,aACAH,EACArP,EADAqP,cAGEpT,EAAU4W,KAbc,EAcNtP,IAAMC,UAAS,GAdT,mBAcvBlH,EAduB,KAcjBmT,EAdiB,KAqBxB1Q,EAAc,WAChB0Q,GAAQ,IAGZ,OACI,6BACA,kBAACC,GAAA,EAAD,CAAKrL,QAXe,WACpBgL,GAAc,GACdI,GAAQ,IASuBvT,UAAWD,EAAQ6S,IAAKnT,MAAM,UAAUqJ,aAAW,MAAMtJ,QAAQ,YAC5F,kBAAC,KAAD,CAASQ,UAAWD,EAAQkT,eADhC,mBAIA,kBAACQ,GAAA,EAAD,CAAQrT,MAAMkT,GAAuBlT,EAAMqD,QAASZ,EAAa6Q,kBAAgB,oBAAoBC,sBAAoB,GACrH,0BAAMrG,SAAUxB,GACZ,kBAAC8H,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,8BACA,kBAAC6S,GAAA,EAAD,KACI,kBAACrG,GAAA,EAAD,CACIxM,GAAG,OACH0M,MAAM,OACNtO,KAAK,OACLqO,WAAS,EACTzN,UAAWD,EAAQ2S,cACnBhO,MAAOqH,EAAOxK,KACdsM,SAAUvB,EACVwB,OAAQvB,EACRyB,WAAY5B,EAAQ7K,KAAO8K,EAAO9K,KAAO,GACzCwM,MAAO3B,EAAQ7K,MAAQjD,QAAQ+N,EAAO9K,MACtC/B,QAAQ,WACRwX,WAAS,EACTC,KAAM,EACNrQ,OAAO,WAGf,kBAACmN,GAAA,EAAD,KACA,kBAAChH,GAAA,EAAD,CAAQtN,MAAM,UAAU0I,QAAStF,EAAarD,QAAQ,YAAtD,WAGA,kBAACuN,GAAA,EAAD,CAAQ3N,KAAK,SAASK,MAAM,UAAUD,QAAQ,aAA9C,kBAqCDwH,eAAW4P,I,qBCjGbM,GAAmB,SAAC1V,GAAD,MAAkB,CAC9CpC,K1CT4B,mB0CU5BoC,YAAaA,IAIX2V,GAAiB,SAAC3V,GACpB,IAAM4V,EAAuB,GADO,uBAGpC,YAAsB5V,EAAtB,+CAAmC,CAAC,IAAzBnB,EAAwB,QACzBgX,EAAmB,CAAE9V,KAAMlB,EAAQkB,KAAMD,WAAY,MACpC,MAAnBjB,EAAQyB,UACRuV,EAAiB/V,WAAajB,EAAQyB,QAAQC,UAE7B,MAAjB1B,EAAQiX,QACRD,EAAiB/V,WAAajB,EAAQiX,MAAMC,QAEhDH,EAAqBzP,KAAK0P,IAXM,kFAcpC,OAAOD,GCpBLI,G,YAEF,aAAe,IAAD,8BACV,+CACKV,aAAeW,sBAFV,E,iFAOVhJ,QAAQC,IAAI,uBACZ7K,KAAKC,MAAM4T,eAAe7T,KAAKC,MAAM/C,KAAKC,M,yCAG3B2W,GACXA,EAAU5W,KAAKC,KAAO6C,KAAKC,MAAM/C,KAAKC,KACtCyN,QAAQC,IAAI,wBACZ7K,KAAKC,MAAM4T,eAAe7T,KAAKC,MAAM/C,KAAKC,O,oCAIpCuN,EAAUqJ,GAAQ,IACpBC,EAAsCtJ,EAAtCsJ,KAAMhC,EAAgCtH,EAAhCsH,WAAYiC,EAAoBvJ,EAApBuJ,gBAa1B,GAXArJ,QAAQC,IAAImJ,GAGO,OAAfhC,GAAgC,OAATgC,GACvBhU,KAAKC,MAAMiU,WAAWF,EAAKvW,WAAYuW,EAAKtW,MAGlC,wBAAVqW,GACA/T,KAAKC,MAAMH,iBAAiB,oBAAkB,WAGrC,uBAAViU,EAAgC,CAC/BnJ,QAAQC,IAAIH,GACZ,IAAMyJ,EAAYrD,GAAiBmD,EAAiBD,GACpDhU,KAAKC,MAAMH,iBAAiBqU,EAAW,Y,+BAIrC,IAAD,OACL,OACI,kBAAC,WAAD,KACI,kBAAC,GAAD,CAAa1V,SAAUuB,KAAKC,MAAMxB,WAClC,kBAAC,GAAD,CAAY6J,OAAQtI,KAAKC,MAAM/C,KAAKC,GAAIM,WAAYuC,KAAKC,MAAM/C,KAAKO,WAAYK,WAAYkC,KAAKC,MAAM/C,KAAKY,WAAYmV,aAAcjT,KAAKiT,aAAamB,UACxJ,kBAAC,KAAD,CACIC,IAAI,wCACJC,OAAQ,CAAC,cAAe,qBAAsB,uBAC9CC,UAAW,WACP3J,QAAQC,IAAI,cAEhB2J,aAAc,WACV5J,QAAQC,IAAI,iBAEhB4J,UAAW,SAAC/J,EAAUqJ,GAAX,OAAqB,EAAKW,cAAchK,EAAUqJ,IAC7DY,IAAK3U,KAAKiT,oB,GAxDC/S,aA6EhBC,gBAbS,SAACxD,GAAD,MAAY,CAChC8B,SAAU9B,EAAM8B,SAChBvB,KAAMP,EAAM6B,eAKW,SAAC4B,GAAD,MAAe,CACtCyT,eAAgB,SAACvL,GAAD,OAAYlI,EDhDF,SAACkI,GAC3B,OAAO,SAAOlI,GAAP,oBAAAkK,EAAAC,OAAA,4EAAAD,EAAA,MAEwBE,KAAMC,IAAN,kDAAqDnC,KAF7E,OAEOoC,EAFP,OAGO/M,EAAc+M,EAASC,KAC7BC,QAAQC,IAAIlN,GACNiX,EAAmBtB,GAAe3V,GACxCiN,QAAQC,IAAI,oBACZD,QAAQC,IAAI+J,GACZxU,EAASiT,GAAiBuB,IAR3B,yDAUChK,QAAQC,IAAR,MAVD,mBAWQ,GAXR,0DC+C8BgJ,CAAevL,KACpD4L,WAAY,SAAChW,EAAU1B,GAAX,OAAuB4D,EDhFU,CAC7C7E,K1CHuB,c0CIvBkC,WC8EuDS,ED7EvDR,KC6EiElB,KACjEsD,iBAAkB,SAACrB,EAAUhC,GAAX,OAAwB2D,EAASN,EAAiBrB,EAAUhC,QAGnE0D,CAA6CgD,YAAWwQ,KC7BvE,IA+CekB,GA/CKpN,aAAW,CAC7BC,iBAAkB,YAGd,MAAO,CACHgM,OAFF,EADFA,QAGsB,KAI1B9L,iBAAkBC,YAAaC,MAAM,CACjC4L,OAAQ7L,YACHG,SAAS,sBAGlBC,aAAc,SAAOC,EAAP,qCAAAoC,EAAAC,OAAA,uDAAiBtK,EAAjB,EAAiBA,MAAOiM,EAAxB,EAAwBA,UAE1B5D,EAA+DrI,EAA/DqI,OAAQwM,EAAuD7U,EAAvD6U,UAAWC,EAA4C9U,EAA5C8U,UAAWC,EAAiC/U,EAAjC+U,cAAeC,EAAkBhV,EAAlBgV,cAC/CxB,EAHI,eAGQvL,EAHR,CAGgBI,OAAQA,IAC5B4M,EAAYhU,KAAKC,UAAUsS,GAEjC7I,QAAQC,IAAI4I,GANF,qBAAAnJ,EAAA,MAUFE,KAAM4B,KACV,mCACA8I,EACA,CAAE7D,QAAS,CAAE,eAAgB,uBAbvB,OAiBRnF,IAEA4I,EAAU,aAAD,OAAcrB,EAAMC,OAApB,8DAAwF,WAEjGqB,IAEAC,EAAcvB,EAAMC,QACpBuB,EAAc,SAxBN,kDA2BFE,EAAYrE,GAAiB,KAAEpG,SAASqG,OAAQ,KAAErG,SAASC,MACjEmK,EAAUK,EAAW,SA5Bb,2DAdI1N,EA9CpB,SAAyBxH,GAAQ,IAG7BiI,EAOEjI,EAPFiI,OACAK,EAMEtI,EANFsI,QACAC,EAKEvI,EALFuI,OACAC,EAIExI,EAJFwI,aACAC,EAGEzI,EAHFyI,WACAT,EAEEhI,EAFFgI,aACA1L,EACE0D,EADF1D,KAGF,OACE,6BACE,kBAACqT,GAAA,EAAD,CAAQrT,KAAMA,EAAMsT,kBAAgB,qBAClC,kBAACE,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,mBACA,kBAAC6S,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,qEAGA,kBAACtG,GAAA,EAAD,CACUxM,GAAG,SACH0M,MAAM,SACNtO,KAAK,OACLsF,MAAOqH,EAAOwL,OACd1J,SAAUvB,EACVwB,OAAQvB,EACRyB,WAAY5B,EAAQmL,OAASlL,EAAOkL,OAAS,GAC7CxJ,MAAO3B,EAAQmL,QAAUjZ,QAAQ+N,EAAOkL,QACxC/X,QAAQ,WACRoH,OAAO,SACP6G,WAAS,EACTG,WAAS,EACT/B,UAAQ,KAGpB,kBAACkI,GAAA,EAAD,KACE,kBAAChH,GAAA,EAAD,CAAQ5E,QAAS2D,EAAcrM,MAAM,WAArC,iBCxCJwZ,G,4LAEmB,IAAD,OAEV9M,EAAStI,KAAKC,MAAMtF,SAASgC,MAAM2L,OAEzCtI,KAAKC,MAAMoV,cAAc/M,GAGrBjI,MACAuK,QAAQC,IAAI,apC8CjB,+BAAAP,EAAAC,OAAA,gEAEO8B,EAAc/L,GAAyB,gBAF9C,YAAAgK,EAAA,MAGwBE,KAAMC,IACzB,iDACA,CAAE4G,QAAS,CAAE,eAAgB,mBAAoB,cAAgB,UAAhB,OAA2BhF,OALjF,cAGO3B,EAHP,OAOOxM,EAAWwM,EAASC,KAC1BC,QAAQC,IAAI3M,GARb,kBASQA,GATR,yCAWC0M,QAAQC,IAAR,MAXD,kBAYQ,KAAMH,UAZd,yDoC7CK4K,GAAclN,MAAK,SAAClK,GAChB0M,QAAQC,IAAI,cAAgB3M,GAC5BA,EAAW,EAAK+B,MAAM+U,cAAc9W,GAAY0M,QAAQC,IAAI,8BAC5D,EAAK5K,MAAMgV,cAAc,eAI7BjV,KAAKC,MAAMsV,oB,+BAKf,IAAMjN,EAAStI,KAAKC,MAAMpF,MAAM2a,OAAOlN,OAIvC,OAFAsC,QAAQC,IAAI7K,KAAKC,MAAMzB,YAGnB,kBAACpC,EAAA,EAAD,CAAWwM,UAAU,OAAOvM,SAAS,KAAKyI,MAAO,CAAE+D,UAAU,sBAAwBhK,UAAW,MAC5F,kBAAC,GAAD,CAAYL,WAAYwB,KAAKC,MAAMzB,aACnC,kBAAC,GAAD,CAAkB8J,OAAQA,IAC1B,kBAAC,GAAD,CAAa/L,KAAMyD,KAAKC,MAAMzB,WAAWT,gBAAiB+W,UAAW9U,KAAKC,MAAMH,iBAAkBwI,OAAQtI,KAAKC,MAAMzB,WAAWrB,GAAI4X,UAAW/U,KAAKC,MAAMwV,iBAAkBT,cAAehV,KAAKC,MAAM+U,cAAeC,cAAejV,KAAKC,MAAMgV,qB,GA/B7N/U,aAgDnBC,gBAXS,SAACxD,GAAD,MAAY,CAAE6B,WAAY7B,EAAM6B,eAE7B,SAAC4B,GAAD,MAAe,CACtCiV,cAAe,SAAC1N,GAAD,OAAUvH,G/BzCCkI,E+ByCsBX,E/BvCzC,SAAOvH,GAAP,kBAAAkK,EAAAC,OAAA,4EAAAD,EAAA,MAEwBE,KAAMC,IAAN,0CAA6CnC,KAFrE,UAEOoC,EAFP,OAGOxN,EAAOwN,EAASC,KAEtBC,QAAQC,IAAI3N,IAERA,EAPL,wBAQKkD,EAASmH,GAAgBrK,IAR9B,mBASY,GATZ,eAWKkD,EAASN,EAAiB,mCAAD,OAAiCwI,EAAjC,KAA4C,UAX1E,mBAYY,GAZZ,iEAgBCsC,QAAQC,IAAR,MAhBD,mBAiBQ,GAjBR,4DAFkB,IAACvC,G+B0C1BxI,iBAAkB,SAACrB,EAAUhC,GAAX,OAAwB2D,EAASN,EAAiBrB,EAAUhC,KAC9E8Y,gBAAiB,kBAAMnV,E/BeW,CAClC7E,KZjE6B,oBYkE7BwC,iBAAiB,K+BhBjB0X,iBAAkB,kBAAMrV,E/BmBW,CACnC7E,KZrE8B,qBYsE9BwC,iBAAiB,K+BpBjBiX,cAAe,SAACvX,GAAD,OAAgB2C,E/BGN,SAAC3C,GAAD,MAAiB,CAC1ClC,KZzD2B,kBY0D3BkC,WAAYA,G+BL4BuX,CAAcvX,KACtDwX,cAAe,SAACnX,GAAD,OAAgBsC,E/BON,SAACtC,GAAD,MAAiB,CAC1CvC,KZ7D2B,kBY8D3BuC,WAAYA,G+BT4BmX,CAAcnX,QAG3CqC,CAA6CiV,ICxB7CM,GA/BM3a,aAAW,SAAAC,GAAK,MAAK,CACtC2L,OAAQ,CACJ9H,UAAW7D,EAAMI,QAAQ,GACzBgM,aAAcpM,EAAMI,QAAQ,GAC5B2G,WAAY,OACZE,YAAa,OACb5G,gBAAiBL,EAAMM,QAAQsQ,UAAUhF,MAE7CC,KAAM,CACFjI,MAAO,QAEXkI,OAAQ,CACJ/D,OAAQ/H,EAAMI,QAAQ,EAAG,EAAG,IAEhCyQ,KAAM,CACFjN,MAAO,OACPkN,aAAc,IAElBC,YAAa,CACTnN,MAAO,MACPmE,OAAQ,UAEZgB,MAAO,CACHqD,aAAcpM,EAAMI,QAAQ,IAEhCsK,MAAO,CACH9G,MAAO,OACPzD,QAAS,QCoEXwa,GAASlO,aAAW,CACtBC,iBAAkB,YAKd,MAAO,CACHxJ,SAFF,EAHFA,UAK0B,GACtBoN,SAHF,EAFFA,UAK0B,GACtBC,gBAJF,EADFA,iBAKwC,KAI5C3D,iBAAkBC,YAAaC,MAAM,CACjC5J,SAAU2J,YACLG,SAAS,4BACdsD,SAAUzD,YACLoE,QAAQ,gFAAiF,2GACzFjE,SAAS,6BACduD,gBAAiB1D,YACZG,SAAS,gCACT4N,MAAM,CAAC/N,OAAQ,aAAc,uCAGtCI,aAAc,SAACC,EAAD,GAAmC,IAAxBjI,EAAuB,EAAvBA,MAAOiM,EAAgB,EAAhBA,UAEpB2J,EAA2B5V,EAA3B4V,cAAevS,EAAYrD,EAAZqD,QACjBrF,EAAU6X,OAAOC,OAAO,GAAI7N,UAC3BjK,EAAQsN,gBAEfsK,EAAc5X,GAASmK,MAAK,SAAA4N,GACpBA,IACA9J,IACA5I,EAAQQ,KAAK,oBAjCd2D,EAnFI,SAAAxH,GAAU,IAErBiI,EAMAjI,EANAiI,OACAK,EAKAtI,EALAsI,QACAC,EAIAvI,EAJAuI,OACAC,EAGAxI,EAHAwI,aACAC,EAEAzI,EAFAyI,WACAT,EACAhI,EADAgI,aAGE/L,EAAUwZ,KAEhB,OACI,kBAACrM,GAAA,EAAD,CAAOlN,UAAWD,EAAQwJ,MAAO7F,UAAW,GACxC,kBAAC0J,GAAA,EAAD,CAAQpN,UAAWD,EAAQyK,QACvB,kBAAC,KAAD,OAEJ,kBAACjL,EAAA,EAAD,CAAYS,UAAWD,EAAQ6H,MAAO6E,UAAU,KAAKjN,QAAQ,MAA7D,eAGA,0BAAMQ,UAAWD,EAAQ2K,KAAM4C,SAAUxB,EAAcyB,YAAU,GAC7D,kBAACC,GAAA,EAAD,CACIxM,GAAG,WACH0M,MAAOA,GAAM3L,SACb2C,MAAOqH,EAAOhK,SACd8L,SAAUvB,EACVwB,OAAQvB,EACRyB,WAAY5B,EAAQrK,SAAWsK,EAAOtK,SAAW,GACjDgM,MAAO3B,EAAQrK,UAAYzD,QAAQ+N,EAAOtK,UAC1CvC,QAAQ,WACRoH,OAAO,SACPgH,WAAS,EACTH,WAAS,EACT5B,UAAQ,IAEZ,kBAAC2B,GAAA,EAAD,CACIxM,GAAG,WACH0M,MAAOA,GAAMyB,SACb/P,KAAK,WACLsF,MAAOqH,EAAOoD,SACdtB,SAAUvB,EACVwB,OAAQvB,EACRyB,WAAY5B,EAAQ+C,SAAW9C,EAAO8C,SAAW,GACjDpB,MAAO3B,EAAQ+C,UAAY7Q,QAAQ+N,EAAO8C,UAC1C3P,QAAQ,WACRoH,OAAO,SACP6G,WAAS,EACT5B,UAAQ,IAEZ,kBAAC2B,GAAA,EAAD,CACIxM,GAAG,kBACH0M,MAAOA,GAAM0B,gBACbhQ,KAAK,WACLsF,MAAOqH,EAAOqD,gBACdvB,SAAUvB,EACVwB,OAAQvB,EACRyB,WAAY5B,EAAQgD,gBAAkB/C,EAAO+C,gBAAkB,GAC/DrB,MAAO3B,EAAQgD,iBAAmB9Q,QAAQ+N,EAAO+C,iBACjD5P,QAAQ,WACRoH,OAAO,SACP6G,WAAS,EACT5B,UAAQ,IAEZ,kBAACkB,GAAA,EAAD,CACI3N,KAAK,SACLqO,WAAS,EACTjO,QAAQ,YACRC,MAAM,UACNO,UAAWD,EAAQ4K,OACnBqC,KAAK,SANT,eAYJ,kBAAC,IAAD,CAAYjF,GAAI,cACZ,kBAACrI,EAAA,EAAD,CAAM+M,UAAU,OAAOjN,QAAQ,SAA/B,uDA+CDwH,eAAWwS,ICpI1B,ICDuCM,GDSxB9V,eAAQ,MAFI,SAACC,GAAD,MAAe,CAAEyV,cAAe,SAAC5X,GAAD,OAAamC,EEPjE,SAAuBnC,GAE1B,OAAO,SAAOmC,GAAP,sBAAAkK,EAAAC,OAAA,uDAEG2L,EAAchV,KAAKC,UAAUlD,GAFhC,qBAAAqM,EAAA,MAKOE,KAAM4B,KAAK,qCAAsC8J,EAAa,CAAE7E,QAAS,CAAE,eAAgB,uBALlG,cAMCjR,EAASN,EAAiB,gCAA2B,YANtD,mBAOQ,GAPR,uCAUOkS,EAAa,KAAMtH,SAASqG,OAC5BpG,EAAO,KAAMD,SAASC,KACtBsH,EAAgBnB,GAAiBkB,EAAYrH,GACnDvK,EAASN,EAAiBmS,EAAe,UAb1C,mBAcQ,GAdR,yDFKsE4D,CAAc5X,QAEhFkC,EARS,SAAC,GAAD,IAAG0V,EAAH,EAAGA,cAAH,OACpB,kBAAC,GAAD,CAAexZ,SAAS,MACpB,kBAAC,GAAD,CAAQwZ,cAAeA,QGkBhBM,GAdA,kBACX,kBAAC,IAAD,KACI,kBAAC,GAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACpS,KAAK,IAAI4E,UAAWpB,KACjC,kBAAC,IAAD,CAAO4O,OAAK,EAACpS,KAAK,eAAe4E,UAAWyN,KAC5C,kBAAC,IAAD,CAAOD,OAAK,EAACpS,KAAK,aAAa4E,UAAW0N,KAC1C,kBAAC,GAAD,CAAcF,OAAK,EAACpS,KAAK,SAAS4E,UAAW+I,KAC7C,kBAAC,IAAD,CAAOyE,OAAK,EAACpS,KAAK,eAAe4E,UAAWwM,KAC5C,kBAAC,IAAD,CAAOpR,KAAK,IAAI4E,UAAWsC,QCZjCqL,GHHKC,YACHrY,EACA8X,GACAQ,YAAgBC,MGYTC,GATH,kBACR,kBAAC,IAAD,CAAoBJ,MAAOA,IACvB,kBAAC5R,EAAA,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCVRiS,IAAS5L,OAAO,kBAAC,GAAD,MAAS6L,SAASC,eAAe,S5D4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7O,MAAK,SAAA8O,GACjCA,EAAaC,kB","file":"static/js/main.8788b62f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/audience.5840a469.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst footerStyles = makeStyles(theme => ({\r\n    footer: {\r\n        textAlign: \"center\",\r\n        padding: theme.spacing(3, 2),\r\n        backgroundColor:\r\n            theme.palette.type === 'dark' ? theme.palette.grey[800] : theme.palette.grey[200],\r\n    },\r\n}));\r\n\r\nexport default footerStyles;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Link from '@material-ui/core/Link';\r\nimport footerStyles from './footerStyles';\r\n\r\n// Copyright section\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                WeChat\r\n      </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\n\r\n// Footer component\r\nexport default function StickyFooter() {\r\n    const classes = footerStyles();\r\n\r\n    return (\r\n        <footer className={classes.footer}>\r\n            <Container maxWidth=\"sm\">\r\n                <Typography variant=\"body1\">Application réalisé par Michael De Madet.</Typography>\r\n                <Copyright />\r\n            </Container>\r\n        </footer>\r\n    );\r\n}","import { OPEN_NOTIFICATION, CLOSE_NOTIFICATION } from \"./notificationActionsTypes\";\r\n\r\n// Initial state for notification reducer\r\nconst notificationInitialState = {\r\n    open: false,\r\n    message: null,\r\n    severity: null\r\n}\r\n\r\n// Notification reducer\r\nexport default function notificationReducer(state = notificationInitialState, action) {\r\n    \r\n    switch (action.type) {\r\n        case OPEN_NOTIFICATION:\r\n        case CLOSE_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                open: action.open,\r\n                message: action.message,\r\n                severity: action.severity\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","// Name of notification actions\r\n\r\nexport const OPEN_NOTIFICATION = \"OPEN_NOTIFICATION\"\r\nexport const CLOSE_NOTIFICATION = \"CLOSE_NOTIFICATION\"","import { GET_CHAT_PAGE_SUCCESS, GET_CHAT_PAGE_ERROR, OPEN_UPDATE_CHAT, CLOSE_UPDATE_CHAT, FETCH_MORE_CHATS_SUCCESS, FETCH_MORE_CHATS_ERROR } from \"./chatActionsTypes\";\r\n\r\n// Initial state for chat reducer\r\nconst initialState = {\r\n    pageNumber: 0,\r\n    totalPages: 0,\r\n    last: null,\r\n    updateChatState: {\r\n        chat: {\r\n            id: null,\r\n            name: \"\"\r\n        },\r\n        open: false\r\n    }\r\n}\r\n\r\n// Chat reducer\r\nexport default function chatsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_CHAT_PAGE_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pageNumber: action.pageNumber,\r\n                chatPage: action.chatPage,\r\n                totalPages: action.totalPages,\r\n                last: action.last\r\n            }\r\n        case GET_CHAT_PAGE_ERROR:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg\r\n            }\r\n        case OPEN_UPDATE_CHAT:\r\n            return {\r\n                ...state,\r\n                updateChatState: { open: action.open, chat: action.chat }\r\n            }\r\n        case CLOSE_UPDATE_CHAT:\r\n            return {\r\n                ...state,\r\n                updateChatState: { ...state.updateChatState, open: action.open }\r\n            }\r\n        case FETCH_MORE_CHATS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pageNumber: action.pageNumber,\r\n                chatPage: [...state.chatPage, ...action.chatPage],\r\n                totalPages: action.totalPages,\r\n                last: action.last\r\n            }\r\n        case FETCH_MORE_CHATS_ERROR:\r\n            return {\r\n                ...state,\r\n                errorMsg: action.errorMsg\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","// Name of all chat actions\r\n\r\nexport const GET_CHAT_PAGE_SUCCESS = \"GET_CHAT_PAGE_SUCCESS\"\r\nexport const GET_CHAT_PAGE_ERROR = \"GET_CHAT_PAGE_ERROR\"\r\n\r\nexport const OPEN_UPDATE_CHAT = \"OPEN_UPDATE_CHAT\"\r\nexport const CLOSE_UPDATE_CHAT = \"CLOSE_UPDATE_CHAT\"\r\n\r\nexport const FETCH_MORE_CHATS_SUCCESS = \"FETCH_MORE_CHATS_SUCCESS\"\r\nexport const FETCH_MORE_CHATS_ERROR = \"FETCH_MORE_CHATS_ERROR\"","// Name of the message actions\r\n\r\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\r\nexport const GET_MESSAGE_LIST = \"GET_MESSAGE_LIST\";","import { ADD_MESSAGE, GET_MESSAGE_LIST } from \"./messageActionsTypes\";\r\n\r\nconst initialState = []\r\n\r\n// Messages reducer\r\nexport default function messagesReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case ADD_MESSAGE:\r\n            return [\r\n                { senderName: action.senderName, text: action.text },\r\n                ...state\r\n            ]\r\n        case GET_MESSAGE_LIST:\r\n            return [...action.messageList]\r\n        default:\r\n            return state;\r\n    }\r\n}","export const SINGLE_CHAT_FOUND = \"SINGLE_CHAT_FOUND\"\r\nexport const SET_SENDER_NAME = \"SET_SENDER_NAME\"\r\nexport const SET_SENDER_TYPE = \"SET_SENDER_TYPE\"\r\nexport const OPEN_CREATE_GUEST = \"OPEN_CREATE_GUEST\"\r\nexport const CLOSE_CREATE_GUEST = \"CLOSE_CREATE_GUEST\"","import { CLOSE_CREATE_GUEST, OPEN_CREATE_GUEST, SET_SENDER_NAME, SINGLE_CHAT_FOUND, SET_SENDER_TYPE } from \"./singleChatActionsTypes\";\r\n\r\nconst initialState = {\r\n    id: null,\r\n    name: null,\r\n    accessCode: null,\r\n    speakerUsername: null,\r\n    senderName: null,\r\n    senderType: null,\r\n    showCreateGuest: false\r\n}\r\n\r\nexport default function singleChatReducer(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SINGLE_CHAT_FOUND:\r\n            return {\r\n                ...state,\r\n                id: action.chat.id,\r\n                name: action.chat.name,\r\n                accessCode: action.chat.accessCode,\r\n                speakerUsername: action.chat.speaker.username\r\n            }\r\n        case SET_SENDER_NAME:\r\n            return {...state, senderName: action.senderName}\r\n        case SET_SENDER_TYPE:\r\n            return {...state, senderType: action.senderType}\r\n        case OPEN_CREATE_GUEST:\r\n        case CLOSE_CREATE_GUEST:\r\n            return {...state, showCreateGuest: action.showCreateGuest}\r\n        default:\r\n            return state;\r\n    }\r\n}","import notificationReducer from \"../Notification/notificationReducer\";\r\nimport chatsReducer from \"../Chat/redux/chatsReducer\";\r\nimport messagesReducer from \"../Message/messagesReducer\";\r\nimport singleChatReducer from \"../Chat/SingleChat/singleChatReducer\";\r\n\r\n// Root reducer\r\nexport function rootReducer(state = {}, action) {\r\n    return {\r\n        navbar: { height: 64 },\r\n        notification: notificationReducer(state.notification, action),\r\n        chats: chatsReducer(state.chats, action),\r\n        SingleChat: singleChatReducer(state.SingleChat, action),\r\n        messages: messagesReducer(state.messages, action)\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Styles for notification component\r\nconst notificationStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\nexport default notificationStyles;","import React, { Fragment } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport notificationStyles from './notificationStyles';\r\n\r\n// Notification component\r\nconst Notification = ({ open, closeNotification, message, severity }) => {\r\n  \r\n  const classes = notificationStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    closeNotification();\r\n  };\r\n\r\n  let msghtml = \"\"\r\n\r\n  if (typeof message === \"string\") {\r\n      msghtml = message\r\n  }\r\n  if (Array.isArray(message)) {\r\n      msghtml = message.map((line, index) => (\r\n        <Fragment key={index}>\r\n            <span>- {line}</span>\r\n            <br></br>\r\n        </Fragment>\r\n      ))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {message === null && severity === null ? null : (\r\n        <Snackbar open={open} autoHideDuration={20000} onClose={handleClose}>\r\n          <MuiAlert elevation={6} variant=\"filled\" severity={severity} onClose={handleClose}>\r\n              {msghtml}\r\n          </MuiAlert>\r\n        </Snackbar>\r\n      ) }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Notification;","import { CLOSE_NOTIFICATION, OPEN_NOTIFICATION } from \"./notificationActionsTypes\";\r\n\r\n// Open notification action\r\nexport const openNotification = (message, severity = \"default\") => ({\r\n    type: OPEN_NOTIFICATION,\r\n    open: true,\r\n    message: message,\r\n    severity: severity\r\n})\r\n\r\n// Close notification action\r\nexport const closeNotification = () => ({\r\n    type: CLOSE_NOTIFICATION,\r\n    open: false,\r\n    message: null,\r\n    severity: null\r\n})","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Notification from \"./Notification\";\r\nimport { closeNotification } from './notificationActions';\r\n\r\n// Notification container to connect to app state using react\r\nclass NotificationContainer extends Component {\r\n\r\n    render() {\r\n        const { open, message, severity, closeNotification } = this.props\r\n        return <Notification open={open} closeNotification={closeNotification} message={message} severity={severity} />\r\n    }\r\n}\r\n\r\n// Part of the app state to retrieve\r\nconst mapStateToProps = (state) => ({\r\n    open: state.notification.open,\r\n    message: state.notification.message,\r\n    severity: state.notification.severity\r\n});\r\n\r\n// Actions to retrieve\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    closeNotification: () => dispatch(closeNotification())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NotificationContainer)","import axios from 'axios';\r\n\r\n// Check access token in local storage to verify if the user is logged\r\nexport function isLogged() {\r\n    let logged = null;\r\n    const access_token = getTokenFromLocalStorage(\"access_token\");\r\n\r\n    access_token ? logged = true : logged = false;\r\n\r\n    return logged;\r\n}\r\n\r\n// Login function\r\nexport async function login(username, password) {\r\n        const clientId = process.env.REACT_APP_CLIENT_ID\r\n        const grantType = process.env.REACT_APP_GRANT_TYPE\r\n      \r\n        try {\r\n            const response = await axios.post(`http://localhost:8081/oauth/token?grant_type=${grantType}&username=${username}&password=${password}&client_id=${clientId}`)\r\n            const accessToken = response.data.access_token\r\n            const expiresIn = response.data.expires_in\r\n            setTokenInLocalStorage(\"access_token\", accessToken, expiresIn)\r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n}\r\n\r\n// Logout function\r\nexport function logout() {\r\n    localStorage.removeItem(\"access_token\");\r\n}\r\n\r\nfunction setTokenInLocalStorage(tokenKey, tokenValue, expiresIn) {\r\n    const now = new Date();\r\n    const expiresInMls = expiresIn * 1000;\r\n\r\n    const token = {\r\n        value: tokenValue,\r\n        expiry: now.getTime() + expiresInMls\r\n    }\r\n\r\n    localStorage.setItem(tokenKey, JSON.stringify(token))\r\n}\r\n\r\n// Retrieve token in local storage\r\nexport function getTokenFromLocalStorage(tokenKey) {\r\n\tconst tokenStr = localStorage.getItem(tokenKey)\r\n\t// if the item doesn't exist, return null\r\n\tif (!tokenStr) {\r\n\t\treturn null\r\n\t}\r\n\tconst token = JSON.parse(tokenStr)\r\n\tconst now = new Date()\r\n\t// compare the expiry time of the token with the current time\r\n\tif (now.getTime() > token.expiry) {\r\n\t\t// If the token is expired, delete the token from storage\r\n\t\t// and return null\r\n\t\tlocalStorage.removeItem(tokenKey)\r\n\t\treturn null\r\n    }\r\n\r\n\treturn token.value\r\n}\r\n\r\n// Get speaker username\r\nexport async function getUsername() {        \r\n    try {\r\n        const accessToken = getTokenFromLocalStorage(\"access_token\")\r\n        const response = await axios.get(\r\n            \"http://localhost:8081/api/speakers/getusername\",\r\n            { headers: { 'Content-Type': 'application/json', \"Authorization\": `Bearer ${accessToken}` } }\r\n        )\r\n        const username = response.data;\r\n        console.log(username);\r\n        return username;\r\n    } catch (error) {\r\n        console.log(error);\r\n        return error.response;\r\n    }\r\n}","import { makeStyles} from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 240;\r\n\r\n// Styles for navbar using material ui theme\r\nconst navbarStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex'\r\n    },\r\n    drawer: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: `100%`,\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    logoWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    logo: {\r\n        height: 40\r\n    },\r\n    drawerLink: {\r\n        textDecoration: \"none\",\r\n        color: \"black\"\r\n    },\r\n    drawerLogo: {\r\n        display: \"flex\",\r\n    },\r\n    drawerLogoTitle: {\r\n        margin: \"auto !important\",\r\n    },\r\n    navbarLink: {\r\n        textDecoration: \"none\",\r\n        color: \"white\"\r\n    },\r\n    iconsColor: {\r\n        fill: \"white\"\r\n    }\r\n}));\r\n\r\nexport default navbarStyles;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { isLogged, logout } from '../../Auth/authService';\r\nimport { Typography } from '@material-ui/core';\r\nimport navbarStyles from './navbarStyles';\r\n\r\n// Navbar component\r\nfunction Navbar(props) {\r\n    const { container, history, openNotification } = props;\r\n    const classes = navbarStyles();\r\n    const theme = useTheme();\r\n    const [mobileOpen, setMobileOpen] = React.useState(false);\r\n\r\n    const handleDrawerToggle = () => {\r\n        setMobileOpen(!mobileOpen);\r\n    };\r\n\r\n    const logoutAndRedirect = () => {\r\n        logout();\r\n        openNotification(\"Vous êtes déconnecté\", \"info\");\r\n        history.push(\"/connexion\");\r\n    }\r\n\r\n    // Check if user is logged\r\n    const logged = isLogged();\r\n    let navLinks;\r\n\r\n    // Display different buttons in navbar if user is logged or not\r\n    if (logged) {\r\n        navLinks = [\r\n            { title: 'chats', path: '/chats', icon: <MeetingRoomIcon /> },\r\n            { title: 'Déconnexion', icon: <ExitToAppIcon /> },\r\n        ]\r\n    } else {\r\n        navLinks = [\r\n            { title: 'Inscription', path: '/inscription', icon: <PersonAddIcon /> },\r\n            { title: 'Connexion', path: '/connexion', icon: <AccountCircleIcon /> },\r\n        ]\r\n    }\r\n\r\n    // Drawer for mobile menu\r\n    const drawer = (\r\n        <div>\r\n            <div className={`${classes.toolbar} ${classes.drawerLogo} ${classes.logoWrapper}`}>\r\n                <Link to=\"/\" className={classes.drawerLink}>\r\n                    <Typography>WeChat</Typography>\r\n                </Link>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                {navLinks.map(({ title, path, icon }, index) => {\r\n                    if (title === \"Déconnexion\") {\r\n                        return (\r\n                            <ListItem onClick={logoutAndRedirect} key={index} button>\r\n                                <ListItemIcon>{icon}</ListItemIcon>\r\n                                <ListItemText primary={title} />\r\n                            </ListItem>\r\n                        )\r\n                    } else {\r\n                        return(\r\n                            <Link to={path} className={classes.drawerLink} key={index}>\r\n                                <ListItem button>\r\n                                        <ListItemIcon>{icon}</ListItemIcon>\r\n                                        <ListItemText primary={title} />\r\n                                </ListItem>\r\n                            </Link>\r\n                        )\r\n                    }\r\n                })}\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar className={classes.appBar}>\r\n                <Toolbar style={{ height: props.navbarHeight }}>\r\n                    <IconButton\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                        edge=\"start\"\r\n                        onClick={handleDrawerToggle}\r\n                        className={classes.menuButton}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Link to=\"/\" className={classes.navbarLink}>\r\n                        <Typography>WeChat</Typography>\r\n                    </Link>\r\n                    <Hidden smDown>\r\n                        <div style={{ flexGrow: 1 }} />\r\n                        <List style={{ display: \"flex\" }}>\r\n                            {navLinks.map(({ title, path }, index) => {\r\n                                if (title === \"Déconnexion\") {\r\n                                    return (\r\n                                        <ListItem key={index} onClick={logoutAndRedirect} button>\r\n                                            <ListItemText primary={title} />\r\n                                        </ListItem>\r\n                                    )\r\n                                } else {\r\n                                    return (\r\n                                        <Link to={path} className={classes.navbarLink} key={index}>\r\n                                            <ListItem button>\r\n                                                <ListItemText primary={title} />\r\n                                            </ListItem>\r\n                                        </Link>\r\n                                    )\r\n                                }\r\n                            })}\r\n                        </List>\r\n                    </Hidden>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n                <Hidden smUp implementation=\"css\">\r\n                    <Drawer\r\n                        container={container}\r\n                        variant=\"temporary\"\r\n                        anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                        open={mobileOpen}\r\n                        onClose={handleDrawerToggle}\r\n                        classes={{\r\n                            paper: classes.drawerPaper,\r\n                        }}\r\n                        ModalProps={{\r\n                            keepMounted: true, // Better open performance on mobile.\r\n                        }}\r\n                    >\r\n                        {drawer}\r\n                    </Drawer>\r\n                </Hidden>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(Navbar);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Navbar from \"./Navbar\";\r\nimport { openNotification } from '../../Notification/notificationActions';\r\n\r\n// Navbar container component used to connect to application state using redux\r\nclass NavbarContainer extends Component {\r\n\r\n    render() {\r\n        return <Navbar openNotification={this.props.openNotification} navbarHeight={this.props.navbarHeight} />\r\n    }\r\n}\r\n\r\n// Part of the application state to retrive\r\nconst mapStateToProps = (state) => ({ navbarHeight: state.navbar.height })\r\n\r\n// Actions to retrieve\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    openNotification: (message, severity) => dispatch(openNotification(message, severity)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavbarContainer)","import { makeStyles } from '@material-ui/core/styles';\r\nimport BackgroundImg from '../global/assets/img/audience.png';\r\n\r\n// Style for Home component\r\nconst homeStyles = makeStyles((theme) => ({\r\n\tgrid: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignSelf: \"center\",\r\n\t\t[`${theme.breakpoints.down('sm')}`]: {\r\n\t\t\theight: 'auto',\r\n\t\t}\r\n\t},\r\n\timage: {\r\n\t\tbackgroundImage: `linear-gradient(rgba(0,0,0,0.3), rgba(0,0,0,0.3)), url(${BackgroundImg});`,\r\n\t\tbackgroundRepeat: 'no-repeat',\r\n\t\tbackgroundColor:\r\n\t\t\ttheme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n\t\tbackgroundSize: 'cover',\r\n\t\tbackgroundPosition: 'center',\r\n\t\t[`${theme.breakpoints.down('sm')}`]: {\r\n\t\t\tpaddingTop: 64,\r\n\t\t\tpaddingBottom: 64\r\n\t\t}\r\n\t},\r\n\tpaper: {\r\n\t\tmargin: theme.spacing(8, 4),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(3, 0),\r\n\t\tbackgroundColor: theme.palette.primary.main,\r\n\t\theight: 52,\r\n\t\twidth: 52\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%', // Fix IE 11 issue.\r\n\t\tmarginTop: theme.spacing(1),\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t},\r\n\tmeetingRoom: {\r\n\t\theight: 28,\r\n\t\twidth: 28\r\n\t},\r\n\tgridItem: {\r\n\t\tdisplay: \"flex\", alignItems: \"center\", justifyContent: \"center\"\r\n\t},\r\n\tleftContainer: {\r\n\t\twidth: \"80%\",\r\n\t\tcolor: \"white\",\r\n\t\ttextShadow: \"2px 2px 2px #000\"\r\n\t},\r\n\tleftSecondTitle: {\r\n\t\tmarginTop: 30,\r\n\t\tmarginBottom: 30\r\n\t},\r\n\tor: {\r\n\t\tmargin: \"0 20px\",\r\n\t\ttextShadow: \"2px 2px 2px #000\"\r\n\t},\r\n\tleftButton: {\r\n\t\tmargin: \"15px 0\"\r\n\t}\r\n}));\r\n\r\nexport default homeStyles;","import { CLOSE_CREATE_GUEST, OPEN_CREATE_GUEST, SET_SENDER_NAME, SET_SENDER_TYPE, SINGLE_CHAT_FOUND } from \"./singleChatActionsTypes\";\r\nimport axios from \"axios\";\r\nimport { openNotification } from \"../../Notification/notificationActions\";\r\n\r\nexport const SingleChatFound = (chat) => ({\r\n    type: SINGLE_CHAT_FOUND,\r\n    chat: chat\r\n})\r\n\r\nexport const getSingleChat = (chatId) => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8081/api/chats/${chatId}`);\r\n            const chat = response.data\r\n\r\n            console.log(chat);\r\n            \r\n            if (chat) {\r\n                dispatch(SingleChatFound(chat));\r\n                return true;\r\n            } else {\r\n                dispatch(openNotification(`Aucun chat trouvé avec l'id [${chatId}]`, \"error\"))\r\n                return false;\r\n            }\r\n\r\n        } catch(e) {           \r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport const getSingleChatByAccessCode = (chatCode) => {\r\n\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8081/api/chats/getByAccessCode/${chatCode}`);\r\n            const chat = response.data\r\n\r\n            console.log(chat);\r\n            \r\n            if (chat) {\r\n                dispatch(SingleChatFound(chat));\r\n                return chat;\r\n            } else {\r\n                dispatch(openNotification(`Aucun chat trouvé avec le code d'accès [${chatCode}]`, \"error\"))\r\n                return false;\r\n            }\r\n\r\n        } catch(e) {           \r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setSenderName = (senderName) => ({\r\n    type: SET_SENDER_NAME,\r\n    senderName: senderName\r\n})\r\n\r\nexport const setSenderType = (senderType) => ({\r\n    type: SET_SENDER_TYPE,\r\n    senderType: senderType\r\n})\r\n\r\nexport const openCreateGuest = () => ({\r\n    type: OPEN_CREATE_GUEST,\r\n    showCreateGuest: true\r\n})\r\n\r\nexport const closeCreateGuest = () => ({\r\n    type: CLOSE_CREATE_GUEST,\r\n    showCreateGuest: false\r\n})","import React from 'react'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { MeetingRoom } from '@material-ui/icons';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport homeStyles from './homeStyles';\r\nimport { getSingleChatByAccessCode } from '../Chat/SingleChat/singleChatActions';\r\n\r\n// Home content component\r\nfunction HomeContent(props) {\r\n\tconst classes = homeStyles();\r\n\r\n\tconst {\r\n\t\tvalues,\r\n\t\ttouched,\r\n\t\terrors,\r\n\t\thandleChange,\r\n\t\thandleBlur,\r\n\t\thandleSubmit,\r\n\t\tnavbar\r\n\t} = props;\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.grid} component=\"main\" style={{ minHeight: `calc(100vh - ${navbar.height}px)`, marginTop: navbar.height}} >\r\n\t\t\t<Grid item xs={12} sm={12} md={7} className={`${classes.image} ${classes.gridItem}`} >\r\n\t\t\t\t<div className={classes.leftContainer}>\r\n\t\t\t\t\t<Typography component=\"h2\" variant=\"h4\" >Application de chat pour vos conférences</Typography>\r\n\t\t\t\t\t<Typography component=\"h3\" variant=\"h5\" className={classes.leftSecondTitle} >Commencez à créer vos chats pour vos conférences en créant un compte ou en vous connectant</Typography>\r\n\t\t\t\t\t<Link to=\"/inscription\">\r\n\t\t\t\t\t\t<Button size='large' className={classes.leftButton} variant=\"contained\" color=\"primary\" startIcon={<PersonAddIcon />}>Créer un compte</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<span className={classes.or}>ou</span>\r\n\t\t\t\t\t<Link to=\"/connexion\">\r\n\t\t\t\t\t\t<Button size='large' className={classes.leftButton} variant=\"contained\" color=\"primary\" startIcon={<AccountCircleIcon />}>Se connecter</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12} sm={12} md={5} component={Paper} elevation={6} className={classes.gridItem} square>\r\n\t\t\t\t<div className={classes.paper}>\r\n\t\t\t\t\t<Avatar className={classes.avatar}>\r\n\t\t\t\t\t\t<MeetingRoom className={classes.meetingRoom} />\r\n\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t<Typography component=\"h2\" variant=\"h4\" gutterBottom>Rejoignez un chat</Typography>\r\n\t\t\t\t\t<Typography component=\"h3\" variant=\"h6\">Accessible sans compte</Typography>\r\n\t\t\t\t\t<form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tid=\"code\"\r\n\t\t\t\t\t\t\tlabel=\"code du chat\"\r\n\t\t\t\t\t\t\tname=\"code\"\r\n\t\t\t\t\t\t\tautoComplete=\"code\"\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\tvalue={values.code}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\terror={touched.code && Boolean(errors.code)}\r\n\t\t\t\t\t\t\thelperText={touched.code ? errors.code : \"\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\t\t\tendIcon={<ArrowForwardIcon />}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tRejoindre\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\n// Home Content component with formik validation\r\nconst Home = withFormik({\r\n\tmapPropsToValues: ({\r\n\t\tcode\r\n\t}) => {\r\n\t\treturn {\r\n\t\t\tcode: code || \"\"\r\n\t\t};\r\n\t},\r\n\r\n\tvalidationSchema: Yup.object().shape({\r\n\t\tcode: Yup.string()\r\n\t\t\t.max(10, \"Le code ne peut pas excéder 10 caractères\")\r\n\t\t\t.required(\"Entrez le code du chat\")\r\n\t}),\r\n\r\n\thandleSubmit: (values, { props }) => {\r\n\t\tconst code = values.code;\r\n\t\tconst { getSingleChatByAccessCode, history } = props;\r\n\r\n\t\tgetSingleChatByAccessCode(code)\r\n\t\t\t.then((chat) => chat ? history.push({\r\n\t\t\t\tpathname: `/chats/${chat.id}`,\r\n\t\t\t\tstate: {\r\n\t\t\t\t  chatId: chat.id\r\n\t\t\t}}) : null)\r\n\t}\r\n})(HomeContent);\r\n\r\nconst mapStateToProps = (state) => ({ navbar: state.navbar })\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\tgetSingleChatByAccessCode: (code) => dispatch(getSingleChatByAccessCode(code))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { isLogged } from '../Auth/authService';\r\n\r\n// Create a route accessible only by a logged user\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        isLogged() ? <Component {...props} /> : <Redirect to={{ pathname: '/connexion', state: { from: props.location } }} />\r\n    )} />\r\n)\r\n\r\nexport default PrivateRoute;","import React from \"react\";\r\nimport \"./PageNotFound.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// page not found component\r\nconst PageNotFound = () => (\r\n    <div id=\"notfound\">\r\n\t\t<div className=\"notfound\">\r\n\t\t\t<div className=\"notfound-404\"></div>\r\n\t\t\t<h1>404</h1>\r\n\t\t\t<h2>Oups! La page n'a pas été trouvé</h2>\r\n            <p>Désolé, la page que vous recherchez n'existe pas, a été supprimé, renommé ou est temporairement indisponible</p>\r\n\t\t\t<Link to=\"/\">Retour à la page d'accueil</Link>\r\n\t\t</div>\r\n\t</div>\r\n)\r\n\r\nexport default PageNotFound","// ES6 module syntax\r\nimport LocalizedStrings from 'react-localization';\r\n\r\n// Inputs Labels names in multi languages\r\nlet labels = new LocalizedStrings({\r\n    en: {\r\n        username: \"username\",\r\n        password: \"password\",\r\n        confirmPassword: \"confirm password\",\r\n        name: \"name\",\r\n        startDateTime: \"startDateTime\",\r\n        endDateTime: \"endDateTime\",\r\n        message: \"message\"\r\n    },\r\n    fr: {\r\n        username: \"identifiant\",\r\n        password: \"mot de passe\",\r\n        confirmPassword: \"confirmation du mot de passe\",\r\n        name: \"nom\",\r\n        startDateTime: \"date de début\",\r\n        endDateTime: \"date de fin\",\r\n        message: \"message\"\r\n    },\r\n});\r\n\r\nexport default labels;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Styles for login component using material ui theme\r\nconst loginStyles = makeStyles(theme => ({\r\n    avatar: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    card: {\r\n        width: \"100%\",\r\n        borderRadius: 10\r\n    },\r\n    cardContent: {\r\n        width: \"90%\",\r\n        margin: \"0 auto\"\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: \"60px\"\r\n    }\r\n}));\r\n\r\nexport default loginStyles;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Paper } from '@material-ui/core';\r\nimport Link from '@material-ui/core/Link';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport { withFormik } from \"formik\";\r\nimport label from '../../global/configs/label';\r\nimport { login } from \"../authService\";\r\nimport * as Yup from \"yup\";\r\nimport loginStyles from './loginStyles';\r\n\r\n// Login form component\r\nfunction LoginForm(props) {\r\n\r\n    const classes = loginStyles();\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit\r\n    } = props;\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={5}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n                Se Connecter\r\n                </Typography>\r\n            <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"username\"\r\n                    label={label.username}\r\n                    name=\"username\"\r\n                    autoComplete=\"username\"\r\n                    autoFocus\r\n                    value={values.username}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.username ? errors.username : \"\"}\r\n                    error={touched.username && Boolean(errors.username)}\r\n                />\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label={label.password}\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    autoComplete=\"current-password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.password ? errors.password : \"\"}\r\n                    error={touched.password && Boolean(errors.password)}\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    size=\"large\"\r\n                >\r\n                    Connexion\r\n                    </Button>\r\n            </form>\r\n            <RouterLink to={\"/inscription\"}>\r\n                <Link component=\"span\" variant=\"body2\">Pas de compte ? Inscrivez vous</Link>\r\n            </RouterLink>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n// Login form with formik validation\r\nconst Login = withFormik({\r\n    mapPropsToValues: ({\r\n        username,\r\n        password\r\n    }) => {\r\n        return {\r\n            username: username || \"\",\r\n            password: password || \"\",\r\n        };\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n        username: Yup.string()\r\n            .required(\"Entrez votre identifiant\"),\r\n        password: Yup.string()\r\n            .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.:;?|/\\\\{}<>!@#$%^&*()_+-=])(?=.{8,})/, \"Doit contenir au moins 8 caractères, 1 minuscule, 1 majuscule, 1 chiffres, 1 caractère spécial\")\r\n            .required(\"Entrez votre mot de passe\")\r\n    }),\r\n\r\n    handleSubmit: (values, { props, resetForm }) => {\r\n        const { history, openNotification } = props;\r\n\r\n        const username = values.username\r\n        const password = values.password\r\n\r\n        login(username, password).then(logged => {\r\n            if (logged) {\r\n                resetForm();\r\n                openNotification(`Bienvenue ${username}, vous êtes connecté`, \"success\")\r\n                history.push(\"/chats\");\r\n            } else {\r\n                openNotification(\"Informations de connexion invalides\", \"error\")\r\n            }\r\n        })\r\n    }\r\n})(LoginForm);\r\n\r\nexport default withRouter(Login);","import { makeStyles } from \"@material-ui/core\";\r\n\r\n// Styles for auth container\r\nconst authContainerStyles = makeStyles(theme => ({\r\n    authContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        width: \"100%\",\r\n        justifyContent: 'center',\r\n        [`${theme.breakpoints.down('sm')}`]: {\r\n            minHeight: \"100vh !important\"\r\n        },\r\n        [`${theme.breakpoints.down('sm')} and (orientation: landscape)`]: {\r\n            height: \"auto !important\"\r\n\t\t}\r\n    }\r\n}));\r\n\r\nexport default authContainerStyles;","import React, { Fragment } from \"react\";\r\nimport Container from '@material-ui/core/Container';\r\nimport { connect } from \"react-redux\";\r\nimport authContainerStyles from './authContainerStyles';\r\n\r\n// Auth container to connect to app state using redux\r\nconst AuthContainer = ({ children, maxWidth, navbarHeight }) => {\r\n    const classes = authContainerStyles();\r\n\r\n    return (\r\n        <Fragment>\r\n            <div style={{ height: navbarHeight }}></div>\r\n            <Container component=\"main\" maxWidth={maxWidth} className={classes.authContainer} style={{ height: `calc(100vh - ${navbarHeight}px)` }}>\r\n                {children}\r\n            </Container>\r\n        </Fragment>\r\n    )\r\n}\r\n// part of the app state to retrieve\r\nconst mapStateToProps = (state) => ({ navbarHeight: state.navbar.height })\r\n\r\nexport default connect(mapStateToProps)(AuthContainer);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Login from \"./Login\";\r\nimport AuthContainer from '../AuthContainer';\r\nimport { openNotification } from '../../Notification/notificationActions';\r\n\r\n// Login Container to connect to app state using redux\r\nconst LoginContainer = ({ openNotification }) => {\r\n\r\n    return (\r\n        <AuthContainer maxWidth=\"md\" >\r\n            <Login openNotification={openNotification} />\r\n        </AuthContainer>\r\n    )\r\n}\r\n\r\n// Actions to retrieve\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    openNotification: (message, severity) => dispatch(openNotification(message, severity)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginContainer)","import React, { Fragment } from \"react\";\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport MeetingRoomIcon from '@material-ui/icons/MeetingRoom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ListItemIcon, ListItemSecondaryAction, Menu, MenuItem, Typography } from \"@material-ui/core\";\r\nimport { MoreVert } from \"@material-ui/icons\";\r\n\r\n// Chat item component\r\nconst ChatItem = ({ chat, openUpdateChat, deleteChat }) => {\r\n    const [menuEl, setMenuEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setMenuEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setMenuEl(null);\r\n    };\r\n\r\n    const updateChatClick = (chat) => {\r\n        openUpdateChat(chat);\r\n        handleClose();\r\n    }\r\n\r\n    const deleteChatClick = (chatId) => {\r\n        deleteChat(chatId);\r\n        handleClose();\r\n    }\r\n\r\n    const styles = {\r\n        link: {\r\n            display: \"inherit\",\r\n            alignItems: \"inherit\",\r\n            color: 'inherit',\r\n            textDecoration: 'inherit',\r\n            width: \"inherit\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <ListItem button>\r\n                <Link to={{\r\n                    pathname: `/chats/${chat.id}`,\r\n                    state: {\r\n                      chatId: chat.id\r\n                    }}}\r\n                style={styles.link}\r\n                >\r\n                    <ListItemAvatar>\r\n                        <Avatar>\r\n                            <MeetingRoomIcon />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary={chat.name} secondary={`Code : ${chat.accessCode}`} />\r\n                </Link>\r\n                <ListItemSecondaryAction>\r\n                    <IconButton onClick={handleClick}>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n            <Menu open={Boolean(menuEl)} onClose={handleClose} anchorEl={menuEl} keepMounted>\r\n                <MenuItem onClick={() => updateChatClick(chat)}>\r\n                    <ListItemIcon aria-label=\"edit\">\r\n                        <EditIcon />\r\n                    </ListItemIcon>\r\n                    <Typography variant=\"inherit\" noWrap>Éditer</Typography>\r\n                </MenuItem>\r\n                <MenuItem onClick={() => deleteChatClick(chat.id)}>\r\n                    <ListItemIcon aria-label=\"delete\">\r\n                        <DeleteIcon />\r\n                    </ListItemIcon>\r\n                    <Typography variant=\"inherit\" noWrap>Supprimer</Typography>\r\n                </MenuItem>\r\n            </Menu>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ChatItem;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst chatListStyles = makeStyles((theme) => ({\r\n\tChatList: {\r\n\t\twidth: '100%',\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tmargin: \"30px 0\",\r\n\t\t[`${theme.breakpoints.down('sm')}`]: {\r\n            padding: \"auto\"\r\n\t\t},\r\n\t\t[`${theme.breakpoints.up('sm')}`]: {\r\n            padding: 20\r\n        },\r\n\t},\r\n\ttitle: {\r\n\t\tmarginTop: 50,\r\n\t\tmarginBottom: 50\r\n\t},\r\n\tnoChat: {\r\n\t\ttextAlign: \"center\"\r\n\t},\r\n\tpaginationContainer: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n  \t\tjustifyContent: \"center\"\r\n\t},\r\n\tpagination: {\r\n\t\tdisplay: \"inline-flex\",\r\n\t\tpadding: 0,\r\n\t\tmarginBottom: 30\r\n\t}\r\n}));\r\n\r\nexport default chatListStyles;","import React, { Fragment } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport { Hidden, Paper, Typography } from '@material-ui/core';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nimport ChatItem from './ChatItem';\r\nimport chatListStyles from './chatListStyles';\r\n\r\n// Chat list component\r\nconst ChatList = (props) => {\r\n\tconst classes = chatListStyles();\r\n\tconst { chatPage, deleteChat, getChatPage, openUpdateChat, fetchMoreChats, pageNumber, totalPages, last } = props;\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Typography className={classes.title} variant=\"h4\" component=\"h2\" align=\"center\">Vos chats</Typography>\r\n\t\t\t{!chatPage || chatPage.length === 0 ? <div className={classes.noChat}><p>Vous n'avez pas encore de chats</p><p>Vous pouvez en créer avec le bouton en bas à droite</p></div> : (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<Hidden xsDown>\r\n\t\t\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t\t\t<List className={classes.ChatList}>\r\n\t\t\t\t\t\t\t\t{chatPage.map((chat, i) => (\r\n\t\t\t\t\t\t\t\t\t<ChatItem key={i} openUpdateChat={openUpdateChat} deleteChat={deleteChat} chat={chat} getChatPage={getChatPage} />\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t{totalPages > 1 ? (\r\n\t\t\t\t\t\t\t\t<div className={classes.paginationContainer}>\r\n\t\t\t\t\t\t\t\t\t<Pagination page={pageNumber+1} count={totalPages} className={classes.pagination} onChange={(chat, value) => getChatPage(value-1)} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Hidden>\r\n\t\t\t\t\t<Hidden smUp>\r\n\t\t\t\t\t\t<InfiniteScroll\r\n\t\t\t\t\t\t\tdataLength={chatPage.length}\r\n\t\t\t\t\t\t\tnext={!last ? () => fetchMoreChats(pageNumber + 1) : console.log(\"already in last page\")}\r\n\t\t\t\t\t\t\thasMore={true}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Paper elevation={3}>\r\n\t\t\t\t\t\t\t<List className={classes.ChatList}>\r\n\t\t\t\t\t\t\t\t{chatPage.map((chat, i) => (\r\n\t\t\t\t\t\t\t\t\t<ChatItem key={i} openUpdateChat={openUpdateChat} deleteChat={deleteChat} chat={chat} getChatPage={getChatPage} />\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t</InfiniteScroll>\r\n\t\t\t\t\t</Hidden>\r\n\t\t\t\t</Fragment>\r\n\t\t\t)}\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n\r\nexport default ChatList;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Styles for add chat component\r\nconst addChatStyles = makeStyles(theme => ({\r\n    chatNameInput: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    datePicker: {\r\n        width: 250,\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(5),\r\n        right: theme.spacing(5),\r\n        textTransform: 'none'\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nexport default addChatStyles;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport addChatStyles from './addChatStyles';\r\n\r\n// Add chat form component\r\nconst AddChatForm = (props) => {\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setSubmitting\r\n    } = props;        \r\n\r\n    const classes = addChatStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setSubmitting(false);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n        \r\n    return (\r\n        <div>\r\n        <Fab onClick={handleClickOpen} className={classes.fab} color=\"primary\" aria-label=\"add\" variant=\"extended\">\r\n            <AddIcon className={classes.extendedIcon} />\r\n            Créer un chat\r\n        </Fab>\r\n        <Dialog open={isSubmitting ? false : open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick>\r\n            <form onSubmit={handleSubmit}>\r\n                <DialogTitle id=\"form-dialog-title\">Créer un nouveau chat</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Créer un chat, vous permettant de communiquer avec vos invités.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Nom du chat\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        className={classes.chatNameInput}\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={touched.name ? errors.name : \"\"}\r\n                        error={touched.name && Boolean(errors.name)}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button color=\"primary\" onClick={handleClose} variant=\"outlined\">\r\n                    Annuler\r\n                </Button>\r\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                    Créer\r\n                </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n// add chat form component with formik validation\r\nconst AddChat = withFormik({\r\n    mapPropsToValues: ({\r\n        name\r\n    }) => ({\r\n        name: name || \"\"\r\n    }),\r\n\r\n    validationSchema: Yup.object().shape({\r\n        name: Yup.string()\r\n                .max(120, \"Le nom du chat ne peut pas excéder 120 caractères\")\r\n                .required(\"Veuillez entrer un nom pour le chat\"),\r\n    }),\r\n    handleSubmit: (values, { props, resetForm, setSubmitting }) => {\r\n        const chat = {...values};\r\n        const { createChat, getChatPage } = props;\r\n        \r\n        createChat(chat).then(reqSuccess => {\r\n            if (reqSuccess) {\r\n                resetForm();\r\n                setSubmitting(true);\r\n                getChatPage(0);\r\n            } else {\r\n                setSubmitting(false);\r\n            }\r\n        })\r\n    }\r\n})(AddChatForm)\r\n\r\nexport default AddChat;","// Messages associated to validation error code\r\n\r\nconst errorsCodesMsg = {\r\n    NotBlank:\"Ne doit pas être vide\",\r\n    NotNull:\"Ne peut être nul\",\r\n    UniqueUsername:\"Un compte ayant cet identifiant existe déjà\",\r\n    Future:\"Doit être dans le futur\",\r\n    FutureOrPresent:\"Ne doit pas être dans le passé\",\r\n    Size:\"Contient trop de caractères\",\r\n    AfterDate:\"Le début du meeting doit être avant la fin du meeting\",\r\n    AccountPassword: \"Doit contenir au moins 8 caractères, dont au minimum 1 majuscule, 1 minuscule, 1 chiffre, et 1 caractère spécial\"\r\n}\r\n\r\nexport default errorsCodesMsg;","import errorsCodesMsg from \"../configs/errorsCodesMsg\";\r\nimport labels from \"../configs/label\";\r\n\r\n// Build error message using input name and error code from backend\r\nconst buildErrorMsg = (code, attribute) => {\r\n    \r\n    let errorMsg;\r\n\r\n    if (attribute === null) {\r\n        errorMsg = `${errorsCodesMsg[code]}`;\r\n    } else {\r\n        errorMsg = `[Champ ${labels[attribute]}] : ${errorsCodesMsg[code]}`;\r\n    }\r\n\r\n    return errorMsg;\r\n}\r\nexport default buildErrorMsg;","import buildErrorMsg from \"./buildErrorMsg\";\r\n\r\n// List server error from error response\r\nconst listServerErrors = (status, data) => {\r\n    const messages = [];\r\n\r\n    if (status === 400) {\r\n        data.forEach(serverError => {\r\n            const msg = buildErrorMsg(serverError.code, serverError.attribute)\r\n            messages.push(msg)\r\n        });\r\n    } else if (status === 401) {\r\n        messages.push(\"Une identification est nécessaire pour obtenir la réponse demandée.\");\r\n    } else if (status === 404) {\r\n        messages.push(\"Le serveur n'a pas trouvé la ressource demandée\");\r\n    } else if (status === 500) {\r\n        messages.push(\"Erreur interne du serveur\");\r\n    } else {\r\n        messages.push(\"Une erreur est survenue\");\r\n    }\r\n\r\n    return messages;\r\n}\r\n\r\nexport default listServerErrors;","import { GET_CHAT_PAGE_SUCCESS, GET_CHAT_PAGE_ERROR, OPEN_UPDATE_CHAT, CLOSE_UPDATE_CHAT, FETCH_MORE_CHATS_SUCCESS, FETCH_MORE_CHATS_ERROR } from \"./chatActionsTypes\"\r\nimport axios from \"axios\";\r\nimport listServerErrors from \"../../global/functions/listServerErrors\";\r\nimport { getTokenFromLocalStorage } from '../../Auth/authService';\r\nimport { openNotification } from \"../../Notification/notificationActions\";\r\n\r\n// Create chat Actions\r\n// This function create a new chat and show a notification in case of success or error\r\nexport function createChat(chat) {\r\n    \r\n    return async (dispatch) => {\r\n        \r\n        // convert user input to json\r\n        const chatJson = JSON.stringify(chat);\r\n\r\n        try {\r\n            // Get token from local storage\r\n            const accessToken = getTokenFromLocalStorage(\"access_token\");\r\n            // Request API to create the new chat\r\n            await axios.post(\r\n                \"http://localhost:8081/api/chats\",\r\n                chatJson,\r\n                { headers: { 'Content-Type': 'application/json', \"Authorization\": `Bearer ${accessToken}` } }\r\n            )\r\n            // Show success notification\r\n            dispatch(openNotification(\"Chat crée avec succès\", \"success\"));\r\n            // Reload chat list\r\n            dispatch(getChatPage(0));\r\n            return true\r\n        } catch (error) {\r\n            const statusCode = error.response.status\r\n            const data = error.response.data\r\n            // Extract errors messages from response        \r\n            const errorMessages = listServerErrors(statusCode, data);\r\n            // Show errors in notification\r\n            dispatch(openNotification(errorMessages, \"error\"))\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\n// Delete chat Action\r\nexport function deleteChat(chatId) {\r\n    console.log(chatId);\r\n    return async (dispatch) => {\r\n        try {\r\n            const accessToken = getTokenFromLocalStorage(\"access_token\");\r\n            const config = {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${accessToken}`\r\n                }\r\n            }\r\n            await axios.delete(`http://localhost:8081/api/chats/${chatId}`, config);\r\n            dispatch(openNotification(\"chat supprimé avec succès\", \"success\"))\r\n            dispatch(getChatPage(0))\r\n            return true\r\n        } catch (error) {\r\n            dispatch(openNotification(\"La suppression du chat a échoué\", \"error\"))\r\n            return false           \r\n        }\r\n    }\r\n}\r\n\r\n// Get chat List Page Action\r\nexport function getChatPageSuccess(pageNumber, chatPage, totalPages) {\r\n    return {\r\n        type: GET_CHAT_PAGE_SUCCESS,\r\n        chatPage: chatPage,\r\n        pageNumber: pageNumber,\r\n        totalPages: totalPages\r\n    }\r\n}\r\n\r\nexport function getChatPageError() {\r\n    return {\r\n        type: GET_CHAT_PAGE_ERROR,\r\n        errorMsg: \"Une erreur est survenue\"\r\n    }\r\n}\r\n\r\nexport function getChatPage(pageNumber) {\r\n    console.log(\"getChatPage called with page number : \" + pageNumber);\r\n    return async (dispatch) => {\r\n        try {\r\n            const accessToken = getTokenFromLocalStorage(\"access_token\");\r\n            const config = {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${accessToken}`\r\n                }\r\n            }\r\n            const pageSize = 5;\r\n            const response = await axios.get(`http://localhost:8081/api/chats?page=${pageNumber}&size=${pageSize}`, config);\r\n            const chatPage = response.data.content;\r\n            const totalPages = response.data.totalPages;\r\n            const last = response.data.last\r\n            dispatch(getChatPageSuccess(pageNumber, chatPage, totalPages, last))\r\n        } catch {           \r\n            dispatch(getChatPageError());\r\n        }\r\n    }\r\n}\r\n\r\n// Actions for update chat\r\nexport function openUpdateChat(chat) {\r\n    return {\r\n        type: OPEN_UPDATE_CHAT,\r\n        open: true,\r\n        chat: chat\r\n    }\r\n}\r\n\r\nexport function closeUpdateChat() {\r\n    return {\r\n        type: CLOSE_UPDATE_CHAT,\r\n        open: false,\r\n        chat: null\r\n    }\r\n}\r\n\r\nexport function updateChat(chat) {\r\n    return async (dispatch) => {\r\n\r\n        const chatJson = JSON.stringify(chat);\r\n\r\n        try {\r\n            const accessToken = getTokenFromLocalStorage(\"access_token\");\r\n            await axios.put(\r\n                `http://localhost:8081/api/chats/${chat.id}`,\r\n                chatJson,\r\n                { headers: { 'Content-Type': 'application/json', \"Authorization\": `Bearer ${accessToken}` } }\r\n            )\r\n\r\n            dispatch(openNotification(\"chat modifié avec succès\", \"success\"))\r\n            dispatch(closeUpdateChat());\r\n            dispatch(getChatPage(0));\r\n            return true\r\n        } catch (error) {\r\n            const statusCode = error.response.status\r\n            const data = error.response.data            \r\n            const errorMessages = listServerErrors(statusCode, data);\r\n            dispatch(openNotification(errorMessages, \"error\"))\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\n// Fetch more chats action\r\nexport function fetchMoreChatsSuccess(pageNumber, chatPage, totalPages, last) {\r\n    return {\r\n        type: FETCH_MORE_CHATS_SUCCESS,\r\n        chatPage: chatPage,\r\n        pageNumber: pageNumber,\r\n        totalPages: totalPages,\r\n        last: last\r\n    }\r\n}\r\n\r\nexport function fetchMoreChatsError() {\r\n    return {\r\n        type: FETCH_MORE_CHATS_ERROR,\r\n        errorMsg: \"Une erreur est survenue\"\r\n    }\r\n}\r\n\r\nexport function fetchMoreChats(pageNumber) {\r\n    return async (dispatch) => {\r\n        try {\r\n            const accessToken = getTokenFromLocalStorage(\"access_token\");\r\n            const config = {\r\n                headers: {\r\n                    \"Authorization\": `Bearer ${accessToken}`\r\n                }\r\n            }\r\n            const pageSize = 5;\r\n            const response = await axios.get(`http://localhost:8081/api/chats?page=${pageNumber}&size=${pageSize}`, config);\r\n            const chatPage = response.data.content;\r\n            const totalPages = response.data.totalPages;\r\n            const last = response.data.last\r\n            dispatch(fetchMoreChatsSuccess(pageNumber, chatPage, totalPages, last))\r\n        } catch {           \r\n            dispatch(fetchMoreChatsError());\r\n        }\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Styles for update chat component\r\nconst updateChatStyles = makeStyles(theme => ({\r\n    chatNameInput: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    datePicker: {\r\n        width: 250,\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(5),\r\n        right: theme.spacing(5),\r\n        textTransform: 'none'\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nexport default updateChatStyles;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport updateChatStyles from './updateChatStyles';\r\n\r\n// Update Chat form component\r\nconst UpdateChatForm = (props) => {\r\n    \r\n    const classes = updateChatStyles();\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        state,\r\n        handleClose\r\n    } = props;\r\n\r\n    return (\r\n        <Dialog open={state.open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick>\r\n            <form onSubmit={handleSubmit}>\r\n                <DialogTitle id=\"form-dialog-title\">Éditer un chat</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Nom du chat\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        className={classes.chatNameInput}\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={touched.name ? errors.name : \"\"}\r\n                        error={touched.name && Boolean(errors.name)}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button color=\"primary\" onClick={handleClose} variant=\"outlined\">\r\n                    Annuler\r\n                </Button>\r\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                    Éditer\r\n                </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n// Update chat form component with formik validation\r\nconst UpdateChat = withFormik({\r\n\r\n    enableReinitialize: true,\r\n\r\n    mapPropsToValues: (props) => ({\r\n        name: props.state.chat.name || \"\"\r\n    }),\r\n\r\n    validationSchema: Yup.object().shape({\r\n        name: Yup.string()\r\n                .max(255, \"Le nom du chat ne peut pas excéder 255 caractères\")\r\n                .required(\"Veuillez entrer un nom pour le chat\"),\r\n    }),\r\n    handleSubmit: (values, { props }) => {\r\n        const { updateChat, state } = props;\r\n\r\n        const chat = {\r\n            ...values,\r\n            id: state.chat.id\r\n        }\r\n\r\n        updateChat(chat);\r\n    }\r\n})(UpdateChatForm)\r\n\r\nexport default UpdateChat;","import React, { Component } from 'react';\r\nimport ChatList from './ChatList/ChatList';\r\nimport AddChat from './AddChat/AddChat';\r\nimport { createChat, deleteChat, getChatPage, openUpdateChat, closeUpdateChat, updateChat, fetchMoreChats } from \"./redux/chatActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { isLogged } from '../Auth/authService';\r\nimport UpdateChat from './UpdateChat/UpdateChat';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n// Chat container to connect to app state using redux\r\nclass ChatsContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getChatPage(0);\r\n    }\r\n\r\n    render() {\r\n        const { chatState, createChat, deleteChat, getChatPage, openUpdateChat, closeUpdateChat, updateChat, fetchMoreChats, history } = this.props;\r\n        const { chatPage, pageNumber, totalPages, updateChatState, last } = chatState;\r\n\r\n        const logged = isLogged();\r\n\r\n        if (!logged) {\r\n            history.push(\"/connexion\")\r\n        }\r\n\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"md\" style={{ minHeight: `calc(100vh - 150px)`, marginTop: 150}}>\r\n                <ChatList totalPages={totalPages} chatPage={chatPage} getChatPage={getChatPage} pageNumber={pageNumber} deleteChat={deleteChat} openUpdateChat={openUpdateChat} fetchMoreChats={fetchMoreChats} last={last} />\r\n                <AddChat createChat={createChat} getChatPage={getChatPage} pageNumber={pageNumber} />\r\n                <UpdateChat state={updateChatState} handleClose={closeUpdateChat} updateChat={updateChat} />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\n// Part of the app state to retrieve\r\nconst mapStateToProps = (state) => ({ chatState: state.chats, navbarState: state.navbar });\r\n\r\n// Actions to retrieve\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    createChat: (chat) => dispatch(createChat(chat)),\r\n    updateChat: (chat) => dispatch(updateChat(chat)),\r\n    deleteChat: (chatId) => dispatch(deleteChat(chatId)),\r\n    getChatPage: (pageNumber) => dispatch(getChatPage(pageNumber)),\r\n    fetchMoreChats: (pageNumber) => dispatch(fetchMoreChats(pageNumber)),\r\n    openUpdateChat: (chat) => dispatch(openUpdateChat(chat)),\r\n    closeUpdateChat: () => dispatch(closeUpdateChat()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatsContainer);","import { makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst SingleChatStyles = makeStyles((theme) => ({\r\n\tsection1: {\r\n\t\tmargin: theme.spacing(3, 2),\r\n\t},\r\n\tpaper: {\r\n\t\tpadding: 24\r\n\t}\r\n}));\r\n\r\nconst SingleChat = ({ SingleChat }) => {\r\n\tconst classes = SingleChatStyles();\r\n\r\n\treturn (\r\n\t\t<Paper elevation={12} className={classes.paper}>\r\n\t\t\t<div className={classes.section1}>\r\n\t\t\t\t<Typography component=\"h1\" variant=\"h4\">{SingleChat.name ? SingleChat.name : \"Non trouvé\"}</Typography>\r\n\t\t\t\t<Typography variant=\"body1\" color=\"textSecondary\">Animé par : {SingleChat.speakerUsername ? SingleChat.speakerUsername : \"Non trouvé\"}</Typography>\r\n\t\t\t\t<Typography variant=\"body1\" color=\"textSecondary\">Code : {SingleChat.accessCode ? SingleChat.accessCode : \"Non trouvé\"}</Typography>\r\n\t\t\t</div>\r\n\t\t</Paper>\r\n\t)\r\n}\r\n\r\nexport default SingleChat;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n\r\n// Single message component\r\nexport default function Message({ senderName, text }) {\r\n\treturn (\r\n\t\t<ListItem disableGutters>\r\n\t\t\t<ListItemAvatar>\r\n\t\t\t\t<Avatar>\r\n\t\t\t\t\t{senderName.toUpperCase()[0]}\r\n\t\t\t\t</Avatar>\r\n\t\t\t</ListItemAvatar>\r\n\t\t\t<ListItemText primary={senderName} secondary={text} />\r\n\t\t</ListItem>\r\n\t);\r\n}","import { makeStyles } from \"@material-ui/core\";\r\n\r\nconst messageListStyles = makeStyles((theme) => ({\r\n\tmessageSection: {\r\n\t\tmargin: theme.spacing(2),\r\n\t},\r\n\tmessagesTitle: {\r\n\t\tmarginTop: theme.spacing(4)\r\n\t},\r\n\tnoMessageText: {\r\n\t\tmarginTop: theme.spacing(2)\r\n\t}\r\n}));\r\n\r\nexport default messageListStyles;","import React, { Fragment } from \"react\";\r\nimport Message from \"../Message\";\r\nimport { List, Typography } from \"@material-ui/core\";\r\nimport messageListStyles from './messageListStyles';\r\n\r\nconst MessageList = ({ messages }) => {\r\n    const classes = messageListStyles();\r\n\r\n    return (\r\n        <div className={classes.messageSection}>\r\n\t\t\t<Typography variant=\"h5\" className={classes.messagesTitle}>Messages</Typography>\r\n            {messages.length === 0 ? (<Typography variant=\"body1\" className={classes.noMessageText}>Aucun messages pour le moment</Typography>) : (\r\n                <Fragment>\r\n                    <List>\r\n                        {messages.map((message, i) => (\r\n                            <Message key={i} senderName={message.senderName} text={message.text} />\r\n                            ))}\r\n                    </List>\r\n                </Fragment>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageList","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst addMessageStyles = makeStyles(theme => ({\r\n    chatNameInput: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    datePicker: {\r\n        width: 250,\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(5),\r\n        right: theme.spacing(5),\r\n        textTransform: 'none'\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nexport default addMessageStyles;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport addMessageStyles from './addMessageStyles';\r\n\r\n// Add message form component\r\nconst AddMessageForm = (props) => {\r\n\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        setSubmitting\r\n    } = props;        \r\n\r\n    const classes = addMessageStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setSubmitting(false);\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n        \r\n    return (\r\n        <div>\r\n        <Fab onClick={handleClickOpen} className={classes.fab} color=\"primary\" aria-label=\"add\" variant=\"extended\">\r\n            <AddIcon className={classes.extendedIcon} />\r\n            Nouveau message\r\n        </Fab>\r\n        <Dialog open={isSubmitting ? false : open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" disableBackdropClick>\r\n            <form onSubmit={handleSubmit}>\r\n                <DialogTitle id=\"form-dialog-title\">Envoyer un nouveau message</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        id=\"text\"\r\n                        label=\"text\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                        className={classes.chatNameInput}\r\n                        value={values.text}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        helperText={touched.text ? errors.text : \"\"}\r\n                        error={touched.text && Boolean(errors.text)}\r\n                        variant=\"outlined\"\r\n                        multiline\r\n                        rows={4}\r\n                        margin=\"dense\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button color=\"primary\" onClick={handleClose} variant=\"outlined\">\r\n                    Annuler\r\n                </Button>\r\n                <Button type=\"submit\" color=\"primary\" variant=\"contained\">\r\n                    Envoyer\r\n                </Button>\r\n                </DialogActions>\r\n            </form>\r\n        </Dialog>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Add message form component with formik validation\r\nconst AddMessage = withFormik({\r\n    mapPropsToValues: ({\r\n        text\r\n    }) => ({\r\n        text: text || \"\"\r\n    }),\r\n\r\n    validationSchema: Yup.object().shape({\r\n        text: Yup.string()\r\n            .max(255, \"Le texte de votre message ne peut pas dépasser 255 caractères\")\r\n            .required(\"Le texte de votre message ne peut être vide\")\r\n    }),\r\n    handleSubmit: (messageForm, { props, resetForm, setSubmitting }) => {\r\n        // Get sockjs client, chatId, senderName, senderType from props\r\n        const { sockJsClient, chatId, senderName, senderType } = props;\r\n        // Build message obj to be send to the API\r\n        const message = { text: messageForm.text, chatId: chatId, senderName: senderName, senderType: senderType };\r\n        // Use sock js client to send message to API\r\n        sockJsClient.sendMessage('/app/user-all', JSON.stringify(message));\r\n        // Reset form\r\n        resetForm();\r\n        // Close form\r\n        setSubmitting(true);\r\n    }\r\n})(AddMessageForm)\r\n\r\nexport default withRouter(AddMessage);","import { ADD_MESSAGE, GET_MESSAGE_LIST } from \"./messageActionsTypes\"\r\nimport axios from \"axios\";\r\n\r\n// Add message action\r\nexport const addMessage = (senderName, text) => ({\r\n    type: ADD_MESSAGE,\r\n    senderName: senderName,\r\n    text: text\r\n})\r\n\r\n// Fetch messages actions\r\nexport const fetchMessageList = (messageList) => ({\r\n    type: GET_MESSAGE_LIST,\r\n    messageList: messageList\r\n})\r\n\r\n// Format message list to keep only sender name and text\r\nconst formatMessages = (messageList) => {\r\n    const formattedMessageList = [];\r\n\r\n    for (const message of messageList) {\r\n        const formattedMessage = { text: message.text, senderName: null }\r\n        if (message.speaker != null) {\r\n            formattedMessage.senderName = message.speaker.username\r\n        }\r\n        if (message.guest != null) {\r\n            formattedMessage.senderName = message.guest.pseudo\r\n        }\r\n        formattedMessageList.push(formattedMessage)\r\n    }\r\n\r\n    return formattedMessageList;\r\n}\r\n\r\n// Get message list\r\nexport const getMessageList = (chatId) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:8081/api/messages/chat/${chatId}`);\r\n            const messageList = response.data\r\n            console.log(messageList);\r\n            const formattedMsgList = formatMessages(messageList);\r\n            console.log(\"get message list\");\r\n            console.log(formattedMsgList);\r\n            dispatch(fetchMessageList(formattedMsgList));\r\n        } catch(e) {           \r\n            console.log(e);\r\n            return false;\r\n        }\r\n    }\r\n}","import React, { Component, Fragment, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MessageList from \"./MessageList/MessageList\";\r\nimport AddMessage from \"./AddMessage/AddMessage\";\r\nimport SockJsClient from 'react-stomp';\r\nimport { addMessage, getMessageList } from \"./messageActions\";\r\nimport listServerErrors from \"../global/functions/listServerErrors\";\r\nimport { openNotification } from \"../Notification/notificationActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n// Message container to connect to app state using redux\r\nclass MessageContainer extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.sockJsClient = createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Get chat's messages\r\n        console.log(\"component did mount\");\r\n        this.props.getMessageList(this.props.chat.id)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.chat.id !== this.props.chat.id) {\r\n            console.log(\"component did update\");\r\n            this.props.getMessageList(this.props.chat.id);\r\n        }\r\n    }\r\n\r\n    handleMessage(response, topic) {\r\n        const { body, statusCode, statusCodeValue } = response;\r\n\r\n        console.log(body);\r\n\r\n        // Message received with success\r\n        if (statusCode === \"OK\" && body !== null) {\r\n            this.props.addMessage(body.senderName, body.text);\r\n        }\r\n        // Show success notif if message sent with success\r\n        if (topic === \"/user/queue/success\") {\r\n            this.props.openNotification(\"Message envoyé\", \"success\");\r\n        }\r\n        // Show error notif if message sending failed\r\n        if(topic === \"/user/queue/errors\") {\r\n            console.log(response);\r\n            const errorsMsg = listServerErrors(statusCodeValue, body)\r\n            this.props.openNotification(errorsMsg, \"error\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <MessageList messages={this.props.messages} />\r\n                <AddMessage chatId={this.props.chat.id} senderName={this.props.chat.senderName} senderType={this.props.chat.senderType} sockJsClient={this.sockJsClient.current} />\r\n                <SockJsClient\r\n                    url='http://localhost:8081/websocket-chat/'\r\n                    topics={['/topic/user', \"/user/queue/errors\", \"/user/queue/success\"]}\r\n                    onConnect={() => {\r\n                        console.log(\"connected\");\r\n                    }}\r\n                    onDisconnect={() => {\r\n                        console.log(\"Disconnected\");\r\n                    }}\r\n                    onMessage={(response, topic) => this.handleMessage(response, topic)}\r\n                    ref={this.sockJsClient}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n// Part of the app state to retrieve\r\nconst mapStateToProps = (state) => ({\r\n    messages: state.messages,\r\n    chat: state.SingleChat\r\n})\r\n\r\n\r\n// Actions to retrieve\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getMessageList: (chatId) => dispatch(getMessageList(chatId)),\r\n    addMessage: (username, message) => dispatch(addMessage(username, message)),\r\n    openNotification: (messages, severity) => dispatch(openNotification(messages, severity))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(MessageContainer));","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { withFormik } from 'formik';\r\nimport listServerErrors from '../../global/functions/listServerErrors';\r\n\r\nfunction CreateGuestForm(props) {\r\n\r\n  const {\r\n    values,\r\n    touched,\r\n    errors,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    open\r\n  } = props;\r\n\r\n  return (\r\n    <div>\r\n      <Dialog open={open} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">Choix du pseudo</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Veuillez choisir le pseudo que vous utiliserez dans ce chat.\r\n          </DialogContentText>\r\n          <TextField\r\n                    id=\"pseudo\"\r\n                    label=\"Pseudo\"\r\n                    type=\"text\"\r\n                    value={values.pseudo}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.pseudo ? errors.pseudo : \"\"}\r\n                    error={touched.pseudo && Boolean(errors.pseudo)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    autoFocus\r\n                    required\r\n                />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Valider\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst CreateGuest = withFormik({\r\n  mapPropsToValues: ({\r\n      pseudo\r\n  }) => {\r\n      return {\r\n          pseudo: pseudo || \"\"\r\n      };\r\n  },\r\n\r\n  validationSchema: Yup.object().shape({\r\n      pseudo: Yup.string()\r\n          .required(\"Entrez un pseudo\")\r\n  }),\r\n\r\n  handleSubmit: async (values, { props, resetForm }) => {\r\n\r\n      const { chatId, openNotif, closeForm, setSenderName, setSenderType } = props;\r\n      const guest = {...values, chatId: chatId}\r\n      const guestjson = JSON.stringify(guest);\r\n\r\n      console.log(guest);\r\n\r\n      try {\r\n        // create guest user\r\n        await axios.post(\r\n          \"http://localhost:8081/api/guests\",\r\n          guestjson,\r\n          { headers: { 'Content-Type': 'application/json' } }\r\n        )\r\n\r\n        // Clean form\r\n        resetForm();\r\n        // Show welcome notif\r\n        openNotif(`Bienvenue ${guest.pseudo}, vous pouvez maintenant envoyer vos messages dans ce chat`, \"success\")\r\n        // close choose pseudo form\r\n        closeForm();\r\n        // Set guest peudo in redux state\r\n        setSenderName(guest.pseudo);\r\n        setSenderType(\"guest\")\r\n      } catch(e) {           \r\n        // Show errors in notif\r\n        const errorList = listServerErrors(e.response.status, e.response.data)\r\n        openNotif(errorList, \"error\")\r\n      }\r\n    }\r\n})(CreateGuestForm);\r\n\r\nexport default CreateGuest;","import { Container } from \"@material-ui/core\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SingleChat from \"./SingleChat\";\r\nimport { getSingleChat, openCreateGuest, closeCreateGuest, setSenderName, setSenderType } from \"./singleChatActions\";\r\nimport { openNotification } from \"../../Notification/notificationActions\";\r\nimport MessageContainer from \"../../Message/MessageContainer\";\r\nimport { isLogged, getUsername } from \"../../Auth/authService\";\r\nimport CreateGuest from \"./CreateGuest\";\r\n\r\nclass SingleChatContainer extends Component {\r\n\r\n    componentDidMount() {\r\n\r\n        const chatId = this.props.location.state.chatId;\r\n        // Get chat data\r\n        this.props.getSingleChat(chatId);\r\n\r\n        // If user is logged (the speaker of the chat), Set id of the logged user in the component state\r\n        if (isLogged()) {\r\n            console.log(\"is logged\");\r\n            getUsername().then((username) => {\r\n                console.log(\"username : \" + username);\r\n                username ? this.props.setSenderName(username) : console.log(\"speaker username not found\");\r\n                this.props.setSenderType(\"speaker\");\r\n            })\r\n        } else {\r\n            // else create a guest for this chat\r\n            this.props.openCreateGuest();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const chatId = this.props.match.params.chatId\r\n\r\n        console.log(this.props.SingleChat);\r\n\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"md\" style={{ minHeight: `calc(100vh - 150px)`, marginTop: 150}}>\r\n                <SingleChat SingleChat={this.props.SingleChat} />\r\n                <MessageContainer chatId={chatId} />\r\n                <CreateGuest open={this.props.SingleChat.showCreateGuest} openNotif={this.props.openNotification} chatId={this.props.SingleChat.id} closeForm={this.props.closeCreateGuest} setSenderName={this.props.setSenderName} setSenderType={this.props.setSenderType} />\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({ SingleChat: state.SingleChat })\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getSingleChat: (code) => dispatch(getSingleChat(code)),\r\n    openNotification: (messages, severity) => dispatch(openNotification(messages, severity)),\r\n    openCreateGuest: () => dispatch(openCreateGuest()),\r\n    closeCreateGuest: () => dispatch(closeCreateGuest()),\r\n    setSenderName: (senderName) => dispatch(setSenderName(senderName)),\r\n    setSenderType: (senderType) => dispatch(setSenderType(senderType)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleChatContainer);","import { makeStyles } from '@material-ui/core/styles';\r\n\r\n// Styles for SignUp component using material ui theme\r\nconst signUpStyles = makeStyles(theme => ({\r\n    avatar: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(1),\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n        backgroundColor: theme.palette.secondary.main\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    card: {\r\n        width: \"100%\",\r\n        borderRadius: 10\r\n    },\r\n    cardContent: {\r\n        width: \"90%\",\r\n        margin: \"0 auto\"\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(3)\r\n    },\r\n    paper: {\r\n        width: \"100%\",\r\n        padding: 60\r\n    }\r\n}));\r\n\r\nexport default signUpStyles;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport label from '../../global/configs/label';\r\nimport { withFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Paper } from '@material-ui/core';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport signUpStyles from './signUpStyles';\r\n\r\n// Signup form component\r\nconst signUpForm = props => {\r\n    const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit\r\n    } = props;\r\n\r\n    const classes = signUpStyles()\r\n\r\n    return (\r\n        <Paper className={classes.paper} elevation={5}>\r\n            <Avatar className={classes.avatar}>\r\n                <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography className={classes.title} component=\"h1\" variant=\"h5\">\r\n                Inscription\r\n                    </Typography>\r\n            <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n                <TextField\r\n                    id=\"username\"\r\n                    label={label.username}\r\n                    value={values.username}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.username ? errors.username : \"\"}\r\n                    error={touched.username && Boolean(errors.username)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    autoFocus\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <TextField\r\n                    id=\"password\"\r\n                    label={label.password}\r\n                    type=\"password\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.password ? errors.password : \"\"}\r\n                    error={touched.password && Boolean(errors.password)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <TextField\r\n                    id=\"confirmPassword\"\r\n                    label={label.confirmPassword}\r\n                    type=\"password\"\r\n                    value={values.confirmPassword}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    helperText={touched.confirmPassword ? errors.confirmPassword : \"\"}\r\n                    error={touched.confirmPassword && Boolean(errors.confirmPassword)}\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    required\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    size=\"large\"\r\n                >\r\n                    S'inscrire\r\n                        </Button>\r\n\r\n            </form>\r\n            <RouterLink to={\"/connexion\"}>\r\n                <Link component=\"span\" variant=\"body2\">Vous avez déjà un compte? Connectez-vous</Link>\r\n            </RouterLink>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n// Signup form component with formik validation\r\nconst SignUp = withFormik({\r\n    mapPropsToValues: ({\r\n        username,\r\n        password,\r\n        confirmPassword,\r\n    }) => {\r\n        return {\r\n            username: username || \"\",\r\n            password: password || \"\",\r\n            confirmPassword: confirmPassword || \"\",\r\n        };\r\n    },\r\n\r\n    validationSchema: Yup.object().shape({\r\n        username: Yup.string()\r\n            .required(\"Entrez votre identifiant\"),\r\n        password: Yup.string()\r\n            .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[.:;?|/\\\\{}<>!@#$%^&*()_+-=])(?=.{8,})/, \"Doit contenir au moins 8 caractères, 1 minuscule, 1 majuscule, 1 chiffres, 1 caractère spécial\")\r\n            .required(\"Entrez votre mot de passe\"),\r\n        confirmPassword: Yup.string()\r\n            .required(\"Confirmez votre mot de passe\")\r\n            .oneOf([Yup.ref(\"password\")], \"Le mot de passe ne correspond pas\")\r\n    }),\r\n\r\n    handleSubmit: (values, { props, resetForm }) => {\r\n\r\n        const { createSpeaker, history } = props\r\n        const speaker = Object.assign({}, values)\r\n        delete speaker.confirmPassword\r\n\r\n        createSpeaker(speaker).then(requestSuccess => {\r\n            if (requestSuccess) {\r\n                resetForm()\r\n                history.push(\"/connexion\")\r\n            }\r\n        })\r\n\r\n    }\r\n})(signUpForm);\r\n\r\nexport default withRouter(SignUp);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SignUp from \"./SignUp\";\r\nimport { createSpeaker } from \"./signUpActions\";\r\nimport AuthContainer from '../AuthContainer';\r\n\r\nconst SignUpContainer = ({ createSpeaker }) => (\r\n    <AuthContainer maxWidth=\"md\" >\r\n        <SignUp createSpeaker={createSpeaker} />\r\n    </AuthContainer>\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => ({ createSpeaker: (speaker) => dispatch(createSpeaker(speaker)) });\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUpContainer)","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { rootReducer } from './rootReducer';\r\n\r\n// Configure redux store\r\nexport default function configureStore(preloadedState) {\r\n    return createStore(\r\n        rootReducer,\r\n        preloadedState,\r\n        applyMiddleware(thunkMiddleware)\r\n    );\r\n}","import axios from 'axios';\r\nimport listServerErrors from \"../../global/functions/listServerErrors\";\r\nimport { openNotification } from \"../../Notification/notificationActions\";\r\n\r\n// Action to create a new speaker\r\nexport function createSpeaker(speaker) {\r\n    \r\n    return async (dispatch) => {\r\n        \r\n        const speakerJson = JSON.stringify(speaker);\r\n        \r\n        try {\r\n            await axios.post('http://localhost:8081/api/speakers', speakerJson, { headers: { 'Content-Type': 'application/json' } })\r\n            dispatch(openNotification(\"Compte crée avec succès\", \"success\"))\r\n            return true\r\n        }\r\n        catch (error) {\r\n            const statusCode = error.response.status\r\n            const data = error.response.data\r\n            const errorMessages = listServerErrors(statusCode, data);\r\n            dispatch(openNotification(errorMessages, \"error\"))\r\n            return false\r\n        }\r\n    }\r\n}","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport NavbarContainer from './Navbar/NavbarContainer';\r\nimport Home from '../Home/Home';\r\nimport PrivateRoute from './privateRoute';\r\nimport PageNotFound from './PageNotFound/PageNotFound';\r\nimport LoginContainer from '../Auth/Login/LoginContainer';\r\nimport ChatsContainer from '../Chat/ChatsContainer';\r\nimport SingleChatContainer from '../Chat/SingleChat/SingleChatContainer';\r\nimport SignupContainer from \"../Auth/SignUp/SignUpContainer\";\r\n\r\n// Routes located in the main section of the page\r\nconst Routes = () => (\r\n    <Router>\r\n        <NavbarContainer />\r\n        <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path=\"/inscription\" component={SignupContainer} />\r\n            <Route exact path=\"/connexion\" component={LoginContainer} />\r\n            <PrivateRoute exact path=\"/chats\" component={ChatsContainer} />\r\n            <Route exact path=\"/chats/:code\" component={SingleChatContainer} />\r\n            <Route path=\"*\" component={PageNotFound} />\r\n        </Switch>\r\n    </Router>\r\n)\r\n\r\nexport default Routes;","import React from 'react';\r\nimport Footer from './Footer/Footer';\r\nimport { Provider as ReduxStoreProvider } from 'react-redux';\r\nimport configureStore from './configure-store';\r\nimport NotificationContainer from '../Notification/NotificationContainer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Routes from './Routes';\r\n\r\n// configure redux store\r\nconst store = configureStore();\r\n\r\n// App component\r\nconst App = () => (\r\n    <ReduxStoreProvider store={store}>\r\n        <CssBaseline />\r\n        <Routes />\r\n        <NotificationContainer />\r\n        <Footer />\r\n    </ReduxStoreProvider>\r\n)\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App/App';\r\n\r\n// Root component to charge\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}